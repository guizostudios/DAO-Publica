{
	"id": "d440ca8781c7f69d218d04bbd90fcc82",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DAO.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\nimport \"./Title.sol\";\r\n\r\ncontract DAO is Ownable, ReentrancyGuard {\r\n    struct Project {\r\n        address payable beneficiary;\r\n        uint256 amountRequested;\r\n        uint256 votes;\r\n        bool executed;\r\n    }\r\n\r\n    mapping(uint256 => Project) public projects;\r\n    uint256 public projectsCount;\r\n\r\n    TitleRegistry public titleRegistry;\r\n    ERC20 public treasuryToken;\r\n\r\n    event ProjectCreated(uint256 projectId, address beneficiary, uint256 amountRequested);\r\n    event Voted(uint256 projectId, address voter, uint256 votes);\r\n    event ProjectExecuted(uint256 projectId, address executor);\r\n\r\n    modifier onlyRegisteredVoter() {\r\n        require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\");\r\n        require(\r\n            keccak256(abi.encodePacked(titleRegistry.voterToCity(msg.sender))) == keccak256(abi.encodePacked(getCity())),\r\n            \"Voter not from this city\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyProjectVoter(uint256 _projectId) {\r\n        require(projects[_projectId].votes > 0, \"No votes for this project\");\r\n        require(!projects[_projectId].executed, \"Project already executed\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyProjectBeneficiary(uint256 _projectId) {\r\n        require(msg.sender == projects[_projectId].beneficiary, \"Not the project beneficiary\");\r\n        _;\r\n    }\r\n\r\n    constructor(TitleRegistry _titleRegistry, ERC20 _treasuryToken, address initialOwner) \r\n    Ownable(initialOwner) {\r\n        titleRegistry = _titleRegistry;\r\n        treasuryToken = _treasuryToken;\r\n    }\r\n\r\n    function createProject(address payable _beneficiary, uint256 _amountRequested) external onlyRegisteredVoter nonReentrant {\r\n        uint256 projectId = projectsCount++;\r\n        projects[projectId] = Project(_beneficiary, _amountRequested, 0, false);\r\n\r\n        emit ProjectCreated(projectId, _beneficiary, _amountRequested);\r\n    }\r\n\r\n    function vote(uint256 _projectId, uint256 _votes) external onlyRegisteredVoter onlyProjectVoter(_projectId) nonReentrant {\r\n        require(treasuryToken.transferFrom(msg.sender, address(this), _votes), \"Vote transfer failed\");\r\n\r\n        projects[_projectId].votes += _votes;\r\n\r\n        emit Voted(_projectId, msg.sender, _votes);\r\n    }\r\n\r\n    function executeProject(uint256 _projectId) external onlyProjectBeneficiary(_projectId) nonReentrant {\r\n        require(!projects[_projectId].executed, \"Project already executed\");\r\n        require(projects[_projectId].votes > (treasuryToken.totalSupply() / 4), \"Votes not enough\");\r\n\r\n        projects[_projectId].executed = true;\r\n        projects[_projectId].beneficiary.transfer(projects[_projectId].amountRequested);\r\n\r\n        emit ProjectExecuted(_projectId, msg.sender);\r\n    }\r\n\r\n    function getCity() public view returns (string memory) {\r\n        return titleRegistry.voterToCity(msg.sender);\r\n    }\r\n}\r\n"
			},
			"contracts/Title.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TitleRegistry is Ownable {\r\n    mapping(address => bool) public isRegistered;\r\n    mapping(address => string) public voterToCity;\r\n\r\n    constructor(address initialOwner) \r\n    Ownable(initialOwner) {}\r\n\r\n    function registerVoter(address _voter, string memory _city) external onlyOwner {\r\n        isRegistered[_voter] = true;\r\n        voterToCity[_voter] = _city;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 5000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DAO.sol": {
				"DAO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract TitleRegistry",
									"name": "_titleRegistry",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "_treasuryToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "projectId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountRequested",
									"type": "uint256"
								}
							],
							"name": "ProjectCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "projectId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "executor",
									"type": "address"
								}
							],
							"name": "ProjectExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "projectId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountRequested",
									"type": "uint256"
								}
							],
							"name": "createProject",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_projectId",
									"type": "uint256"
								}
							],
							"name": "executeProject",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCity",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "projects",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountRequested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "projectsCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "titleRegistry",
							"outputs": [
								{
									"internalType": "contract TitleRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_projectId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_votes",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DAO.sol\":263:3107  contract DAO is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DAO.sol\":1595:1799  constructor(TitleRegistry _titleRegistry, ERC20 _treasuryToken, address initialOwner) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/DAO.sol\":1695:1707  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":915:966   */\n  mstore\n    /* \"#utility.yul\":888:906   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/DAO.sol\":1720:1733  titleRegistry */\n  0x04\n    /* \"contracts/DAO.sol\":1720:1750  titleRegistry = _titleRegistry */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/DAO.sol\":1761:1774  treasuryToken */\n  0x05\n    /* \"contracts/DAO.sol\":1761:1791  treasuryToken = _treasuryToken */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/DAO.sol\":263:3107  contract DAO is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:160   */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":104:135   */\n  dup2\n  and\n    /* \"#utility.yul\":94:136   */\n  dup2\n  eq\n    /* \"#utility.yul\":84:154   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":147:148   */\n  dup1\n    /* \"#utility.yul\":140:152   */\n  revert\n    /* \"#utility.yul\":84:154   */\ntag_20:\n    /* \"#utility.yul\":14:160   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":165:764   */\ntag_3:\n    /* \"#utility.yul\":288:294   */\n  0x00\n    /* \"#utility.yul\":296:302   */\n  dup1\n    /* \"#utility.yul\":304:310   */\n  0x00\n    /* \"#utility.yul\":357:359   */\n  0x60\n    /* \"#utility.yul\":345:354   */\n  dup5\n    /* \"#utility.yul\":336:343   */\n  dup7\n    /* \"#utility.yul\":332:355   */\n  sub\n    /* \"#utility.yul\":328:360   */\n  slt\n    /* \"#utility.yul\":325:377   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":373:374   */\n  0x00\n    /* \"#utility.yul\":370:371   */\n  dup1\n    /* \"#utility.yul\":363:375   */\n  revert\n    /* \"#utility.yul\":325:377   */\ntag_22:\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":399:415   */\n  mload\n    /* \"#utility.yul\":424:470   */\n  tag_23\n    /* \"#utility.yul\":464:469   */\n  dup2\n    /* \"#utility.yul\":424:470   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":539:541   */\n  0x20\n    /* \"#utility.yul\":524:542   */\n  dup6\n  add\n    /* \"#utility.yul\":518:543   */\n  mload\n    /* \"#utility.yul\":489:494   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":552:600   */\n  tag_24\n    /* \"#utility.yul\":518:543   */\n  dup2\n    /* \"#utility.yul\":552:600   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":671:673   */\n  0x40\n    /* \"#utility.yul\":656:674   */\n  dup6\n  add\n    /* \"#utility.yul\":650:675   */\n  mload\n    /* \"#utility.yul\":619:626   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":684:732   */\n  tag_25\n    /* \"#utility.yul\":650:675   */\n  dup2\n    /* \"#utility.yul\":684:732   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":751:758   */\n  dup1\n    /* \"#utility.yul\":741:758   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":165:764   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":769:972   */\ntag_18:\n    /* \"contracts/DAO.sol\":263:3107  contract DAO is Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DAO.sol\":263:3107  contract DAO is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9f054ba1\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xc73b302e\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xc73b302e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe82d6572\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x9f054ba1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb2ce514b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb384abef\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x67f14276\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x67f14276\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x0379915d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x107046bd\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DAO.sol\":2986:3104  function getCity() public view returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DAO.sol\":462:505  mapping(uint256 => Project) public projects */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap3\n      swap2\n      swap1\n      0xff\n      and\n      dup5\n      jump\n    tag_21:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1185:1227   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1173:1228   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":1155:1229   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1260:1262   */\n      0x20\n        /* \"#utility.yul\":1245:1263   */\n      dup6\n      add\n        /* \"#utility.yul\":1238:1272   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1288:1306   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1281:1315   */\n      mstore\n        /* \"#utility.yul\":1358:1372   */\n      iszero\n        /* \"#utility.yul\":1351:1373   */\n      iszero\n        /* \"#utility.yul\":1346:1348   */\n      0x60\n        /* \"#utility.yul\":1331:1349   */\n      dup3\n      add\n        /* \"#utility.yul\":1324:1374   */\n      mstore\n        /* \"#utility.yul\":1142:1145   */\n      0x80\n        /* \"#utility.yul\":1127:1146   */\n      add\n        /* \"contracts/DAO.sol\":462:505  mapping(uint256 => Project) public projects */\n      tag_19\n        /* \"#utility.yul\":914:1380   */\n      jump\n        /* \"contracts/DAO.sol\":2493:2978  function executeProject(uint256 _projectId) external onlyProjectBeneficiary(_projectId) nonReentrant {... */\n    tag_5:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_27\n      tag_31\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1561:1603   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1549:1604   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1531:1605   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1519:1521   */\n      0x20\n        /* \"#utility.yul\":1504:1522   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_19\n        /* \"#utility.yul\":1385:1611   */\n      jump\n        /* \"contracts/DAO.sol\":549:583  TitleRegistry public titleRegistry */\n    tag_8:\n      sload(0x04)\n      tag_32\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"contracts/DAO.sol\":590:616  ERC20 public treasuryToken */\n    tag_9:\n      sload(0x05)\n      tag_32\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"contracts/DAO.sol\":2147:2485  function vote(uint256 _projectId, uint256 _votes) external onlyRegisteredVoter onlyProjectVoter(_projectId) nonReentrant {... */\n    tag_10:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"contracts/DAO.sol\":512:540  uint256 public projectsCount */\n    tag_11:\n      tag_48\n      sload(0x03)\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":2512:2537   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2500:2502   */\n      0x20\n        /* \"#utility.yul\":2485:2503   */\n      add\n        /* \"contracts/DAO.sol\":512:540  uint256 public projectsCount */\n      tag_19\n        /* \"#utility.yul\":2366:2543   */\n      jump\n        /* \"contracts/DAO.sol\":1807:2139  function createProject(address payable _beneficiary, uint256 _amountRequested) external onlyRegisteredVoter nonReentrant {... */\n    tag_12:\n      tag_27\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_27\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"contracts/DAO.sol\":2986:3104  function getCity() public view returns (string memory) {... */\n    tag_18:\n        /* \"contracts/DAO.sol\":3059:3072  titleRegistry */\n      0x04\n      dup1\n      sload\n        /* \"contracts/DAO.sol\":3059:3096  titleRegistry.voterToCity(msg.sender) */\n      mload(0x40)\n      0x2146671f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":3085:3095  msg.sender */\n      caller\n        /* \"contracts/DAO.sol\":3059:3096  titleRegistry.voterToCity(msg.sender) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1531:1605   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/DAO.sol\":3026:3039  string memory */\n      0x60\n      swap2\n        /* \"contracts/DAO.sol\":3059:3072  titleRegistry */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/DAO.sol\":3059:3084  titleRegistry.voterToCity */\n      0x2146671f\n      swap1\n        /* \"#utility.yul\":1504:1522   */\n      0x24\n      add\n        /* \"contracts/DAO.sol\":3059:3096  titleRegistry.voterToCity(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_64\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/DAO.sol\":3052:3096  return titleRegistry.voterToCity(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DAO.sol\":2986:3104  function getCity() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DAO.sol\":2493:2978  function executeProject(uint256 _projectId) external onlyProjectBeneficiary(_projectId) nonReentrant {... */\n    tag_29:\n        /* \"contracts/DAO.sol\":1503:1523  projects[_projectId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":1503:1511  projects */\n      0x02\n        /* \"contracts/DAO.sol\":1503:1523  projects[_projectId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DAO.sol\":1503:1535  projects[_projectId].beneficiary */\n      sload\n        /* \"contracts/DAO.sol\":1503:1523  projects[_projectId] */\n      dup2\n      swap1\n        /* \"contracts/DAO.sol\":1503:1535  projects[_projectId].beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DAO.sol\":1489:1499  msg.sender */\n      caller\n        /* \"contracts/DAO.sol\":1489:1535  msg.sender == projects[_projectId].beneficiary */\n      eq\n        /* \"contracts/DAO.sol\":1481:1567  require(msg.sender == projects[_projectId].beneficiary, \"Not the project beneficiary\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4663:4665   */\n      0x20\n        /* \"contracts/DAO.sol\":1481:1567  require(msg.sender == projects[_projectId].beneficiary, \"Not the project beneficiary\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4645:4666   */\n      mstore\n        /* \"#utility.yul\":4702:4704   */\n      0x1b\n        /* \"#utility.yul\":4682:4700   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4675:4705   */\n      mstore\n        /* \"#utility.yul\":4741:4770   */\n      0x4e6f74207468652070726f6a6563742062656e65666963696172790000000000\n        /* \"#utility.yul\":4721:4739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4714:4771   */\n      mstore\n        /* \"#utility.yul\":4788:4806   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":1481:1567  require(msg.sender == projects[_projectId].beneficiary, \"Not the project beneficiary\") */\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/DAO.sol\":2614:2634  projects[_projectId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":2614:2622  projects */\n      0x02\n        /* \"contracts/DAO.sol\":2614:2634  projects[_projectId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DAO.sol\":2614:2643  projects[_projectId].executed */\n      0x03\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/DAO.sol\":2613:2643  !projects[_projectId].executed */\n      iszero\n        /* \"contracts/DAO.sol\":2605:2672  require(!projects[_projectId].executed, \"Project already executed\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5019:5021   */\n      0x20\n        /* \"contracts/DAO.sol\":2605:2672  require(!projects[_projectId].executed, \"Project already executed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5001:5022   */\n      mstore\n        /* \"#utility.yul\":5058:5060   */\n      0x18\n        /* \"#utility.yul\":5038:5056   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5031:5061   */\n      mstore\n        /* \"#utility.yul\":5097:5123   */\n      0x50726f6a65637420616c72656164792065786563757465640000000000000000\n        /* \"#utility.yul\":5077:5095   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5070:5124   */\n      mstore\n        /* \"#utility.yul\":5141:5159   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":2605:2672  require(!projects[_projectId].executed, \"Project already executed\") */\n      tag_68\n        /* \"#utility.yul\":4817:5165   */\n      jump\n        /* \"contracts/DAO.sol\":2605:2672  require(!projects[_projectId].executed, \"Project already executed\") */\n    tag_74:\n        /* \"contracts/DAO.sol\":2721:2734  treasuryToken */\n      sload(0x05)\n        /* \"contracts/DAO.sol\":2721:2748  treasuryToken.totalSupply() */\n      0x40\n      dup1\n      mload\n      0x18160ddd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/DAO.sol\":2751:2752  4 */\n      0x04\n      swap3\n        /* \"contracts/DAO.sol\":2721:2734  treasuryToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap2\n        /* \"contracts/DAO.sol\":2721:2746  treasuryToken.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"contracts/DAO.sol\":2721:2748  treasuryToken.totalSupply() */\n      dup2\n      dup6\n      add\n      swap2\n      0x20\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      dup7\n      add\n      dup2\n        /* \"contracts/DAO.sol\":2721:2734  treasuryToken */\n      dup7\n        /* \"contracts/DAO.sol\":2721:2748  treasuryToken.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/DAO.sol\":2721:2752  treasuryToken.totalSupply() / 4 */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/DAO.sol\":2691:2711  projects[_projectId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":2691:2699  projects */\n      0x02\n        /* \"contracts/DAO.sol\":2691:2711  projects[_projectId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/DAO.sol\":2691:2717  projects[_projectId].votes */\n      add\n      sload\n        /* \"contracts/DAO.sol\":2691:2753  projects[_projectId].votes > (treasuryToken.totalSupply() / 4) */\n      gt\n        /* \"contracts/DAO.sol\":2683:2774  require(projects[_projectId].votes > (treasuryToken.totalSupply() / 4), \"Votes not enough\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6029:6031   */\n      0x20\n        /* \"contracts/DAO.sol\":2683:2774  require(projects[_projectId].votes > (treasuryToken.totalSupply() / 4), \"Votes not enough\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6011:6032   */\n      mstore\n        /* \"#utility.yul\":6068:6070   */\n      0x10\n        /* \"#utility.yul\":6048:6066   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6041:6071   */\n      mstore\n        /* \"#utility.yul\":6107:6125   */\n      0x566f746573206e6f7420656e6f75676800000000000000000000000000000000\n        /* \"#utility.yul\":6087:6105   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6080:6126   */\n      mstore\n        /* \"#utility.yul\":6143:6161   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":2683:2774  require(projects[_projectId].votes > (treasuryToken.totalSupply() / 4), \"Votes not enough\") */\n      tag_68\n        /* \"#utility.yul\":5827:6167   */\n      jump\n        /* \"contracts/DAO.sol\":2683:2774  require(projects[_projectId].votes > (treasuryToken.totalSupply() / 4), \"Votes not enough\") */\n    tag_83:\n        /* \"contracts/DAO.sol\":2787:2807  projects[_projectId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":2787:2795  projects */\n      0x02\n        /* \"contracts/DAO.sol\":2787:2807  projects[_projectId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/DAO.sol\":2787:2816  projects[_projectId].executed */\n      0x03\n      dup2\n      add\n        /* \"contracts/DAO.sol\":2787:2823  projects[_projectId].executed = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n        /* \"contracts/DAO.sol\":2819:2823  true */\n      0x01\n        /* \"contracts/DAO.sol\":2787:2823  projects[_projectId].executed = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DAO.sol\":2834:2866  projects[_projectId].beneficiary */\n      dup2\n      sload\n        /* \"contracts/DAO.sol\":2876:2912  projects[_projectId].amountRequested */\n      swap2\n      add\n      sload\n        /* \"contracts/DAO.sol\":2834:2913  projects[_projectId].beneficiary.transfer(projects[_projectId].amountRequested) */\n      swap2\n      mload\n        /* \"contracts/DAO.sol\":2834:2866  projects[_projectId].beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/DAO.sol\":2834:2913  projects[_projectId].beneficiary.transfer(projects[_projectId].amountRequested) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap3\n        /* \"contracts/DAO.sol\":2876:2912  projects[_projectId].amountRequested */\n      swap2\n        /* \"contracts/DAO.sol\":2834:2913  projects[_projectId].beneficiary.transfer(projects[_projectId].amountRequested) */\n      swap1\n      dup2\n        /* \"contracts/DAO.sol\":2787:2807  projects[_projectId] */\n      dup2\n        /* \"contracts/DAO.sol\":2834:2913  projects[_projectId].beneficiary.transfer(projects[_projectId].amountRequested) */\n      dup2\n        /* \"contracts/DAO.sol\":2876:2912  projects[_projectId].amountRequested */\n      dup6\n        /* \"contracts/DAO.sol\":2834:2866  projects[_projectId].beneficiary */\n      dup9\n        /* \"contracts/DAO.sol\":2834:2913  projects[_projectId].beneficiary.transfer(projects[_projectId].amountRequested) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n        /* \"contracts/DAO.sol\":2931:2970  ProjectExecuted(_projectId, msg.sender) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6346:6371   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":2959:2969  msg.sender */\n      caller\n        /* \"#utility.yul\":6402:6404   */\n      0x20\n        /* \"#utility.yul\":6387:6405   */\n      dup3\n      add\n        /* \"#utility.yul\":6380:6463   */\n      mstore\n        /* \"contracts/DAO.sol\":2931:2970  ProjectExecuted(_projectId, msg.sender) */\n      0x79f124991cfe2130be13599c74373fd040b0ead93c41b26aedbe1a6e6f2844c3\n      swap2\n        /* \"#utility.yul\":6319:6337   */\n      add\n        /* \"contracts/DAO.sol\":2931:2970  ProjectExecuted(_projectId, msg.sender) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_90:\n        /* \"contracts/DAO.sol\":2493:2978  function executeProject(uint256 _projectId) external onlyProjectBeneficiary(_projectId) nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DAO.sol\":2147:2485  function vote(uint256 _projectId, uint256 _votes) external onlyRegisteredVoter onlyProjectVoter(_projectId) nonReentrant {... */\n    tag_47:\n        /* \"contracts/DAO.sol\":901:914  titleRegistry */\n      0x04\n      dup1\n      sload\n        /* \"contracts/DAO.sol\":901:939  titleRegistry.isRegistered(msg.sender) */\n      mload(0x40)\n      0xc3c5a54700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/DAO.sol\":901:939  titleRegistry.isRegistered(msg.sender) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1531:1605   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/DAO.sol\":901:914  titleRegistry */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"contracts/DAO.sol\":901:927  titleRegistry.isRegistered */\n      0xc3c5a547\n      swap1\n        /* \"#utility.yul\":1504:1522   */\n      0x24\n      add\n        /* \"contracts/DAO.sol\":901:939  titleRegistry.isRegistered(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/DAO.sol\":893:966  require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6958:6960   */\n      0x20\n        /* \"contracts/DAO.sol\":893:966  require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6940:6961   */\n      mstore\n        /* \"#utility.yul\":6997:6999   */\n      0x16\n        /* \"#utility.yul\":6977:6995   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6970:7000   */\n      mstore\n        /* \"#utility.yul\":7036:7060   */\n      0x4e6f742061207265676973746572656420766f74657200000000000000000000\n        /* \"#utility.yul\":7016:7034   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7009:7061   */\n      mstore\n        /* \"#utility.yul\":7078:7096   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":893:966  require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\") */\n      tag_68\n        /* \"#utility.yul\":6756:7102   */\n      jump\n        /* \"contracts/DAO.sol\":893:966  require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\") */\n    tag_105:\n        /* \"contracts/DAO.sol\":1096:1105  getCity() */\n      tag_108\n        /* \"contracts/DAO.sol\":1096:1103  getCity */\n      tag_18\n        /* \"contracts/DAO.sol\":1096:1105  getCity() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/DAO.sol\":1079:1106  abi.encodePacked(getCity()) */\n      add(0x20, mload(0x40))\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/DAO.sol\":1069:1107  keccak256(abi.encodePacked(getCity())) */\n      dup1\n      mload\n        /* \"contracts/DAO.sol\":1079:1106  abi.encodePacked(getCity()) */\n      0x20\n        /* \"contracts/DAO.sol\":1069:1107  keccak256(abi.encodePacked(getCity())) */\n      swap1\n      swap2\n      add\n      keccak256\n        /* \"contracts/DAO.sol\":1026:1039  titleRegistry */\n      0x04\n      dup1\n      sload\n        /* \"contracts/DAO.sol\":1026:1063  titleRegistry.voterToCity(msg.sender) */\n      0x2146671f00000000000000000000000000000000000000000000000000000000\n      dup5\n      mstore\n        /* \"contracts/DAO.sol\":1052:1062  msg.sender */\n      caller\n        /* \"contracts/DAO.sol\":1026:1063  titleRegistry.voterToCity(msg.sender) */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":1531:1605   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DAO.sol\":1069:1107  keccak256(abi.encodePacked(getCity())) */\n      swap1\n      swap2\n        /* \"contracts/DAO.sol\":1026:1039  titleRegistry */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/DAO.sol\":1026:1051  titleRegistry.voterToCity */\n      0x2146671f\n      swap1\n        /* \"#utility.yul\":1504:1522   */\n      0x24\n      add\n        /* \"contracts/DAO.sol\":1026:1063  titleRegistry.voterToCity(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_114\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_65\n      jump\t// in\n    tag_114:\n        /* \"contracts/DAO.sol\":1009:1064  abi.encodePacked(titleRegistry.voterToCity(msg.sender)) */\n      add(0x20, mload(0x40))\n      tag_115\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DAO.sol\":999:1065  keccak256(abi.encodePacked(titleRegistry.voterToCity(msg.sender))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DAO.sol\":999:1107  keccak256(abi.encodePacked(titleRegistry.voterToCity(msg.sender))) == keccak256(abi.encodePacked(getCity())) */\n      eq\n        /* \"contracts/DAO.sol\":977:1159  require(... */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7603:7605   */\n      0x20\n        /* \"contracts/DAO.sol\":977:1159  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7585:7606   */\n      mstore\n        /* \"#utility.yul\":7642:7644   */\n      0x18\n        /* \"#utility.yul\":7622:7640   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7615:7645   */\n      mstore\n        /* \"#utility.yul\":7681:7707   */\n      0x566f746572206e6f742066726f6d207468697320636974790000000000000000\n        /* \"#utility.yul\":7661:7679   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7654:7708   */\n      mstore\n        /* \"#utility.yul\":7725:7743   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":977:1159  require(... */\n      tag_68\n        /* \"#utility.yul\":7401:7749   */\n      jump\n        /* \"contracts/DAO.sol\":977:1159  require(... */\n    tag_116:\n        /* \"contracts/DAO.sol\":1281:1282  0 */\n      0x00\n        /* \"contracts/DAO.sol\":1252:1272  projects[_projectId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":1252:1260  projects */\n      0x02\n        /* \"contracts/DAO.sol\":1252:1272  projects[_projectId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/DAO.sol\":1252:1278  projects[_projectId].votes */\n      add\n      sload\n        /* \"contracts/DAO.sol\":2243:2253  _projectId */\n      dup3\n      swap1\n        /* \"contracts/DAO.sol\":1244:1312  require(projects[_projectId].votes > 0, \"No votes for this project\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7956:7958   */\n      0x20\n        /* \"contracts/DAO.sol\":1244:1312  require(projects[_projectId].votes > 0, \"No votes for this project\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7938:7959   */\n      mstore\n        /* \"#utility.yul\":7995:7997   */\n      0x19\n        /* \"#utility.yul\":7975:7993   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7968:7998   */\n      mstore\n        /* \"#utility.yul\":8034:8061   */\n      0x4e6f20766f74657320666f7220746869732070726f6a65637400000000000000\n        /* \"#utility.yul\":8014:8032   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8007:8062   */\n      mstore\n        /* \"#utility.yul\":8079:8097   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":1244:1312  require(projects[_projectId].votes > 0, \"No votes for this project\") */\n      tag_68\n        /* \"#utility.yul\":7754:8103   */\n      jump\n        /* \"contracts/DAO.sol\":1244:1312  require(projects[_projectId].votes > 0, \"No votes for this project\") */\n    tag_120:\n        /* \"contracts/DAO.sol\":1332:1352  projects[_projectId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":1332:1340  projects */\n      0x02\n        /* \"contracts/DAO.sol\":1332:1352  projects[_projectId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DAO.sol\":1332:1361  projects[_projectId].executed */\n      0x03\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/DAO.sol\":1331:1361  !projects[_projectId].executed */\n      iszero\n        /* \"contracts/DAO.sol\":1323:1390  require(!projects[_projectId].executed, \"Project already executed\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5019:5021   */\n      0x20\n        /* \"contracts/DAO.sol\":1323:1390  require(!projects[_projectId].executed, \"Project already executed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5001:5022   */\n      mstore\n        /* \"#utility.yul\":5058:5060   */\n      0x18\n        /* \"#utility.yul\":5038:5056   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5031:5061   */\n      mstore\n        /* \"#utility.yul\":5097:5123   */\n      0x50726f6a65637420616c72656164792065786563757465640000000000000000\n        /* \"#utility.yul\":5077:5095   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5070:5124   */\n      mstore\n        /* \"#utility.yul\":5141:5159   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":1323:1390  require(!projects[_projectId].executed, \"Project already executed\") */\n      tag_68\n        /* \"#utility.yul\":4817:5165   */\n      jump\n        /* \"contracts/DAO.sol\":1323:1390  require(!projects[_projectId].executed, \"Project already executed\") */\n    tag_123:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_126\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/DAO.sol\":2287:2300  treasuryToken */\n      sload(0x05)\n        /* \"contracts/DAO.sol\":2287:2348  treasuryToken.transferFrom(msg.sender, address(this), _votes) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":2314:2324  msg.sender */\n      caller\n        /* \"contracts/DAO.sol\":2287:2348  treasuryToken.transferFrom(msg.sender, address(this), _votes) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8371:8405   */\n      mstore\n        /* \"contracts/DAO.sol\":2334:2338  this */\n      address\n        /* \"#utility.yul\":8421:8439   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8414:8457   */\n      mstore\n        /* \"#utility.yul\":8473:8491   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8466:8500   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/DAO.sol\":2287:2300  treasuryToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/DAO.sol\":2287:2313  treasuryToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":8283:8301   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":2287:2348  treasuryToken.transferFrom(msg.sender, address(this), _votes) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_132:\n        /* \"contracts/DAO.sol\":2279:2373  require(treasuryToken.transferFrom(msg.sender, address(this), _votes), \"Vote transfer failed\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8713:8715   */\n      0x20\n        /* \"contracts/DAO.sol\":2279:2373  require(treasuryToken.transferFrom(msg.sender, address(this), _votes), \"Vote transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8695:8716   */\n      mstore\n        /* \"#utility.yul\":8752:8754   */\n      0x14\n        /* \"#utility.yul\":8732:8750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8725:8755   */\n      mstore\n        /* \"#utility.yul\":8791:8813   */\n      0x566f7465207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":8771:8789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8764:8814   */\n      mstore\n        /* \"#utility.yul\":8831:8849   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":2279:2373  require(treasuryToken.transferFrom(msg.sender, address(this), _votes), \"Vote transfer failed\") */\n      tag_68\n        /* \"#utility.yul\":8511:8855   */\n      jump\n        /* \"contracts/DAO.sol\":2279:2373  require(treasuryToken.transferFrom(msg.sender, address(this), _votes), \"Vote transfer failed\") */\n    tag_133:\n        /* \"contracts/DAO.sol\":2386:2406  projects[_projectId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":2386:2394  projects */\n      0x02\n        /* \"contracts/DAO.sol\":2386:2406  projects[_projectId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/DAO.sol\":2386:2412  projects[_projectId].votes */\n      add\n        /* \"contracts/DAO.sol\":2386:2422  projects[_projectId].votes += _votes */\n      dup1\n      sload\n        /* \"contracts/DAO.sol\":2416:2422  _votes */\n      dup5\n      swap3\n        /* \"contracts/DAO.sol\":2386:2406  projects[_projectId] */\n      swap1\n        /* \"contracts/DAO.sol\":2386:2422  projects[_projectId].votes += _votes */\n      tag_136\n      swap1\n        /* \"contracts/DAO.sol\":2416:2422  _votes */\n      dup5\n      swap1\n        /* \"contracts/DAO.sol\":2386:2422  projects[_projectId].votes += _votes */\n      tag_137\n      jump\t// in\n    tag_136:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DAO.sol\":2440:2477  Voted(_projectId, msg.sender, _votes) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9192:9217   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":2458:2468  msg.sender */\n      caller\n        /* \"#utility.yul\":9248:9250   */\n      0x20\n        /* \"#utility.yul\":9233:9251   */\n      dup3\n      add\n        /* \"#utility.yul\":9226:9309   */\n      mstore\n        /* \"#utility.yul\":9325:9343   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":9318:9352   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DAO.sol\":2440:2477  Voted(_projectId, msg.sender, _votes) */\n      0x1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e\n      swap1\n        /* \"#utility.yul\":9180:9182   */\n      0x60\n        /* \"#utility.yul\":9165:9183   */\n      add\n        /* \"contracts/DAO.sol\":2440:2477  Voted(_projectId, msg.sender, _votes) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_140:\n        /* \"contracts/DAO.sol\":1170:1171  _ */\n      pop\n        /* \"contracts/DAO.sol\":2147:2485  function vote(uint256 _projectId, uint256 _votes) external onlyRegisteredVoter onlyProjectVoter(_projectId) nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DAO.sol\":1807:2139  function createProject(address payable _beneficiary, uint256 _amountRequested) external onlyRegisteredVoter nonReentrant {... */\n    tag_55:\n        /* \"contracts/DAO.sol\":901:914  titleRegistry */\n      0x04\n      dup1\n      sload\n        /* \"contracts/DAO.sol\":901:939  titleRegistry.isRegistered(msg.sender) */\n      mload(0x40)\n      0xc3c5a54700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/DAO.sol\":901:939  titleRegistry.isRegistered(msg.sender) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1531:1605   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/DAO.sol\":901:914  titleRegistry */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"contracts/DAO.sol\":901:927  titleRegistry.isRegistered */\n      0xc3c5a547\n      swap1\n        /* \"#utility.yul\":1504:1522   */\n      0x24\n      add\n        /* \"contracts/DAO.sol\":901:939  titleRegistry.isRegistered(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_145:\n        /* \"contracts/DAO.sol\":893:966  require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6958:6960   */\n      0x20\n        /* \"contracts/DAO.sol\":893:966  require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6940:6961   */\n      mstore\n        /* \"#utility.yul\":6997:6999   */\n      0x16\n        /* \"#utility.yul\":6977:6995   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6970:7000   */\n      mstore\n        /* \"#utility.yul\":7036:7060   */\n      0x4e6f742061207265676973746572656420766f74657200000000000000000000\n        /* \"#utility.yul\":7016:7034   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7009:7061   */\n      mstore\n        /* \"#utility.yul\":7078:7096   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":893:966  require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\") */\n      tag_68\n        /* \"#utility.yul\":6756:7102   */\n      jump\n        /* \"contracts/DAO.sol\":893:966  require(titleRegistry.isRegistered(msg.sender), \"Not a registered voter\") */\n    tag_146:\n        /* \"contracts/DAO.sol\":1096:1105  getCity() */\n      tag_148\n        /* \"contracts/DAO.sol\":1096:1103  getCity */\n      tag_18\n        /* \"contracts/DAO.sol\":1096:1105  getCity() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/DAO.sol\":1079:1106  abi.encodePacked(getCity()) */\n      add(0x20, mload(0x40))\n      tag_149\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_149:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/DAO.sol\":1069:1107  keccak256(abi.encodePacked(getCity())) */\n      dup1\n      mload\n        /* \"contracts/DAO.sol\":1079:1106  abi.encodePacked(getCity()) */\n      0x20\n        /* \"contracts/DAO.sol\":1069:1107  keccak256(abi.encodePacked(getCity())) */\n      swap1\n      swap2\n      add\n      keccak256\n        /* \"contracts/DAO.sol\":1026:1039  titleRegistry */\n      0x04\n      dup1\n      sload\n        /* \"contracts/DAO.sol\":1026:1063  titleRegistry.voterToCity(msg.sender) */\n      0x2146671f00000000000000000000000000000000000000000000000000000000\n      dup5\n      mstore\n        /* \"contracts/DAO.sol\":1052:1062  msg.sender */\n      caller\n        /* \"contracts/DAO.sol\":1026:1063  titleRegistry.voterToCity(msg.sender) */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":1531:1605   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DAO.sol\":1069:1107  keccak256(abi.encodePacked(getCity())) */\n      swap1\n      swap2\n        /* \"contracts/DAO.sol\":1026:1039  titleRegistry */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/DAO.sol\":1026:1051  titleRegistry.voterToCity */\n      0x2146671f\n      swap1\n        /* \"#utility.yul\":1504:1522   */\n      0x24\n      add\n        /* \"contracts/DAO.sol\":1026:1063  titleRegistry.voterToCity(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_153\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_65\n      jump\t// in\n    tag_153:\n        /* \"contracts/DAO.sol\":1009:1064  abi.encodePacked(titleRegistry.voterToCity(msg.sender)) */\n      add(0x20, mload(0x40))\n      tag_154\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DAO.sol\":999:1065  keccak256(abi.encodePacked(titleRegistry.voterToCity(msg.sender))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DAO.sol\":999:1107  keccak256(abi.encodePacked(titleRegistry.voterToCity(msg.sender))) == keccak256(abi.encodePacked(getCity())) */\n      eq\n        /* \"contracts/DAO.sol\":977:1159  require(... */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7603:7605   */\n      0x20\n        /* \"contracts/DAO.sol\":977:1159  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7585:7606   */\n      mstore\n        /* \"#utility.yul\":7642:7644   */\n      0x18\n        /* \"#utility.yul\":7622:7640   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7615:7645   */\n      mstore\n        /* \"#utility.yul\":7681:7707   */\n      0x566f746572206e6f742066726f6d207468697320636974790000000000000000\n        /* \"#utility.yul\":7661:7679   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7654:7708   */\n      mstore\n        /* \"#utility.yul\":7725:7743   */\n      0x64\n      add\n        /* \"contracts/DAO.sol\":977:1159  require(... */\n      tag_68\n        /* \"#utility.yul\":7401:7749   */\n      jump\n        /* \"contracts/DAO.sol\":977:1159  require(... */\n    tag_155:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_158\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/DAO.sol\":1959:1972  projectsCount */\n      0x03\n        /* \"contracts/DAO.sol\":1959:1974  projectsCount++ */\n      dup1\n      sload\n        /* \"contracts/DAO.sol\":1939:1956  uint256 projectId */\n      0x00\n      swap2\n      dup3\n        /* \"contracts/DAO.sol\":1959:1974  projectsCount++ */\n      tag_160\n      dup4\n      tag_161\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/DAO.sol\":2007:2056  Project(_beneficiary, _amountRequested, 0, false) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup9\n      dup2\n      mstore\n      0x00\n      dup6\n      dup8\n      add\n      dup2\n      dup2\n      mstore\n      0x60\n      dup1\n      dup9\n      add\n      dup4\n      dup2\n      mstore\n        /* \"contracts/DAO.sol\":1985:2004  projects[projectId] */\n      dup11\n      dup5\n      mstore\n        /* \"contracts/DAO.sol\":1985:1993  projects */\n      0x02\n        /* \"contracts/DAO.sol\":1985:2004  projects[projectId] */\n      dup1\n      dup8\n      mstore\n      swap4\n      dup11\n      swap1\n      keccak256\n        /* \"contracts/DAO.sol\":1985:2056  projects[projectId] = Project(_beneficiary, _amountRequested, 0, false) */\n      swap9\n      mload\n      dup10\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap9\n      and\n      swap8\n      swap1\n      swap8\n      or\n      dup9\n      sstore\n      swap3\n      mload\n      0x01\n      dup9\n      add\n      sstore\n      mload\n      swap1\n      dup7\n      add\n      sstore\n      swap3\n      mload\n      0x03\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap5\n      iszero\n      iszero\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DAO.sol\":2074:2131  ProjectCreated(projectId, _beneficiary, _amountRequested) */\n      dup4\n      mload\n        /* \"#utility.yul\":9192:9217   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":9233:9251   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":9226:9309   */\n      mstore\n        /* \"#utility.yul\":9325:9343   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":9318:9352   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/DAO.sol\":1985:2004  projects[projectId] */\n      swap2\n      swap3\n      pop\n        /* \"contracts/DAO.sol\":2074:2131  ProjectCreated(projectId, _beneficiary, _amountRequested) */\n      0x1b9d0946c0a6f3b3a57782ad25a4553bd5bcf1f1a252068eafc757670aad573a\n      swap2\n        /* \"#utility.yul\":9165:9183   */\n      add\n        /* \"contracts/DAO.sol\":2074:2131  ProjectCreated(projectId, _beneficiary, _amountRequested) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DAO.sol\":1928:2139  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1531:1605   */\n      mstore\n        /* \"#utility.yul\":1504:1522   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_68\n        /* \"#utility.yul\":1385:1611   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10146:10148   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10128:10149   */\n      mstore\n        /* \"#utility.yul\":10185:10187   */\n      0x1f\n        /* \"#utility.yul\":10165:10183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10158:10188   */\n      mstore\n        /* \"#utility.yul\":10224:10257   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10204:10222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10197:10258   */\n      mstore\n        /* \"#utility.yul\":10275:10293   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_68\n        /* \"#utility.yul\":9944:10299   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_172:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1531:1605   */\n      mstore\n        /* \"#utility.yul\":1504:1522   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_68\n        /* \"#utility.yul\":1385:1611   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_185:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_191:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_191)\n    tag_193:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:724   */\n    tag_20:\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup2\n        /* \"#utility.yul\":400:421   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      mload\n        /* \"#utility.yul\":493:499   */\n      dup1\n        /* \"#utility.yul\":488:490   */\n      0x20\n        /* \"#utility.yul\":477:486   */\n      dup5\n        /* \"#utility.yul\":473:491   */\n      add\n        /* \"#utility.yul\":466:500   */\n      mstore\n        /* \"#utility.yul\":509:588   */\n      tag_195\n        /* \"#utility.yul\":581:587   */\n      dup2\n        /* \"#utility.yul\":576:578   */\n      0x40\n        /* \"#utility.yul\":565:574   */\n      dup6\n        /* \"#utility.yul\":561:579   */\n      add\n        /* \"#utility.yul\":556:558   */\n      0x20\n        /* \"#utility.yul\":548:554   */\n      dup8\n        /* \"#utility.yul\":544:559   */\n      add\n        /* \"#utility.yul\":509:588   */\n      tag_185\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":640:642   */\n      0x1f\n        /* \"#utility.yul\":628:643   */\n      add\n        /* \"#utility.yul\":645:711   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":624:712   */\n      and\n        /* \"#utility.yul\":609:713   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":715:717   */\n      0x40\n        /* \"#utility.yul\":605:718   */\n      add\n      swap3\n        /* \"#utility.yul\":269:724   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":729:909   */\n    tag_23:\n        /* \"#utility.yul\":788:794   */\n      0x00\n        /* \"#utility.yul\":841:843   */\n      0x20\n        /* \"#utility.yul\":829:838   */\n      dup3\n        /* \"#utility.yul\":820:827   */\n      dup5\n        /* \"#utility.yul\":816:839   */\n      sub\n        /* \"#utility.yul\":812:844   */\n      slt\n        /* \"#utility.yul\":809:861   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":857:858   */\n      0x00\n        /* \"#utility.yul\":854:855   */\n      dup1\n        /* \"#utility.yul\":847:859   */\n      revert\n        /* \"#utility.yul\":809:861   */\n    tag_197:\n      pop\n        /* \"#utility.yul\":880:903   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":729:909   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2113:2361   */\n    tag_46:\n        /* \"#utility.yul\":2181:2187   */\n      0x00\n        /* \"#utility.yul\":2189:2195   */\n      dup1\n        /* \"#utility.yul\":2242:2244   */\n      0x40\n        /* \"#utility.yul\":2230:2239   */\n      dup4\n        /* \"#utility.yul\":2221:2228   */\n      dup6\n        /* \"#utility.yul\":2217:2240   */\n      sub\n        /* \"#utility.yul\":2213:2245   */\n      slt\n        /* \"#utility.yul\":2210:2262   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":2258:2259   */\n      0x00\n        /* \"#utility.yul\":2255:2256   */\n      dup1\n        /* \"#utility.yul\":2248:2260   */\n      revert\n        /* \"#utility.yul\":2210:2262   */\n    tag_203:\n      pop\n      pop\n        /* \"#utility.yul\":2281:2304   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2351:2353   */\n      0x20\n        /* \"#utility.yul\":2336:2354   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2323:2355   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2113:2361   */\n      jump\t// out\n        /* \"#utility.yul\":2548:2710   */\n    tag_186:\n        /* \"#utility.yul\":2642:2684   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2635:2640   */\n      dup2\n        /* \"#utility.yul\":2631:2685   */\n      and\n        /* \"#utility.yul\":2624:2629   */\n      dup2\n        /* \"#utility.yul\":2621:2686   */\n      eq\n        /* \"#utility.yul\":2611:2704   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2697:2698   */\n      dup1\n        /* \"#utility.yul\":2690:2702   */\n      revert\n        /* \"#utility.yul\":2715:3046   */\n    tag_54:\n        /* \"#utility.yul\":2791:2797   */\n      0x00\n        /* \"#utility.yul\":2799:2805   */\n      dup1\n        /* \"#utility.yul\":2852:2854   */\n      0x40\n        /* \"#utility.yul\":2840:2849   */\n      dup4\n        /* \"#utility.yul\":2831:2838   */\n      dup6\n        /* \"#utility.yul\":2827:2850   */\n      sub\n        /* \"#utility.yul\":2823:2855   */\n      slt\n        /* \"#utility.yul\":2820:2872   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2868:2869   */\n      0x00\n        /* \"#utility.yul\":2865:2866   */\n      dup1\n        /* \"#utility.yul\":2858:2870   */\n      revert\n        /* \"#utility.yul\":2820:2872   */\n    tag_208:\n        /* \"#utility.yul\":2907:2916   */\n      dup3\n        /* \"#utility.yul\":2894:2917   */\n      calldataload\n        /* \"#utility.yul\":2926:2965   */\n      tag_209\n        /* \"#utility.yul\":2959:2964   */\n      dup2\n        /* \"#utility.yul\":2926:2965   */\n      tag_186\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2984:2989   */\n      swap5\n        /* \"#utility.yul\":3036:3038   */\n      0x20\n        /* \"#utility.yul\":3021:3039   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3008:3040   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2715:3046   */\n      jump\t// out\n        /* \"#utility.yul\":3051:3306   */\n    tag_58:\n        /* \"#utility.yul\":3110:3116   */\n      0x00\n        /* \"#utility.yul\":3163:3165   */\n      0x20\n        /* \"#utility.yul\":3151:3160   */\n      dup3\n        /* \"#utility.yul\":3142:3149   */\n      dup5\n        /* \"#utility.yul\":3138:3161   */\n      sub\n        /* \"#utility.yul\":3134:3166   */\n      slt\n        /* \"#utility.yul\":3131:3183   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3179:3180   */\n      0x00\n        /* \"#utility.yul\":3176:3177   */\n      dup1\n        /* \"#utility.yul\":3169:3181   */\n      revert\n        /* \"#utility.yul\":3131:3183   */\n    tag_211:\n        /* \"#utility.yul\":3218:3227   */\n      dup2\n        /* \"#utility.yul\":3205:3228   */\n      calldataload\n        /* \"#utility.yul\":3237:3276   */\n      tag_212\n        /* \"#utility.yul\":3270:3275   */\n      dup2\n        /* \"#utility.yul\":3237:3276   */\n      tag_186\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3295:3300   */\n      swap4\n        /* \"#utility.yul\":3051:3306   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3311:3495   */\n    tag_187:\n        /* \"#utility.yul\":3363:3440   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3360:3361   */\n      0x00\n        /* \"#utility.yul\":3353:3441   */\n      mstore\n        /* \"#utility.yul\":3460:3464   */\n      0x41\n        /* \"#utility.yul\":3457:3458   */\n      0x04\n        /* \"#utility.yul\":3450:3465   */\n      mstore\n        /* \"#utility.yul\":3484:3488   */\n      0x24\n        /* \"#utility.yul\":3481:3482   */\n      0x00\n        /* \"#utility.yul\":3474:3489   */\n      revert\n        /* \"#utility.yul\":3500:4456   */\n    tag_65:\n        /* \"#utility.yul\":3580:3586   */\n      0x00\n        /* \"#utility.yul\":3633:3635   */\n      0x20\n        /* \"#utility.yul\":3621:3630   */\n      dup3\n        /* \"#utility.yul\":3612:3619   */\n      dup5\n        /* \"#utility.yul\":3608:3631   */\n      sub\n        /* \"#utility.yul\":3604:3636   */\n      slt\n        /* \"#utility.yul\":3601:3653   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":3649:3650   */\n      0x00\n        /* \"#utility.yul\":3646:3647   */\n      dup1\n        /* \"#utility.yul\":3639:3651   */\n      revert\n        /* \"#utility.yul\":3601:3653   */\n    tag_215:\n        /* \"#utility.yul\":3682:3691   */\n      dup2\n        /* \"#utility.yul\":3676:3692   */\n      mload\n        /* \"#utility.yul\":3711:3729   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3752:3754   */\n      dup1\n        /* \"#utility.yul\":3744:3750   */\n      dup3\n        /* \"#utility.yul\":3741:3755   */\n      gt\n        /* \"#utility.yul\":3738:3772   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":3768:3769   */\n      0x00\n        /* \"#utility.yul\":3765:3766   */\n      dup1\n        /* \"#utility.yul\":3758:3770   */\n      revert\n        /* \"#utility.yul\":3738:3772   */\n    tag_216:\n        /* \"#utility.yul\":3806:3812   */\n      dup2\n        /* \"#utility.yul\":3795:3804   */\n      dup5\n        /* \"#utility.yul\":3791:3813   */\n      add\n        /* \"#utility.yul\":3781:3813   */\n      swap2\n      pop\n        /* \"#utility.yul\":3851:3858   */\n      dup5\n        /* \"#utility.yul\":3844:3848   */\n      0x1f\n        /* \"#utility.yul\":3840:3842   */\n      dup4\n        /* \"#utility.yul\":3836:3849   */\n      add\n        /* \"#utility.yul\":3832:3859   */\n      slt\n        /* \"#utility.yul\":3822:3877   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":3873:3874   */\n      0x00\n        /* \"#utility.yul\":3870:3871   */\n      dup1\n        /* \"#utility.yul\":3863:3875   */\n      revert\n        /* \"#utility.yul\":3822:3877   */\n    tag_217:\n        /* \"#utility.yul\":3902:3904   */\n      dup2\n        /* \"#utility.yul\":3896:3905   */\n      mload\n        /* \"#utility.yul\":3924:3926   */\n      dup2\n        /* \"#utility.yul\":3920:3922   */\n      dup2\n        /* \"#utility.yul\":3917:3927   */\n      gt\n        /* \"#utility.yul\":3914:3950   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":3930:3948   */\n      tag_219\n      tag_187\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4064:4066   */\n      0x40\n        /* \"#utility.yul\":4058:4067   */\n      mload\n        /* \"#utility.yul\":4126:4130   */\n      0x1f\n        /* \"#utility.yul\":4118:4131   */\n      dup3\n      add\n        /* \"#utility.yul\":3969:4035   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4114:4136   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4138:4140   */\n      0x3f\n        /* \"#utility.yul\":4110:4141   */\n      add\n        /* \"#utility.yul\":4106:4146   */\n      and\n        /* \"#utility.yul\":4094:4147   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4162:4180   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4182:4204   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4159:4205   */\n      or\n        /* \"#utility.yul\":4156:4228   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":4208:4226   */\n      tag_221\n      tag_187\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4248:4258   */\n      dup2\n        /* \"#utility.yul\":4244:4246   */\n      0x40\n        /* \"#utility.yul\":4237:4259   */\n      mstore\n        /* \"#utility.yul\":4283:4285   */\n      dup3\n        /* \"#utility.yul\":4275:4281   */\n      dup2\n        /* \"#utility.yul\":4268:4286   */\n      mstore\n        /* \"#utility.yul\":4323:4330   */\n      dup8\n        /* \"#utility.yul\":4318:4320   */\n      0x20\n        /* \"#utility.yul\":4313:4315   */\n      dup5\n        /* \"#utility.yul\":4309:4311   */\n      dup8\n        /* \"#utility.yul\":4305:4316   */\n      add\n        /* \"#utility.yul\":4301:4321   */\n      add\n        /* \"#utility.yul\":4298:4331   */\n      gt\n        /* \"#utility.yul\":4295:4348   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4341:4342   */\n      dup1\n        /* \"#utility.yul\":4334:4346   */\n      revert\n        /* \"#utility.yul\":4295:4348   */\n    tag_222:\n        /* \"#utility.yul\":4357:4425   */\n      tag_223\n        /* \"#utility.yul\":4422:4424   */\n      dup4\n        /* \"#utility.yul\":4417:4419   */\n      0x20\n        /* \"#utility.yul\":4409:4415   */\n      dup4\n        /* \"#utility.yul\":4405:4420   */\n      add\n        /* \"#utility.yul\":4400:4402   */\n      0x20\n        /* \"#utility.yul\":4396:4398   */\n      dup9\n        /* \"#utility.yul\":4392:4403   */\n      add\n        /* \"#utility.yul\":4357:4425   */\n      tag_185\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4444:4450   */\n      swap8\n        /* \"#utility.yul\":3500:4456   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5170:5354   */\n    tag_80:\n        /* \"#utility.yul\":5240:5246   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5272:5279   */\n      dup5\n        /* \"#utility.yul\":5268:5291   */\n      sub\n        /* \"#utility.yul\":5264:5296   */\n      slt\n        /* \"#utility.yul\":5261:5313   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":5309:5310   */\n      0x00\n        /* \"#utility.yul\":5306:5307   */\n      dup1\n        /* \"#utility.yul\":5299:5311   */\n      revert\n        /* \"#utility.yul\":5261:5313   */\n    tag_227:\n      pop\n        /* \"#utility.yul\":5332:5348   */\n      mload\n      swap2\n        /* \"#utility.yul\":5170:5354   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5359:5543   */\n    tag_188:\n        /* \"#utility.yul\":5411:5488   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5408:5409   */\n      0x00\n        /* \"#utility.yul\":5401:5489   */\n      mstore\n        /* \"#utility.yul\":5508:5512   */\n      0x11\n        /* \"#utility.yul\":5505:5506   */\n      0x04\n        /* \"#utility.yul\":5498:5513   */\n      mstore\n        /* \"#utility.yul\":5532:5536   */\n      0x24\n        /* \"#utility.yul\":5529:5530   */\n      0x00\n        /* \"#utility.yul\":5522:5537   */\n      revert\n        /* \"#utility.yul\":5548:5822   */\n    tag_82:\n        /* \"#utility.yul\":5588:5589   */\n      0x00\n        /* \"#utility.yul\":5614:5615   */\n      dup3\n        /* \"#utility.yul\":5604:5793   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":5649:5726   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5646:5647   */\n      0x00\n        /* \"#utility.yul\":5639:5727   */\n      mstore\n        /* \"#utility.yul\":5750:5754   */\n      0x12\n        /* \"#utility.yul\":5747:5748   */\n      0x04\n        /* \"#utility.yul\":5740:5755   */\n      mstore\n        /* \"#utility.yul\":5778:5782   */\n      0x24\n        /* \"#utility.yul\":5775:5776   */\n      0x00\n        /* \"#utility.yul\":5768:5783   */\n      revert\n        /* \"#utility.yul\":5604:5793   */\n    tag_230:\n      pop\n        /* \"#utility.yul\":5807:5816   */\n      div\n      swap1\n        /* \"#utility.yul\":5548:5822   */\n      jump\t// out\n        /* \"#utility.yul\":6474:6751   */\n    tag_104:\n        /* \"#utility.yul\":6541:6547   */\n      0x00\n        /* \"#utility.yul\":6594:6596   */\n      0x20\n        /* \"#utility.yul\":6582:6591   */\n      dup3\n        /* \"#utility.yul\":6573:6580   */\n      dup5\n        /* \"#utility.yul\":6569:6592   */\n      sub\n        /* \"#utility.yul\":6565:6597   */\n      slt\n        /* \"#utility.yul\":6562:6614   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":6610:6611   */\n      0x00\n        /* \"#utility.yul\":6607:6608   */\n      dup1\n        /* \"#utility.yul\":6600:6612   */\n      revert\n        /* \"#utility.yul\":6562:6614   */\n    tag_234:\n        /* \"#utility.yul\":6642:6651   */\n      dup2\n        /* \"#utility.yul\":6636:6652   */\n      mload\n        /* \"#utility.yul\":6695:6700   */\n      dup1\n        /* \"#utility.yul\":6688:6701   */\n      iszero\n        /* \"#utility.yul\":6681:6702   */\n      iszero\n        /* \"#utility.yul\":6674:6679   */\n      dup2\n        /* \"#utility.yul\":6671:6703   */\n      eq\n        /* \"#utility.yul\":6661:6721   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6717:6718   */\n      0x00\n        /* \"#utility.yul\":6714:6715   */\n      dup1\n        /* \"#utility.yul\":6707:6719   */\n      revert\n        /* \"#utility.yul\":7107:7396   */\n    tag_110:\n        /* \"#utility.yul\":7238:7241   */\n      0x00\n        /* \"#utility.yul\":7276:7282   */\n      dup3\n        /* \"#utility.yul\":7270:7283   */\n      mload\n        /* \"#utility.yul\":7292:7358   */\n      tag_238\n        /* \"#utility.yul\":7351:7357   */\n      dup2\n        /* \"#utility.yul\":7346:7349   */\n      dup5\n        /* \"#utility.yul\":7339:7343   */\n      0x20\n        /* \"#utility.yul\":7331:7337   */\n      dup8\n        /* \"#utility.yul\":7327:7344   */\n      add\n        /* \"#utility.yul\":7292:7358   */\n      tag_185\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7374:7390   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":7107:7396   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8860:8985   */\n    tag_137:\n        /* \"#utility.yul\":8925:8934   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8946:8956   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8943:8979   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":8959:8977   */\n      tag_245\n      tag_188\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8860:8985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9363:9558   */\n    tag_161:\n        /* \"#utility.yul\":9402:9405   */\n      0x00\n        /* \"#utility.yul\":9433:9499   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9426:9431   */\n      dup3\n        /* \"#utility.yul\":9423:9500   */\n      sub\n        /* \"#utility.yul\":9420:9523   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":9503:9521   */\n      tag_249\n      tag_188\n      jump\t// in\n    tag_249:\n      pop\n        /* \"#utility.yul\":9550:9551   */\n      0x01\n        /* \"#utility.yul\":9539:9552   */\n      add\n      swap1\n        /* \"#utility.yul\":9363:9558   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200c3fbda213562b3a885eddfdb42338815056b36b549a71ad9bb7d8ead32157ea64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1144": {
									"entryPoint": null,
									"id": 1144,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 165,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_TitleRegistry_$1338t_contract$_ERC20_$864t_address_fromMemory": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_contract_TitleRegistry": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:974:9",
										"nodeType": "YulBlock",
										"src": "0:974:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:86:9",
													"nodeType": "YulBlock",
													"src": "74:86:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "138:16:9",
																"nodeType": "YulBlock",
																"src": "138:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "147:1:9",
																					"nodeType": "YulLiteral",
																					"src": "147:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:9",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "140:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "140:6:9"
																			},
																			"nativeSrc": "140:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "140:12:9"
																		},
																		"nativeSrc": "140:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "140:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "97:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "97:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "108:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "108:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "123:3:9",
																										"nodeType": "YulLiteral",
																										"src": "123:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "128:1:9",
																										"nodeType": "YulLiteral",
																										"src": "128:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "119:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "119:3:9"
																								},
																								"nativeSrc": "119:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "119:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "132:1:9",
																								"nodeType": "YulLiteral",
																								"src": "132:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "115:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "115:3:9"
																						},
																						"nativeSrc": "115:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "115:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "104:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "104:3:9"
																				},
																				"nativeSrc": "104:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "104:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "94:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "94:2:9"
																		},
																		"nativeSrc": "94:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "94:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "87:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:6:9"
																},
																"nativeSrc": "87:50:9",
																"nodeType": "YulFunctionCall",
																"src": "87:50:9"
															},
															"nativeSrc": "84:70:9",
															"nodeType": "YulIf",
															"src": "84:70:9"
														}
													]
												},
												"name": "validator_revert_contract_TitleRegistry",
												"nativeSrc": "14:146:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "63:5:9",
														"nodeType": "YulTypedName",
														"src": "63:5:9",
														"type": ""
													}
												],
												"src": "14:146:9"
											},
											{
												"body": {
													"nativeSrc": "315:449:9",
													"nodeType": "YulBlock",
													"src": "315:449:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "361:16:9",
																"nodeType": "YulBlock",
																"src": "361:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "370:1:9",
																					"nodeType": "YulLiteral",
																					"src": "370:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "373:1:9",
																					"nodeType": "YulLiteral",
																					"src": "373:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "363:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:9"
																			},
																			"nativeSrc": "363:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "363:12:9"
																		},
																		"nativeSrc": "363:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "363:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "336:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "336:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "345:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "345:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "332:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "332:3:9"
																		},
																		"nativeSrc": "332:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "332:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "357:2:9",
																		"nodeType": "YulLiteral",
																		"src": "357:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "328:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:9"
																},
																"nativeSrc": "328:32:9",
																"nodeType": "YulFunctionCall",
																"src": "328:32:9"
															},
															"nativeSrc": "325:52:9",
															"nodeType": "YulIf",
															"src": "325:52:9"
														},
														{
															"nativeSrc": "386:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "386:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:9"
																},
																"nativeSrc": "399:16:9",
																"nodeType": "YulFunctionCall",
																"src": "399:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "390:5:9",
																	"nodeType": "YulTypedName",
																	"src": "390:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "464:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "464:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_TitleRegistry",
																	"nativeSrc": "424:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "424:39:9"
																},
																"nativeSrc": "424:46:9",
																"nodeType": "YulFunctionCall",
																"src": "424:46:9"
															},
															"nativeSrc": "424:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "424:46:9"
														},
														{
															"nativeSrc": "479:15:9",
															"nodeType": "YulAssignment",
															"src": "479:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "489:5:9",
																"nodeType": "YulIdentifier",
																"src": "489:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "479:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "479:6:9"
																}
															]
														},
														{
															"nativeSrc": "503:40:9",
															"nodeType": "YulVariableDeclaration",
															"src": "503:40:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "528:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "528:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "539:2:9",
																				"nodeType": "YulLiteral",
																				"src": "539:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "524:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "524:3:9"
																		},
																		"nativeSrc": "524:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "524:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "518:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "518:5:9"
																},
																"nativeSrc": "518:25:9",
																"nodeType": "YulFunctionCall",
																"src": "518:25:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "507:7:9",
																	"nodeType": "YulTypedName",
																	"src": "507:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "592:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "592:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_TitleRegistry",
																	"nativeSrc": "552:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "552:39:9"
																},
																"nativeSrc": "552:48:9",
																"nodeType": "YulFunctionCall",
																"src": "552:48:9"
															},
															"nativeSrc": "552:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "552:48:9"
														},
														{
															"nativeSrc": "609:17:9",
															"nodeType": "YulAssignment",
															"src": "609:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "619:7:9",
																"nodeType": "YulIdentifier",
																"src": "619:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "609:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:9"
																}
															]
														},
														{
															"nativeSrc": "635:40:9",
															"nodeType": "YulVariableDeclaration",
															"src": "635:40:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "660:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "660:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "671:2:9",
																				"nodeType": "YulLiteral",
																				"src": "671:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "656:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "656:3:9"
																		},
																		"nativeSrc": "656:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "656:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "650:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "650:5:9"
																},
																"nativeSrc": "650:25:9",
																"nodeType": "YulFunctionCall",
																"src": "650:25:9"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "639:7:9",
																	"nodeType": "YulTypedName",
																	"src": "639:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "724:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "724:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_TitleRegistry",
																	"nativeSrc": "684:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "684:39:9"
																},
																"nativeSrc": "684:48:9",
																"nodeType": "YulFunctionCall",
																"src": "684:48:9"
															},
															"nativeSrc": "684:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "684:48:9"
														},
														{
															"nativeSrc": "741:17:9",
															"nodeType": "YulAssignment",
															"src": "741:17:9",
															"value": {
																"name": "value_2",
																"nativeSrc": "751:7:9",
																"nodeType": "YulIdentifier",
																"src": "751:7:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "741:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "741:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_TitleRegistry_$1338t_contract$_ERC20_$864t_address_fromMemory",
												"nativeSrc": "165:599:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "265:9:9",
														"nodeType": "YulTypedName",
														"src": "265:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "276:7:9",
														"nodeType": "YulTypedName",
														"src": "276:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "288:6:9",
														"nodeType": "YulTypedName",
														"src": "288:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "296:6:9",
														"nodeType": "YulTypedName",
														"src": "296:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "304:6:9",
														"nodeType": "YulTypedName",
														"src": "304:6:9",
														"type": ""
													}
												],
												"src": "165:599:9"
											},
											{
												"body": {
													"nativeSrc": "870:102:9",
													"nodeType": "YulBlock",
													"src": "870:102:9",
													"statements": [
														{
															"nativeSrc": "880:26:9",
															"nodeType": "YulAssignment",
															"src": "880:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "892:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "903:2:9",
																		"nodeType": "YulLiteral",
																		"src": "903:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "888:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "888:3:9"
																},
																"nativeSrc": "888:18:9",
																"nodeType": "YulFunctionCall",
																"src": "888:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "880:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "880:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "922:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "922:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "937:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "953:3:9",
																								"nodeType": "YulLiteral",
																								"src": "953:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "958:1:9",
																								"nodeType": "YulLiteral",
																								"src": "958:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "949:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "949:3:9"
																						},
																						"nativeSrc": "949:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "949:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "962:1:9",
																						"nodeType": "YulLiteral",
																						"src": "962:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "945:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "945:3:9"
																				},
																				"nativeSrc": "945:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "945:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "933:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:9"
																		},
																		"nativeSrc": "933:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "933:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "915:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:9"
																},
																"nativeSrc": "915:51:9",
																"nodeType": "YulFunctionCall",
																"src": "915:51:9"
															},
															"nativeSrc": "915:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "915:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "769:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "839:9:9",
														"nodeType": "YulTypedName",
														"src": "839:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "850:6:9",
														"nodeType": "YulTypedName",
														"src": "850:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "861:4:9",
														"nodeType": "YulTypedName",
														"src": "861:4:9",
														"type": ""
													}
												],
												"src": "769:203:9"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_contract_TitleRegistry(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_TitleRegistry_$1338t_contract$_ERC20_$864t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_TitleRegistry(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_TitleRegistry(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_TitleRegistry(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620014fd380380620014fd83398101604081905262000033916200010c565b806001600160a01b0381166200006257604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200006d81620000a5565b505060018055600480546001600160a01b039384166001600160a01b031991821617909155600580549290931691161790556200015d565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811462000109575f80fd5b50565b5f805f606084860312156200011f575f80fd5b83516200012c81620000f4565b60208501519093506200013f81620000f4565b60408501519092506200015281620000f4565b809150509250925092565b611392806200016b5f395ff3fe608060405234801561000f575f80fd5b50600436106100c4575f3560e01c80639f054ba11161007d578063c73b302e11610058578063c73b302e1461021d578063e82d657214610234578063f2fde38b14610247575f80fd5b80639f054ba1146101ca578063b2ce514b146101ea578063b384abef1461020a575f80fd5b806367f14276116100ad57806367f142761461016f578063715018a6146101845780638da5cb5b1461018c575f80fd5b80630379915d146100c8578063107046bd146100e6575b5f80fd5b6100d061025a565b6040516100dd919061106f565b60405180910390f35b6101366100f43660046110bf565b600260208190525f9182526040909120805460018201549282015460039092015473ffffffffffffffffffffffffffffffffffffffff90911692919060ff1684565b6040805173ffffffffffffffffffffffffffffffffffffffff9095168552602085019390935291830152151560608201526080016100dd565b61018261017d3660046110bf565b610315565b005b610182610606565b5f5473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100dd565b6004546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b6005546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b6101826102183660046110d6565b610619565b61022660035481565b6040519081526020016100dd565b610182610242366004611117565b610b12565b610182610255366004611141565b610eb1565b600480546040517f2146671f000000000000000000000000000000000000000000000000000000008152339281019290925260609173ffffffffffffffffffffffffffffffffffffffff90911690632146671f906024015f60405180830381865afa1580156102cb573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103109190810190611190565b905090565b5f81815260026020526040902054819073ffffffffffffffffffffffffffffffffffffffff1633146103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4e6f74207468652070726f6a6563742062656e6566696369617279000000000060448201526064015b60405180910390fd5b6103b0610f14565b5f8281526002602052604090206003015460ff161561042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f50726f6a65637420616c72656164792065786563757465640000000000000000604482015260640161039f565b600554604080517f18160ddd000000000000000000000000000000000000000000000000000000008152905160049273ffffffffffffffffffffffffffffffffffffffff16916318160ddd918185019160209190819003860181865afa158015610497573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104bb9190611256565b6104c5919061129a565b5f83815260026020819052604090912001541161053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f566f746573206e6f7420656e6f75676800000000000000000000000000000000604482015260640161039f565b5f828152600260205260408082206003810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558154910154915173ffffffffffffffffffffffffffffffffffffffff9091169282156108fc02929190818181858888f193505050501580156105c0573d5f803e3d5ffd5b50604080518381523360208201527f79f124991cfe2130be13599c74373fd040b0ead93c41b26aedbe1a6e6f2844c3910160405180910390a161060260018055565b5050565b61060e610f87565b6106175f610fd9565b565b600480546040517fc3c5a547000000000000000000000000000000000000000000000000000000008152339281019290925273ffffffffffffffffffffffffffffffffffffffff169063c3c5a54790602401602060405180830381865afa158015610686573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106aa91906112d2565b610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f742061207265676973746572656420766f74657200000000000000000000604482015260640161039f565b61071861025a565b60405160200161072891906112f1565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152908290528051602090910120600480547f2146671f0000000000000000000000000000000000000000000000000000000084523391840191909152909173ffffffffffffffffffffffffffffffffffffffff90911690632146671f906024015f60405180830381865afa1580156107cc573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108119190810190611190565b60405160200161082191906112f1565b604051602081830303815290604052805190602001201461089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f566f746572206e6f742066726f6d207468697320636974790000000000000000604482015260640161039f565b5f82815260026020819052604090912001548290610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f20766f74657320666f7220746869732070726f6a65637400000000000000604482015260640161039f565b5f8181526002602052604090206003015460ff1615610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f50726f6a65637420616c72656164792065786563757465640000000000000000604482015260640161039f565b61099b610f14565b6005546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303815f875af1158015610a15573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3991906112d2565b610a9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f566f7465207472616e73666572206661696c6564000000000000000000000000604482015260640161039f565b5f8381526002602081905260408220018054849290610abf90849061130c565b9091555050604080518481523360208201529081018390527f1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e9060600160405180910390a1610b0d60018055565b505050565b600480546040517fc3c5a547000000000000000000000000000000000000000000000000000000008152339281019290925273ffffffffffffffffffffffffffffffffffffffff169063c3c5a54790602401602060405180830381865afa158015610b7f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba391906112d2565b610c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f742061207265676973746572656420766f74657200000000000000000000604482015260640161039f565b610c1161025a565b604051602001610c2191906112f1565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152908290528051602090910120600480547f2146671f0000000000000000000000000000000000000000000000000000000084523391840191909152909173ffffffffffffffffffffffffffffffffffffffff90911690632146671f906024015f60405180830381865afa158015610cc5573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d0a9190810190611190565b604051602001610d1a91906112f1565b6040516020818303038152906040528051906020012014610d97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f566f746572206e6f742066726f6d207468697320636974790000000000000000604482015260640161039f565b610d9f610f14565b600380545f9182610daf83611325565b909155506040805160808101825273ffffffffffffffffffffffffffffffffffffffff86811680835260208084018881525f85870181815260608088018381528a84526002808752938a9020985189547fffffffffffffffffffffffff00000000000000000000000000000000000000001698169790971788559251600188015551908601559251600390940180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016941515949094179093558351858152928301529181018590529192507f1b9d0946c0a6f3b3a57782ad25a4553bd5bcf1f1a252068eafc757670aad573a910160405180910390a15061060260018055565b610eb9610f87565b73ffffffffffffffffffffffffffffffffffffffff8116610f08576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161039f565b610f1181610fd9565b50565b600260015403610f80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161039f565b6002600155565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610617576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161039f565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5b8381101561106757818101518382015260200161104f565b50505f910152565b602081525f825180602084015261108d81604085016020870161104d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b5f602082840312156110cf575f80fd5b5035919050565b5f80604083850312156110e7575f80fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff81168114610f11575f80fd5b5f8060408385031215611128575f80fd5b8235611133816110f6565b946020939093013593505050565b5f60208284031215611151575f80fd5b813561115c816110f6565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f602082840312156111a0575f80fd5b815167ffffffffffffffff808211156111b7575f80fd5b818401915084601f8301126111ca575f80fd5b8151818111156111dc576111dc611163565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561122257611222611163565b8160405282815287602084870101111561123a575f80fd5b61124b83602083016020880161104d565b979650505050505050565b5f60208284031215611266575f80fd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f826112cd577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b5f602082840312156112e2575f80fd5b8151801515811461115c575f80fd5b5f825161130281846020870161104d565b9190910192915050565b8082018082111561131f5761131f61126d565b92915050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113555761135561126d565b506001019056fea26469706673582212200c3fbda213562b3a885eddfdb42338815056b36b549a71ad9bb7d8ead32157ea64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14FD CODESIZE SUB DUP1 PUSH3 0x14FD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x10C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x62 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x6D DUP2 PUSH3 0xA5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH3 0x15D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x12C DUP2 PUSH3 0xF4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x13F DUP2 PUSH3 0xF4 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x152 DUP2 PUSH3 0xF4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1392 DUP1 PUSH3 0x16B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F054BA1 GT PUSH2 0x7D JUMPI DUP1 PUSH4 0xC73B302E GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xC73B302E EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xE82D6572 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x247 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9F054BA1 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xB2CE514B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xB384ABEF EQ PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67F14276 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x67F14276 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x379915D EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x107046BD EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xDD JUMP JUMPDEST PUSH2 0x182 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x10BF JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH2 0x606 JUMP JUMPDEST PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1A5 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1A5 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0x226 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST PUSH2 0x182 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2146671F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x2146671F SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x310 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1190 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207468652070726F6A6563742062656E65666963696172790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B0 PUSH2 0xF14 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0x18160DDD SWAP2 DUP2 DUP6 ADD SWAP2 PUSH1 0x20 SWAP2 SWAP1 DUP2 SWAP1 SUB DUP7 ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x497 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD GT PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746573206E6F7420656E6F75676800000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP3 DUP3 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x79F124991CFE2130BE13599C74373FD040B0EAD93C41B26AEDBE1A6E6F2844C3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x602 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x60E PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x617 PUSH0 PUSH2 0xFD9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xC3C5A54700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xC3C5A547 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061207265676973746572656420766F74657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0x718 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x4 DUP1 SLOAD PUSH32 0x2146671F00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x2146671F SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x811 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572206E6F742066726F6D207468697320636974790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20766F74657320666F7220746869732070726F6A65637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0x99B PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA15 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA39 SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xABF SWAP1 DUP5 SWAP1 PUSH2 0x130C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xB0D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xC3C5A54700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xC3C5A547 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061207265676973746572656420766F74657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0xC11 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x4 DUP1 SLOAD PUSH32 0x2146671F00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x2146671F SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCC5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD0A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572206E6F742066726F6D207468697320636974790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0xD9F PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0xDAF DUP4 PUSH2 0x1325 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE PUSH0 DUP6 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP1 DUP9 ADD DUP4 DUP2 MSTORE DUP11 DUP5 MSTORE PUSH1 0x2 DUP1 DUP8 MSTORE SWAP4 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP9 AND SWAP8 SWAP1 SWAP8 OR DUP9 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP9 ADD SSTORE MLOAD SWAP1 DUP7 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP3 DUP4 ADD MSTORE SWAP2 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x1B9D0946C0A6F3B3A57782AD25A4553BD5BCF1F1A252068EAFC757670AAD573A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x602 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xEB9 PUSH2 0xF87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xF08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xFD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1067 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x104F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x108D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x104D JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1128 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1133 DUP2 PUSH2 0x10F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1151 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x115C DUP2 PUSH2 0x10F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11DC PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1222 JUMPI PUSH2 0x1222 PUSH2 0x1163 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x123A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x124B DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x104D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x12CD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x115C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1302 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x104D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x126D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1355 JUMPI PUSH2 0x1355 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC EXTCODEHASH 0xBD LOG2 SGT JUMP 0x2B GASPRICE DUP9 0x5E 0xDD REVERT 0xB4 0x23 CODESIZE DUP2 POP JUMP 0xB3 PUSH12 0x549A71AD9BB7D8EAD32157EA PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "263:2844:7:-:0;;;1595:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1695:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;915:51:9;888:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;1716:1:2;1821:22;;1720:13:7::1;:30:::0;;-1:-1:-1;;;;;1720:30:7;;::::1;-1:-1:-1::0;;;;;;1720:30:7;;::::1;;::::0;;;1761:13:::1;:30:::0;;;;;::::1;::::0;::::1;;::::0;;263:2844;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:146:9:-;-1:-1:-1;;;;;104:31:9;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:599::-;288:6;296;304;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;405:9;399:16;424:46;464:5;424:46;:::i;:::-;539:2;524:18;;518:25;489:5;;-1:-1:-1;552:48:9;518:25;552:48;:::i;:::-;671:2;656:18;;650:25;619:7;;-1:-1:-1;684:48:9;650:25;684:48;:::i;:::-;751:7;741:17;;;165:599;;;;;:::o;769:203::-;263:2844:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 3975,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 3860,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4057,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createProject_1178": {
									"entryPoint": 2834,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@executeProject_1280": {
									"entryPoint": 789,
									"id": 1280,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getCity_1292": {
									"entryPoint": 602,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@projectsCount_1016": {
									"entryPoint": null,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@projects_1014": {
									"entryPoint": null,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1542,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@titleRegistry_1019": {
									"entryPoint": null,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3761,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasuryToken_1022": {
									"entryPoint": null,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_1221": {
									"entryPoint": 1561,
									"id": 1221,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_bool__to_t_address_payable_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$864__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TitleRegistry_$1338__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0bb0e6f45926aca0086625ca0d11313ef171decd13b805b4e787b05ceb90acae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32c21da3f5704642bc8ac18cb947ed4650ac0c45489f127f4208105344fb7870__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_466e70baf4171da174c5429b22a8fd588d8e8e91f0f15c4b83a7b251a146e2d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5856af36c9982fc05af30dbd00aa231b175fd64ca45b42d898f413a7edfeab13__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a348020b2dbd9c6a0d91fbabb3185a053a77efdd67d389dd2e534b5c8492671__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f6a1b1b232280f721ab0d78e4e4d43c85892dee29c08a16552f27589b9e843f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6243dc821c4e3d26290bd4d4cfa321aeec064a307e7fc91798644b2f5fe0b37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4717,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address_payable": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10301:9",
										"nodeType": "YulBlock",
										"src": "0:10301:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "80:184:9",
													"nodeType": "YulBlock",
													"src": "80:184:9",
													"statements": [
														{
															"nativeSrc": "90:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "99:1:9",
																"nodeType": "YulLiteral",
																"src": "99:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "94:1:9",
																	"nodeType": "YulTypedName",
																	"src": "94:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "159:63:9",
																"nodeType": "YulBlock",
																"src": "159:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "184:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "189:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "180:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:9"
																					},
																					"nativeSrc": "180:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "203:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "208:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "199:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:9"
																							},
																							"nativeSrc": "199:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "193:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:9"
																					},
																					"nativeSrc": "193:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "173:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:9"
																			},
																			"nativeSrc": "173:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:9"
																		},
																		"nativeSrc": "173:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "120:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "123:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "117:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:9"
																},
																"nativeSrc": "117:13:9",
																"nodeType": "YulFunctionCall",
																"src": "117:13:9"
															},
															"nativeSrc": "109:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "131:19:9",
																"nodeType": "YulBlock",
																"src": "131:19:9",
																"statements": [
																	{
																		"nativeSrc": "133:15:9",
																		"nodeType": "YulAssignment",
																		"src": "133:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "142:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "145:2:9",
																					"nodeType": "YulLiteral",
																					"src": "145:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "138:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:9"
																			},
																			"nativeSrc": "138:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "133:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "113:3:9",
																"nodeType": "YulBlock",
																"src": "113:3:9",
																"statements": []
															},
															"src": "109:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "242:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "247:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "238:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:9"
																		},
																		"nativeSrc": "238:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:9",
																		"nodeType": "YulLiteral",
																		"src": "256:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "231:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:9"
																},
																"nativeSrc": "231:27:9",
																"nodeType": "YulFunctionCall",
																"src": "231:27:9"
															},
															"nativeSrc": "231:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "231:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "14:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "58:3:9",
														"nodeType": "YulTypedName",
														"src": "58:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "63:3:9",
														"nodeType": "YulTypedName",
														"src": "63:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "68:6:9",
														"nodeType": "YulTypedName",
														"src": "68:6:9",
														"type": ""
													}
												],
												"src": "14:250:9"
											},
											{
												"body": {
													"nativeSrc": "390:334:9",
													"nodeType": "YulBlock",
													"src": "390:334:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "407:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "418:2:9",
																		"nodeType": "YulLiteral",
																		"src": "418:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "400:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:9"
																},
																"nativeSrc": "400:21:9",
																"nodeType": "YulFunctionCall",
																"src": "400:21:9"
															},
															"nativeSrc": "400:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "400:21:9"
														},
														{
															"nativeSrc": "430:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "450:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "444:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:9"
																},
																"nativeSrc": "444:13:9",
																"nodeType": "YulFunctionCall",
																"src": "444:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "434:6:9",
																	"nodeType": "YulTypedName",
																	"src": "434:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "477:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "488:2:9",
																				"nodeType": "YulLiteral",
																				"src": "488:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "473:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:9"
																		},
																		"nativeSrc": "473:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "493:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "466:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:9"
																},
																"nativeSrc": "466:34:9",
																"nodeType": "YulFunctionCall",
																"src": "466:34:9"
															},
															"nativeSrc": "466:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "466:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "548:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:9",
																				"nodeType": "YulLiteral",
																				"src": "556:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "544:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:9"
																		},
																		"nativeSrc": "544:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "565:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "576:2:9",
																				"nodeType": "YulLiteral",
																				"src": "576:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "561:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:9"
																		},
																		"nativeSrc": "561:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "581:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "509:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:9"
																},
																"nativeSrc": "509:79:9",
																"nodeType": "YulFunctionCall",
																"src": "509:79:9"
															},
															"nativeSrc": "509:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "509:79:9"
														},
														{
															"nativeSrc": "597:121:9",
															"nodeType": "YulAssignment",
															"src": "597:121:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "613:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "632:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "640:2:9",
																								"nodeType": "YulLiteral",
																								"src": "640:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "628:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:9"
																						},
																						"nativeSrc": "628:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "645:66:9",
																						"nodeType": "YulLiteral",
																						"src": "645:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "624:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:9"
																				},
																				"nativeSrc": "624:88:9",
																				"nodeType": "YulFunctionCall",
																				"src": "624:88:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:9"
																		},
																		"nativeSrc": "609:104:9",
																		"nodeType": "YulFunctionCall",
																		"src": "609:104:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "715:2:9",
																		"nodeType": "YulLiteral",
																		"src": "715:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "605:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:9"
																},
																"nativeSrc": "605:113:9",
																"nodeType": "YulFunctionCall",
																"src": "605:113:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "597:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "269:455:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "359:9:9",
														"nodeType": "YulTypedName",
														"src": "359:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "370:6:9",
														"nodeType": "YulTypedName",
														"src": "370:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "381:4:9",
														"nodeType": "YulTypedName",
														"src": "381:4:9",
														"type": ""
													}
												],
												"src": "269:455:9"
											},
											{
												"body": {
													"nativeSrc": "799:110:9",
													"nodeType": "YulBlock",
													"src": "799:110:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "845:16:9",
																"nodeType": "YulBlock",
																"src": "845:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "854:1:9",
																					"nodeType": "YulLiteral",
																					"src": "854:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "857:1:9",
																					"nodeType": "YulLiteral",
																					"src": "857:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "847:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:9"
																			},
																			"nativeSrc": "847:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "847:12:9"
																		},
																		"nativeSrc": "847:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "847:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "820:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "820:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "829:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "816:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:9"
																		},
																		"nativeSrc": "816:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "816:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "841:2:9",
																		"nodeType": "YulLiteral",
																		"src": "841:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "812:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "812:3:9"
																},
																"nativeSrc": "812:32:9",
																"nodeType": "YulFunctionCall",
																"src": "812:32:9"
															},
															"nativeSrc": "809:52:9",
															"nodeType": "YulIf",
															"src": "809:52:9"
														},
														{
															"nativeSrc": "870:33:9",
															"nodeType": "YulAssignment",
															"src": "870:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "893:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "880:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "880:12:9"
																},
																"nativeSrc": "880:23:9",
																"nodeType": "YulFunctionCall",
																"src": "880:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "870:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "729:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "765:9:9",
														"nodeType": "YulTypedName",
														"src": "765:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "776:7:9",
														"nodeType": "YulTypedName",
														"src": "776:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "788:6:9",
														"nodeType": "YulTypedName",
														"src": "788:6:9",
														"type": ""
													}
												],
												"src": "729:180:9"
											},
											{
												"body": {
													"nativeSrc": "1109:271:9",
													"nodeType": "YulBlock",
													"src": "1109:271:9",
													"statements": [
														{
															"nativeSrc": "1119:27:9",
															"nodeType": "YulAssignment",
															"src": "1119:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1131:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1131:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1142:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1142:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1127:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:9"
																},
																"nativeSrc": "1127:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1119:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1119:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1162:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1162:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1177:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1177:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1185:42:9",
																				"nodeType": "YulLiteral",
																				"src": "1185:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1173:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1173:3:9"
																		},
																		"nativeSrc": "1173:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1173:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1155:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:9"
																},
																"nativeSrc": "1155:74:9",
																"nodeType": "YulFunctionCall",
																"src": "1155:74:9"
															},
															"nativeSrc": "1155:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "1155:74:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1249:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1249:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1260:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1260:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1245:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1245:3:9"
																		},
																		"nativeSrc": "1245:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1245:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1265:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1265:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1238:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1238:6:9"
																},
																"nativeSrc": "1238:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1238:34:9"
															},
															"nativeSrc": "1238:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1238:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1292:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1292:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1303:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1303:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1288:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:9"
																		},
																		"nativeSrc": "1288:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "1308:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1308:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1281:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1281:6:9"
																},
																"nativeSrc": "1281:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1281:34:9"
															},
															"nativeSrc": "1281:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1281:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1335:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1335:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1346:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1346:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1331:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1331:3:9"
																		},
																		"nativeSrc": "1331:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "1365:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1365:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1358:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1358:6:9"
																				},
																				"nativeSrc": "1358:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1358:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1351:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1351:6:9"
																		},
																		"nativeSrc": "1351:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1351:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1324:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1324:6:9"
																},
																"nativeSrc": "1324:50:9",
																"nodeType": "YulFunctionCall",
																"src": "1324:50:9"
															},
															"nativeSrc": "1324:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "1324:50:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_bool__to_t_address_payable_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "914:466:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1054:9:9",
														"nodeType": "YulTypedName",
														"src": "1054:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1065:6:9",
														"nodeType": "YulTypedName",
														"src": "1065:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1073:6:9",
														"nodeType": "YulTypedName",
														"src": "1073:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1081:6:9",
														"nodeType": "YulTypedName",
														"src": "1081:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1089:6:9",
														"nodeType": "YulTypedName",
														"src": "1089:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1100:4:9",
														"nodeType": "YulTypedName",
														"src": "1100:4:9",
														"type": ""
													}
												],
												"src": "914:466:9"
											},
											{
												"body": {
													"nativeSrc": "1486:125:9",
													"nodeType": "YulBlock",
													"src": "1486:125:9",
													"statements": [
														{
															"nativeSrc": "1496:26:9",
															"nodeType": "YulAssignment",
															"src": "1496:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1508:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1508:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1519:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1519:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1504:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1504:3:9"
																},
																"nativeSrc": "1504:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1504:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1496:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1496:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1538:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1538:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1553:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1553:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:42:9",
																				"nodeType": "YulLiteral",
																				"src": "1561:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1549:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1549:3:9"
																		},
																		"nativeSrc": "1549:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1549:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:9"
																},
																"nativeSrc": "1531:74:9",
																"nodeType": "YulFunctionCall",
																"src": "1531:74:9"
															},
															"nativeSrc": "1531:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "1531:74:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1385:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1455:9:9",
														"nodeType": "YulTypedName",
														"src": "1455:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1466:6:9",
														"nodeType": "YulTypedName",
														"src": "1466:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1477:4:9",
														"nodeType": "YulTypedName",
														"src": "1477:4:9",
														"type": ""
													}
												],
												"src": "1385:226:9"
											},
											{
												"body": {
													"nativeSrc": "1739:125:9",
													"nodeType": "YulBlock",
													"src": "1739:125:9",
													"statements": [
														{
															"nativeSrc": "1749:26:9",
															"nodeType": "YulAssignment",
															"src": "1749:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1761:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1772:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1772:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1757:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:9"
																},
																"nativeSrc": "1757:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1757:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1749:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1749:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1791:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1806:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1806:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1814:42:9",
																				"nodeType": "YulLiteral",
																				"src": "1814:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1802:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1802:3:9"
																		},
																		"nativeSrc": "1802:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1802:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:9"
																},
																"nativeSrc": "1784:74:9",
																"nodeType": "YulFunctionCall",
																"src": "1784:74:9"
															},
															"nativeSrc": "1784:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "1784:74:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TitleRegistry_$1338__to_t_address__fromStack_reversed",
												"nativeSrc": "1616:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1708:9:9",
														"nodeType": "YulTypedName",
														"src": "1708:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1719:6:9",
														"nodeType": "YulTypedName",
														"src": "1719:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1730:4:9",
														"nodeType": "YulTypedName",
														"src": "1730:4:9",
														"type": ""
													}
												],
												"src": "1616:248:9"
											},
											{
												"body": {
													"nativeSrc": "1983:125:9",
													"nodeType": "YulBlock",
													"src": "1983:125:9",
													"statements": [
														{
															"nativeSrc": "1993:26:9",
															"nodeType": "YulAssignment",
															"src": "1993:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2005:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2005:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2016:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2016:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2001:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2001:3:9"
																},
																"nativeSrc": "2001:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2001:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1993:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2035:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2035:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2050:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2050:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2058:42:9",
																				"nodeType": "YulLiteral",
																				"src": "2058:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2046:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:9"
																		},
																		"nativeSrc": "2046:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2046:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2028:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:9"
																},
																"nativeSrc": "2028:74:9",
																"nodeType": "YulFunctionCall",
																"src": "2028:74:9"
															},
															"nativeSrc": "2028:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "2028:74:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$864__to_t_address__fromStack_reversed",
												"nativeSrc": "1869:239:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1952:9:9",
														"nodeType": "YulTypedName",
														"src": "1952:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1963:6:9",
														"nodeType": "YulTypedName",
														"src": "1963:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1974:4:9",
														"nodeType": "YulTypedName",
														"src": "1974:4:9",
														"type": ""
													}
												],
												"src": "1869:239:9"
											},
											{
												"body": {
													"nativeSrc": "2200:161:9",
													"nodeType": "YulBlock",
													"src": "2200:161:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2246:16:9",
																"nodeType": "YulBlock",
																"src": "2246:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2255:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2255:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2258:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2258:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2248:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2248:6:9"
																			},
																			"nativeSrc": "2248:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2248:12:9"
																		},
																		"nativeSrc": "2248:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2248:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2221:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2221:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2230:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2230:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2217:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:9"
																		},
																		"nativeSrc": "2217:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2217:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2242:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2213:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2213:3:9"
																},
																"nativeSrc": "2213:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2213:32:9"
															},
															"nativeSrc": "2210:52:9",
															"nodeType": "YulIf",
															"src": "2210:52:9"
														},
														{
															"nativeSrc": "2271:33:9",
															"nodeType": "YulAssignment",
															"src": "2271:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2294:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2294:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2281:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2281:12:9"
																},
																"nativeSrc": "2281:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2281:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2271:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:9"
																}
															]
														},
														{
															"nativeSrc": "2313:42:9",
															"nodeType": "YulAssignment",
															"src": "2313:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2340:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2340:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2351:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2351:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2336:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:9"
																		},
																		"nativeSrc": "2336:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2336:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2323:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2323:12:9"
																},
																"nativeSrc": "2323:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2323:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2313:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2313:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2113:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2158:9:9",
														"nodeType": "YulTypedName",
														"src": "2158:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2169:7:9",
														"nodeType": "YulTypedName",
														"src": "2169:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2181:6:9",
														"nodeType": "YulTypedName",
														"src": "2181:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2189:6:9",
														"nodeType": "YulTypedName",
														"src": "2189:6:9",
														"type": ""
													}
												],
												"src": "2113:248:9"
											},
											{
												"body": {
													"nativeSrc": "2467:76:9",
													"nodeType": "YulBlock",
													"src": "2467:76:9",
													"statements": [
														{
															"nativeSrc": "2477:26:9",
															"nodeType": "YulAssignment",
															"src": "2477:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2489:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2489:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2500:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2500:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2485:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2485:3:9"
																},
																"nativeSrc": "2485:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2485:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2477:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2477:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2519:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2519:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2530:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2512:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2512:6:9"
																},
																"nativeSrc": "2512:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2512:25:9"
															},
															"nativeSrc": "2512:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "2512:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2366:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2436:9:9",
														"nodeType": "YulTypedName",
														"src": "2436:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2447:6:9",
														"nodeType": "YulTypedName",
														"src": "2447:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2458:4:9",
														"nodeType": "YulTypedName",
														"src": "2458:4:9",
														"type": ""
													}
												],
												"src": "2366:177:9"
											},
											{
												"body": {
													"nativeSrc": "2601:109:9",
													"nodeType": "YulBlock",
													"src": "2601:109:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2688:16:9",
																"nodeType": "YulBlock",
																"src": "2688:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2697:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2697:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2700:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2700:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2690:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2690:6:9"
																			},
																			"nativeSrc": "2690:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2690:12:9"
																		},
																		"nativeSrc": "2690:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2690:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2624:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2624:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2635:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2635:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2642:42:9",
																						"nodeType": "YulLiteral",
																						"src": "2642:42:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2631:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2631:3:9"
																				},
																				"nativeSrc": "2631:54:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2631:54:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2621:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2621:2:9"
																		},
																		"nativeSrc": "2621:65:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2621:65:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2614:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:9"
																},
																"nativeSrc": "2614:73:9",
																"nodeType": "YulFunctionCall",
																"src": "2614:73:9"
															},
															"nativeSrc": "2611:93:9",
															"nodeType": "YulIf",
															"src": "2611:93:9"
														}
													]
												},
												"name": "validator_revert_address_payable",
												"nativeSrc": "2548:162:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2590:5:9",
														"nodeType": "YulTypedName",
														"src": "2590:5:9",
														"type": ""
													}
												],
												"src": "2548:162:9"
											},
											{
												"body": {
													"nativeSrc": "2810:236:9",
													"nodeType": "YulBlock",
													"src": "2810:236:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2856:16:9",
																"nodeType": "YulBlock",
																"src": "2856:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2865:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2865:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2868:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2868:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2858:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2858:6:9"
																			},
																			"nativeSrc": "2858:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2858:12:9"
																		},
																		"nativeSrc": "2858:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2858:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2831:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2831:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2840:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2827:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2827:3:9"
																		},
																		"nativeSrc": "2827:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2827:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2852:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2852:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2823:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2823:3:9"
																},
																"nativeSrc": "2823:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2823:32:9"
															},
															"nativeSrc": "2820:52:9",
															"nodeType": "YulIf",
															"src": "2820:52:9"
														},
														{
															"nativeSrc": "2881:36:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2881:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2907:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2907:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2894:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2894:12:9"
																},
																"nativeSrc": "2894:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2894:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2885:5:9",
																	"nodeType": "YulTypedName",
																	"src": "2885:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2959:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2959:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "2926:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "2926:32:9"
																},
																"nativeSrc": "2926:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2926:39:9"
															},
															"nativeSrc": "2926:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "2926:39:9"
														},
														{
															"nativeSrc": "2974:15:9",
															"nodeType": "YulAssignment",
															"src": "2974:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "2984:5:9",
																"nodeType": "YulIdentifier",
																"src": "2984:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2974:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:9"
																}
															]
														},
														{
															"nativeSrc": "2998:42:9",
															"nodeType": "YulAssignment",
															"src": "2998:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3025:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3025:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3036:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3036:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3021:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:9"
																		},
																		"nativeSrc": "3021:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3021:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3008:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3008:12:9"
																},
																"nativeSrc": "3008:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3008:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2998:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "2715:331:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2768:9:9",
														"nodeType": "YulTypedName",
														"src": "2768:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2779:7:9",
														"nodeType": "YulTypedName",
														"src": "2779:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2791:6:9",
														"nodeType": "YulTypedName",
														"src": "2791:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2799:6:9",
														"nodeType": "YulTypedName",
														"src": "2799:6:9",
														"type": ""
													}
												],
												"src": "2715:331:9"
											},
											{
												"body": {
													"nativeSrc": "3121:185:9",
													"nodeType": "YulBlock",
													"src": "3121:185:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3167:16:9",
																"nodeType": "YulBlock",
																"src": "3167:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3176:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3179:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3179:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3169:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3169:6:9"
																			},
																			"nativeSrc": "3169:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3169:12:9"
																		},
																		"nativeSrc": "3169:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3169:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3142:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3142:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3151:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3138:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3138:3:9"
																		},
																		"nativeSrc": "3138:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3138:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3163:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3163:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3134:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3134:3:9"
																},
																"nativeSrc": "3134:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3134:32:9"
															},
															"nativeSrc": "3131:52:9",
															"nodeType": "YulIf",
															"src": "3131:52:9"
														},
														{
															"nativeSrc": "3192:36:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3192:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3218:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3218:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3205:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3205:12:9"
																},
																"nativeSrc": "3205:23:9",
																"nodeType": "YulFunctionCall",
																"src": "3205:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3196:5:9",
																	"nodeType": "YulTypedName",
																	"src": "3196:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3270:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3270:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address_payable",
																	"nativeSrc": "3237:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "3237:32:9"
																},
																"nativeSrc": "3237:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3237:39:9"
															},
															"nativeSrc": "3237:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "3237:39:9"
														},
														{
															"nativeSrc": "3285:15:9",
															"nodeType": "YulAssignment",
															"src": "3285:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "3295:5:9",
																"nodeType": "YulIdentifier",
																"src": "3295:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3285:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3285:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3051:255:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3087:9:9",
														"nodeType": "YulTypedName",
														"src": "3087:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3098:7:9",
														"nodeType": "YulTypedName",
														"src": "3098:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3110:6:9",
														"nodeType": "YulTypedName",
														"src": "3110:6:9",
														"type": ""
													}
												],
												"src": "3051:255:9"
											},
											{
												"body": {
													"nativeSrc": "3343:152:9",
													"nodeType": "YulBlock",
													"src": "3343:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3360:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3360:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3363:77:9",
																		"nodeType": "YulLiteral",
																		"src": "3363:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3353:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:9"
																},
																"nativeSrc": "3353:88:9",
																"nodeType": "YulFunctionCall",
																"src": "3353:88:9"
															},
															"nativeSrc": "3353:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "3353:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3457:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3457:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3460:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3460:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3450:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3450:6:9"
																},
																"nativeSrc": "3450:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3450:15:9"
															},
															"nativeSrc": "3450:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3450:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3481:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3481:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3484:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3484:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3474:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:9"
																},
																"nativeSrc": "3474:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3474:15:9"
															},
															"nativeSrc": "3474:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3474:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3311:184:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3311:184:9"
											},
											{
												"body": {
													"nativeSrc": "3591:865:9",
													"nodeType": "YulBlock",
													"src": "3591:865:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3637:16:9",
																"nodeType": "YulBlock",
																"src": "3637:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3646:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3646:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3649:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3649:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3639:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3639:6:9"
																			},
																			"nativeSrc": "3639:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3639:12:9"
																		},
																		"nativeSrc": "3639:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3639:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3612:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3612:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3621:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3621:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3608:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3608:3:9"
																		},
																		"nativeSrc": "3608:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3608:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3633:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3633:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3604:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3604:3:9"
																},
																"nativeSrc": "3604:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3604:32:9"
															},
															"nativeSrc": "3601:52:9",
															"nodeType": "YulIf",
															"src": "3601:52:9"
														},
														{
															"nativeSrc": "3662:30:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3662:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3682:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3682:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3676:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3676:5:9"
																},
																"nativeSrc": "3676:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3676:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3666:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3666:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3701:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3701:28:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3711:18:9",
																"nodeType": "YulLiteral",
																"src": "3711:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3705:2:9",
																	"nodeType": "YulTypedName",
																	"src": "3705:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3756:16:9",
																"nodeType": "YulBlock",
																"src": "3756:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3765:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3765:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3768:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3768:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3758:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3758:6:9"
																			},
																			"nativeSrc": "3758:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3758:12:9"
																		},
																		"nativeSrc": "3758:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3758:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3744:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3744:6:9"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3752:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "3752:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:9"
																},
																"nativeSrc": "3741:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3741:14:9"
															},
															"nativeSrc": "3738:34:9",
															"nodeType": "YulIf",
															"src": "3738:34:9"
														},
														{
															"nativeSrc": "3781:32:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3781:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3795:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3795:9:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3806:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3791:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:9"
																},
																"nativeSrc": "3791:22:9",
																"nodeType": "YulFunctionCall",
																"src": "3791:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3785:2:9",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3861:16:9",
																"nodeType": "YulBlock",
																"src": "3861:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3870:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3870:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3873:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3873:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3863:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3863:6:9"
																			},
																			"nativeSrc": "3863:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3863:12:9"
																		},
																		"nativeSrc": "3863:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3863:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3840:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "3840:2:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3844:4:9",
																						"nodeType": "YulLiteral",
																						"src": "3844:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3836:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3836:3:9"
																				},
																				"nativeSrc": "3836:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3836:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3851:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3851:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3832:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3832:3:9"
																		},
																		"nativeSrc": "3832:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3832:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3825:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:9"
																},
																"nativeSrc": "3825:35:9",
																"nodeType": "YulFunctionCall",
																"src": "3825:35:9"
															},
															"nativeSrc": "3822:55:9",
															"nodeType": "YulIf",
															"src": "3822:55:9"
														},
														{
															"nativeSrc": "3886:19:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3886:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3902:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "3902:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3896:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3896:5:9"
																},
																"nativeSrc": "3896:9:9",
																"nodeType": "YulFunctionCall",
																"src": "3896:9:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3890:2:9",
																	"nodeType": "YulTypedName",
																	"src": "3890:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3928:22:9",
																"nodeType": "YulBlock",
																"src": "3928:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3930:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3930:16:9"
																			},
																			"nativeSrc": "3930:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3930:18:9"
																		},
																		"nativeSrc": "3930:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3930:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3920:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "3920:2:9"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3924:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "3924:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3917:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3917:2:9"
																},
																"nativeSrc": "3917:10:9",
																"nodeType": "YulFunctionCall",
																"src": "3917:10:9"
															},
															"nativeSrc": "3914:36:9",
															"nodeType": "YulIf",
															"src": "3914:36:9"
														},
														{
															"nativeSrc": "3959:76:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3959:76:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3969:66:9",
																"nodeType": "YulLiteral",
																"src": "3969:66:9",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "3963:2:9",
																	"nodeType": "YulTypedName",
																	"src": "3963:2:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4044:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4044:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4064:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4064:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4058:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4058:5:9"
																},
																"nativeSrc": "4058:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4058:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4048:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4048:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4076:71:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4076:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4098:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4098:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4122:2:9",
																										"nodeType": "YulIdentifier",
																										"src": "4122:2:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4126:4:9",
																										"nodeType": "YulLiteral",
																										"src": "4126:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4118:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4118:3:9"
																								},
																								"nativeSrc": "4118:13:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4118:13:9"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4133:2:9",
																								"nodeType": "YulIdentifier",
																								"src": "4133:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4114:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4114:3:9"
																						},
																						"nativeSrc": "4114:22:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4114:22:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4138:2:9",
																						"nodeType": "YulLiteral",
																						"src": "4138:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4110:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4110:3:9"
																				},
																				"nativeSrc": "4110:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4110:31:9"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4143:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "4143:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4106:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:9"
																		},
																		"nativeSrc": "4106:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4094:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:9"
																},
																"nativeSrc": "4094:53:9",
																"nodeType": "YulFunctionCall",
																"src": "4094:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4080:10:9",
																	"nodeType": "YulTypedName",
																	"src": "4080:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4206:22:9",
																"nodeType": "YulBlock",
																"src": "4206:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4208:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4208:16:9"
																			},
																			"nativeSrc": "4208:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4208:18:9"
																		},
																		"nativeSrc": "4208:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4208:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4165:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "4165:10:9"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4177:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "4177:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4162:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4162:2:9"
																		},
																		"nativeSrc": "4162:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4185:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "4185:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4197:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4197:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4182:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4182:2:9"
																		},
																		"nativeSrc": "4182:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4182:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4159:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4159:2:9"
																},
																"nativeSrc": "4159:46:9",
																"nodeType": "YulFunctionCall",
																"src": "4159:46:9"
															},
															"nativeSrc": "4156:72:9",
															"nodeType": "YulIf",
															"src": "4156:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4244:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4248:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "4248:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4237:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4237:6:9"
																},
																"nativeSrc": "4237:22:9",
																"nodeType": "YulFunctionCall",
																"src": "4237:22:9"
															},
															"nativeSrc": "4237:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "4237:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4275:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4275:6:9"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4283:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "4283:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4268:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4268:6:9"
																},
																"nativeSrc": "4268:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4268:18:9"
															},
															"nativeSrc": "4268:18:9",
															"nodeType": "YulExpressionStatement",
															"src": "4268:18:9"
														},
														{
															"body": {
																"nativeSrc": "4332:16:9",
																"nodeType": "YulBlock",
																"src": "4332:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4341:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4341:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4344:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4344:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4334:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4334:6:9"
																			},
																			"nativeSrc": "4334:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4334:12:9"
																		},
																		"nativeSrc": "4334:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4334:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4309:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4309:2:9"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4313:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4313:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4305:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4305:3:9"
																				},
																				"nativeSrc": "4305:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4305:11:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4318:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4318:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4301:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4301:3:9"
																		},
																		"nativeSrc": "4301:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4301:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4323:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "4323:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4298:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4298:2:9"
																},
																"nativeSrc": "4298:33:9",
																"nodeType": "YulFunctionCall",
																"src": "4298:33:9"
															},
															"nativeSrc": "4295:53:9",
															"nodeType": "YulIf",
															"src": "4295:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4396:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "4396:2:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4400:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4400:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4392:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4392:3:9"
																		},
																		"nativeSrc": "4392:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4392:11:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4409:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4409:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4417:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4417:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4405:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:9"
																		},
																		"nativeSrc": "4405:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4405:15:9"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4422:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "4422:2:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4357:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "4357:34:9"
																},
																"nativeSrc": "4357:68:9",
																"nodeType": "YulFunctionCall",
																"src": "4357:68:9"
															},
															"nativeSrc": "4357:68:9",
															"nodeType": "YulExpressionStatement",
															"src": "4357:68:9"
														},
														{
															"nativeSrc": "4434:16:9",
															"nodeType": "YulAssignment",
															"src": "4434:16:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4444:6:9",
																"nodeType": "YulIdentifier",
																"src": "4444:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4434:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "3500:956:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3557:9:9",
														"nodeType": "YulTypedName",
														"src": "3557:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3568:7:9",
														"nodeType": "YulTypedName",
														"src": "3568:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3580:6:9",
														"nodeType": "YulTypedName",
														"src": "3580:6:9",
														"type": ""
													}
												],
												"src": "3500:956:9"
											},
											{
												"body": {
													"nativeSrc": "4635:177:9",
													"nodeType": "YulBlock",
													"src": "4635:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4652:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4652:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4663:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4663:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4645:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:9"
																},
																"nativeSrc": "4645:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4645:21:9"
															},
															"nativeSrc": "4645:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4645:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4686:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4686:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4697:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4697:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4682:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:9"
																		},
																		"nativeSrc": "4682:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4702:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4702:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4675:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4675:6:9"
																},
																"nativeSrc": "4675:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4675:30:9"
															},
															"nativeSrc": "4675:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4675:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4725:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4725:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4736:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4736:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4721:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:9"
																		},
																		"nativeSrc": "4721:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4721:18:9"
																	},
																	{
																		"hexValue": "4e6f74207468652070726f6a6563742062656e6566696369617279",
																		"kind": "string",
																		"nativeSrc": "4741:29:9",
																		"nodeType": "YulLiteral",
																		"src": "4741:29:9",
																		"type": "",
																		"value": "Not the project beneficiary"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4714:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:9"
																},
																"nativeSrc": "4714:57:9",
																"nodeType": "YulFunctionCall",
																"src": "4714:57:9"
															},
															"nativeSrc": "4714:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "4714:57:9"
														},
														{
															"nativeSrc": "4780:26:9",
															"nodeType": "YulAssignment",
															"src": "4780:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4792:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4792:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4803:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4788:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:9"
																},
																"nativeSrc": "4788:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4788:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4780:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4780:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f6a1b1b232280f721ab0d78e4e4d43c85892dee29c08a16552f27589b9e843f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4461:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4612:9:9",
														"nodeType": "YulTypedName",
														"src": "4612:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4626:4:9",
														"nodeType": "YulTypedName",
														"src": "4626:4:9",
														"type": ""
													}
												],
												"src": "4461:351:9"
											},
											{
												"body": {
													"nativeSrc": "4991:174:9",
													"nodeType": "YulBlock",
													"src": "4991:174:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5008:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5008:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5019:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5019:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:9"
																},
																"nativeSrc": "5001:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5001:21:9"
															},
															"nativeSrc": "5001:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5001:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5042:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5042:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5053:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5053:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5038:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5038:3:9"
																		},
																		"nativeSrc": "5038:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5038:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5058:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5058:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5031:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:9"
																},
																"nativeSrc": "5031:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5031:30:9"
															},
															"nativeSrc": "5031:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5031:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5081:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5081:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5092:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5092:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5077:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5077:3:9"
																		},
																		"nativeSrc": "5077:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5077:18:9"
																	},
																	{
																		"hexValue": "50726f6a65637420616c7265616479206578656375746564",
																		"kind": "string",
																		"nativeSrc": "5097:26:9",
																		"nodeType": "YulLiteral",
																		"src": "5097:26:9",
																		"type": "",
																		"value": "Project already executed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5070:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:9"
																},
																"nativeSrc": "5070:54:9",
																"nodeType": "YulFunctionCall",
																"src": "5070:54:9"
															},
															"nativeSrc": "5070:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "5070:54:9"
														},
														{
															"nativeSrc": "5133:26:9",
															"nodeType": "YulAssignment",
															"src": "5133:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5145:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5145:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5156:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5156:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5141:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5141:3:9"
																},
																"nativeSrc": "5141:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5141:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5133:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5133:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6243dc821c4e3d26290bd4d4cfa321aeec064a307e7fc91798644b2f5fe0b37__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4817:348:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4968:9:9",
														"nodeType": "YulTypedName",
														"src": "4968:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4982:4:9",
														"nodeType": "YulTypedName",
														"src": "4982:4:9",
														"type": ""
													}
												],
												"src": "4817:348:9"
											},
											{
												"body": {
													"nativeSrc": "5251:103:9",
													"nodeType": "YulBlock",
													"src": "5251:103:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5297:16:9",
																"nodeType": "YulBlock",
																"src": "5297:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5306:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5306:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5309:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5309:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5299:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5299:6:9"
																			},
																			"nativeSrc": "5299:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5299:12:9"
																		},
																		"nativeSrc": "5299:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5272:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5272:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5281:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5268:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:9"
																		},
																		"nativeSrc": "5268:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5268:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5293:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5264:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:9"
																},
																"nativeSrc": "5264:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5264:32:9"
															},
															"nativeSrc": "5261:52:9",
															"nodeType": "YulIf",
															"src": "5261:52:9"
														},
														{
															"nativeSrc": "5322:26:9",
															"nodeType": "YulAssignment",
															"src": "5322:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5338:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5338:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5332:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5332:5:9"
																},
																"nativeSrc": "5332:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5332:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5322:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5170:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5217:9:9",
														"nodeType": "YulTypedName",
														"src": "5217:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5228:7:9",
														"nodeType": "YulTypedName",
														"src": "5228:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5240:6:9",
														"nodeType": "YulTypedName",
														"src": "5240:6:9",
														"type": ""
													}
												],
												"src": "5170:184:9"
											},
											{
												"body": {
													"nativeSrc": "5391:152:9",
													"nodeType": "YulBlock",
													"src": "5391:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5408:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5408:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5411:77:9",
																		"nodeType": "YulLiteral",
																		"src": "5411:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5401:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5401:6:9"
																},
																"nativeSrc": "5401:88:9",
																"nodeType": "YulFunctionCall",
																"src": "5401:88:9"
															},
															"nativeSrc": "5401:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "5401:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5505:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5505:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5508:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5508:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5498:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5498:6:9"
																},
																"nativeSrc": "5498:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5498:15:9"
															},
															"nativeSrc": "5498:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5498:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5529:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5529:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5532:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5532:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5522:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5522:6:9"
																},
																"nativeSrc": "5522:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5522:15:9"
															},
															"nativeSrc": "5522:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5522:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5359:184:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5359:184:9"
											},
											{
												"body": {
													"nativeSrc": "5594:228:9",
													"nodeType": "YulBlock",
													"src": "5594:228:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5625:168:9",
																"nodeType": "YulBlock",
																"src": "5625:168:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5646:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5646:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5649:77:9",
																					"nodeType": "YulLiteral",
																					"src": "5649:77:9",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5639:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5639:6:9"
																			},
																			"nativeSrc": "5639:88:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5639:88:9"
																		},
																		"nativeSrc": "5639:88:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5639:88:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5747:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5747:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5750:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5750:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5740:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5740:6:9"
																			},
																			"nativeSrc": "5740:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5740:15:9"
																		},
																		"nativeSrc": "5740:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5740:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5775:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5775:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5778:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5778:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5768:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5768:6:9"
																			},
																			"nativeSrc": "5768:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5768:15:9"
																		},
																		"nativeSrc": "5768:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5768:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5614:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5614:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5607:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5607:6:9"
																},
																"nativeSrc": "5607:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5607:9:9"
															},
															"nativeSrc": "5604:189:9",
															"nodeType": "YulIf",
															"src": "5604:189:9"
														},
														{
															"nativeSrc": "5802:14:9",
															"nodeType": "YulAssignment",
															"src": "5802:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5811:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5811:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5814:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "5814:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5807:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5807:3:9"
																},
																"nativeSrc": "5807:9:9",
																"nodeType": "YulFunctionCall",
																"src": "5807:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5802:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "5802:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5548:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5579:1:9",
														"nodeType": "YulTypedName",
														"src": "5579:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5582:1:9",
														"nodeType": "YulTypedName",
														"src": "5582:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5588:1:9",
														"nodeType": "YulTypedName",
														"src": "5588:1:9",
														"type": ""
													}
												],
												"src": "5548:274:9"
											},
											{
												"body": {
													"nativeSrc": "6001:166:9",
													"nodeType": "YulBlock",
													"src": "6001:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6018:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6018:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6029:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6029:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6011:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:9"
																},
																"nativeSrc": "6011:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6011:21:9"
															},
															"nativeSrc": "6011:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6011:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6052:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6052:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6063:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6063:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6048:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6048:3:9"
																		},
																		"nativeSrc": "6048:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6048:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6068:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6041:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:9"
																},
																"nativeSrc": "6041:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6041:30:9"
															},
															"nativeSrc": "6041:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6041:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6091:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6091:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6102:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6102:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6087:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6087:3:9"
																		},
																		"nativeSrc": "6087:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6087:18:9"
																	},
																	{
																		"hexValue": "566f746573206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "6107:18:9",
																		"nodeType": "YulLiteral",
																		"src": "6107:18:9",
																		"type": "",
																		"value": "Votes not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6080:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6080:6:9"
																},
																"nativeSrc": "6080:46:9",
																"nodeType": "YulFunctionCall",
																"src": "6080:46:9"
															},
															"nativeSrc": "6080:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "6080:46:9"
														},
														{
															"nativeSrc": "6135:26:9",
															"nodeType": "YulAssignment",
															"src": "6135:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6147:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6158:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6143:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:9"
																},
																"nativeSrc": "6143:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6143:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6135:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0bb0e6f45926aca0086625ca0d11313ef171decd13b805b4e787b05ceb90acae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5827:340:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5978:9:9",
														"nodeType": "YulTypedName",
														"src": "5978:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5992:4:9",
														"nodeType": "YulTypedName",
														"src": "5992:4:9",
														"type": ""
													}
												],
												"src": "5827:340:9"
											},
											{
												"body": {
													"nativeSrc": "6301:168:9",
													"nodeType": "YulBlock",
													"src": "6301:168:9",
													"statements": [
														{
															"nativeSrc": "6311:26:9",
															"nodeType": "YulAssignment",
															"src": "6311:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6323:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6323:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6334:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6334:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6319:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:9"
																},
																"nativeSrc": "6319:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6319:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6311:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6311:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6353:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6353:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6364:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6364:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6346:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6346:6:9"
																},
																"nativeSrc": "6346:25:9",
																"nodeType": "YulFunctionCall",
																"src": "6346:25:9"
															},
															"nativeSrc": "6346:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "6346:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6391:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6391:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6402:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6402:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6387:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6387:3:9"
																		},
																		"nativeSrc": "6387:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6387:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6411:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6411:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6419:42:9",
																				"nodeType": "YulLiteral",
																				"src": "6419:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6407:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6407:3:9"
																		},
																		"nativeSrc": "6407:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6407:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6380:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6380:6:9"
																},
																"nativeSrc": "6380:83:9",
																"nodeType": "YulFunctionCall",
																"src": "6380:83:9"
															},
															"nativeSrc": "6380:83:9",
															"nodeType": "YulExpressionStatement",
															"src": "6380:83:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6172:297:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6262:9:9",
														"nodeType": "YulTypedName",
														"src": "6262:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6273:6:9",
														"nodeType": "YulTypedName",
														"src": "6273:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6281:6:9",
														"nodeType": "YulTypedName",
														"src": "6281:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6292:4:9",
														"nodeType": "YulTypedName",
														"src": "6292:4:9",
														"type": ""
													}
												],
												"src": "6172:297:9"
											},
											{
												"body": {
													"nativeSrc": "6552:199:9",
													"nodeType": "YulBlock",
													"src": "6552:199:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6598:16:9",
																"nodeType": "YulBlock",
																"src": "6598:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6607:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6607:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6610:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6610:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6600:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6600:6:9"
																			},
																			"nativeSrc": "6600:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6600:12:9"
																		},
																		"nativeSrc": "6600:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6600:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6573:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6573:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6582:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6582:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6569:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6569:3:9"
																		},
																		"nativeSrc": "6569:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6569:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6565:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6565:3:9"
																},
																"nativeSrc": "6565:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6565:32:9"
															},
															"nativeSrc": "6562:52:9",
															"nodeType": "YulIf",
															"src": "6562:52:9"
														},
														{
															"nativeSrc": "6623:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6623:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6642:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6642:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6636:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6636:5:9"
																},
																"nativeSrc": "6636:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6636:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6627:5:9",
																	"nodeType": "YulTypedName",
																	"src": "6627:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6705:16:9",
																"nodeType": "YulBlock",
																"src": "6705:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6714:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6714:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6717:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6717:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6707:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6707:6:9"
																			},
																			"nativeSrc": "6707:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6707:12:9"
																		},
																		"nativeSrc": "6707:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6707:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6674:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6674:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6695:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "6695:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6688:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "6688:6:9"
																						},
																						"nativeSrc": "6688:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "6688:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6681:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6681:6:9"
																				},
																				"nativeSrc": "6681:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6681:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6671:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6671:2:9"
																		},
																		"nativeSrc": "6671:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6671:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6664:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6664:6:9"
																},
																"nativeSrc": "6664:40:9",
																"nodeType": "YulFunctionCall",
																"src": "6664:40:9"
															},
															"nativeSrc": "6661:60:9",
															"nodeType": "YulIf",
															"src": "6661:60:9"
														},
														{
															"nativeSrc": "6730:15:9",
															"nodeType": "YulAssignment",
															"src": "6730:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "6740:5:9",
																"nodeType": "YulIdentifier",
																"src": "6740:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6730:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6730:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6474:277:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6518:9:9",
														"nodeType": "YulTypedName",
														"src": "6518:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6529:7:9",
														"nodeType": "YulTypedName",
														"src": "6529:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6541:6:9",
														"nodeType": "YulTypedName",
														"src": "6541:6:9",
														"type": ""
													}
												],
												"src": "6474:277:9"
											},
											{
												"body": {
													"nativeSrc": "6930:172:9",
													"nodeType": "YulBlock",
													"src": "6930:172:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6947:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6947:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6958:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6958:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6940:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:9"
																},
																"nativeSrc": "6940:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6940:21:9"
															},
															"nativeSrc": "6940:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6940:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6981:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6981:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6992:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6992:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6977:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6977:3:9"
																		},
																		"nativeSrc": "6977:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6977:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6997:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6997:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6970:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:9"
																},
																"nativeSrc": "6970:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6970:30:9"
															},
															"nativeSrc": "6970:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6970:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7020:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7020:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7031:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7031:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7016:3:9"
																		},
																		"nativeSrc": "7016:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7016:18:9"
																	},
																	{
																		"hexValue": "4e6f742061207265676973746572656420766f746572",
																		"kind": "string",
																		"nativeSrc": "7036:24:9",
																		"nodeType": "YulLiteral",
																		"src": "7036:24:9",
																		"type": "",
																		"value": "Not a registered voter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7009:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7009:6:9"
																},
																"nativeSrc": "7009:52:9",
																"nodeType": "YulFunctionCall",
																"src": "7009:52:9"
															},
															"nativeSrc": "7009:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "7009:52:9"
														},
														{
															"nativeSrc": "7070:26:9",
															"nodeType": "YulAssignment",
															"src": "7070:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7082:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7082:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7093:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7093:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7078:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7078:3:9"
																},
																"nativeSrc": "7078:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7078:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7070:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7070:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5856af36c9982fc05af30dbd00aa231b175fd64ca45b42d898f413a7edfeab13__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6756:346:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6907:9:9",
														"nodeType": "YulTypedName",
														"src": "6907:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6921:4:9",
														"nodeType": "YulTypedName",
														"src": "6921:4:9",
														"type": ""
													}
												],
												"src": "6756:346:9"
											},
											{
												"body": {
													"nativeSrc": "7246:150:9",
													"nodeType": "YulBlock",
													"src": "7246:150:9",
													"statements": [
														{
															"nativeSrc": "7256:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7256:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7276:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7276:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7270:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7270:5:9"
																},
																"nativeSrc": "7270:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7270:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7260:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7260:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7331:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7331:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7339:4:9",
																				"nodeType": "YulLiteral",
																				"src": "7339:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7327:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7327:3:9"
																		},
																		"nativeSrc": "7327:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7327:17:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7346:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7346:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7351:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7351:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7292:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "7292:34:9"
																},
																"nativeSrc": "7292:66:9",
																"nodeType": "YulFunctionCall",
																"src": "7292:66:9"
															},
															"nativeSrc": "7292:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "7292:66:9"
														},
														{
															"nativeSrc": "7367:23:9",
															"nodeType": "YulAssignment",
															"src": "7367:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7378:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7378:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7383:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7383:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7374:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7374:3:9"
																},
																"nativeSrc": "7374:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7374:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7367:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7367:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7107:289:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7222:3:9",
														"nodeType": "YulTypedName",
														"src": "7222:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7227:6:9",
														"nodeType": "YulTypedName",
														"src": "7227:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7238:3:9",
														"nodeType": "YulTypedName",
														"src": "7238:3:9",
														"type": ""
													}
												],
												"src": "7107:289:9"
											},
											{
												"body": {
													"nativeSrc": "7575:174:9",
													"nodeType": "YulBlock",
													"src": "7575:174:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7592:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7592:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7603:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7603:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7585:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7585:6:9"
																},
																"nativeSrc": "7585:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7585:21:9"
															},
															"nativeSrc": "7585:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7585:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:9"
																		},
																		"nativeSrc": "7622:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7642:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7642:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7615:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:9"
																},
																"nativeSrc": "7615:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7615:30:9"
															},
															"nativeSrc": "7615:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7615:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7665:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7665:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7676:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7676:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7661:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7661:3:9"
																		},
																		"nativeSrc": "7661:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7661:18:9"
																	},
																	{
																		"hexValue": "566f746572206e6f742066726f6d20746869732063697479",
																		"kind": "string",
																		"nativeSrc": "7681:26:9",
																		"nodeType": "YulLiteral",
																		"src": "7681:26:9",
																		"type": "",
																		"value": "Voter not from this city"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7654:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7654:6:9"
																},
																"nativeSrc": "7654:54:9",
																"nodeType": "YulFunctionCall",
																"src": "7654:54:9"
															},
															"nativeSrc": "7654:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "7654:54:9"
														},
														{
															"nativeSrc": "7717:26:9",
															"nodeType": "YulAssignment",
															"src": "7717:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7729:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7729:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7740:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7740:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7725:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7725:3:9"
																},
																"nativeSrc": "7725:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7725:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7717:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7717:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_466e70baf4171da174c5429b22a8fd588d8e8e91f0f15c4b83a7b251a146e2d0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7401:348:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7552:9:9",
														"nodeType": "YulTypedName",
														"src": "7552:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7566:4:9",
														"nodeType": "YulTypedName",
														"src": "7566:4:9",
														"type": ""
													}
												],
												"src": "7401:348:9"
											},
											{
												"body": {
													"nativeSrc": "7928:175:9",
													"nodeType": "YulBlock",
													"src": "7928:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7945:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7945:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7956:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7956:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7938:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7938:6:9"
																},
																"nativeSrc": "7938:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7938:21:9"
															},
															"nativeSrc": "7938:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7938:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7979:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7979:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7990:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7990:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7975:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7975:3:9"
																		},
																		"nativeSrc": "7975:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7975:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7995:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7995:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7968:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7968:6:9"
																},
																"nativeSrc": "7968:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7968:30:9"
															},
															"nativeSrc": "7968:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7968:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8018:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8018:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8029:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8029:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8014:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8014:3:9"
																		},
																		"nativeSrc": "8014:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8014:18:9"
																	},
																	{
																		"hexValue": "4e6f20766f74657320666f7220746869732070726f6a656374",
																		"kind": "string",
																		"nativeSrc": "8034:27:9",
																		"nodeType": "YulLiteral",
																		"src": "8034:27:9",
																		"type": "",
																		"value": "No votes for this project"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8007:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8007:6:9"
																},
																"nativeSrc": "8007:55:9",
																"nodeType": "YulFunctionCall",
																"src": "8007:55:9"
															},
															"nativeSrc": "8007:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "8007:55:9"
														},
														{
															"nativeSrc": "8071:26:9",
															"nodeType": "YulAssignment",
															"src": "8071:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8083:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8083:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8094:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8094:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8079:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8079:3:9"
																},
																"nativeSrc": "8079:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8079:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8071:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8071:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a348020b2dbd9c6a0d91fbabb3185a053a77efdd67d389dd2e534b5c8492671__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7754:349:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7905:9:9",
														"nodeType": "YulTypedName",
														"src": "7905:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7919:4:9",
														"nodeType": "YulTypedName",
														"src": "7919:4:9",
														"type": ""
													}
												],
												"src": "7754:349:9"
											},
											{
												"body": {
													"nativeSrc": "8265:241:9",
													"nodeType": "YulBlock",
													"src": "8265:241:9",
													"statements": [
														{
															"nativeSrc": "8275:26:9",
															"nodeType": "YulAssignment",
															"src": "8275:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8287:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8287:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8298:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8298:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8283:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8283:3:9"
																},
																"nativeSrc": "8283:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8283:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8275:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8275:4:9"
																}
															]
														},
														{
															"nativeSrc": "8310:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8310:52:9",
															"value": {
																"kind": "number",
																"nativeSrc": "8320:42:9",
																"nodeType": "YulLiteral",
																"src": "8320:42:9",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8314:2:9",
																	"nodeType": "YulTypedName",
																	"src": "8314:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8378:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8378:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8393:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8393:6:9"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8401:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "8401:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8389:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:9"
																		},
																		"nativeSrc": "8389:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8389:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8371:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8371:6:9"
																},
																"nativeSrc": "8371:34:9",
																"nodeType": "YulFunctionCall",
																"src": "8371:34:9"
															},
															"nativeSrc": "8371:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "8371:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8425:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8425:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8436:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8436:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8421:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:9"
																		},
																		"nativeSrc": "8421:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8421:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8445:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8445:6:9"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8453:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "8453:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8441:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8441:3:9"
																		},
																		"nativeSrc": "8441:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8441:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:9"
																},
																"nativeSrc": "8414:43:9",
																"nodeType": "YulFunctionCall",
																"src": "8414:43:9"
															},
															"nativeSrc": "8414:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "8414:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8477:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8477:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8488:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8488:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8473:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:9"
																		},
																		"nativeSrc": "8473:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8473:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8493:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8493:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8466:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:9"
																},
																"nativeSrc": "8466:34:9",
																"nodeType": "YulFunctionCall",
																"src": "8466:34:9"
															},
															"nativeSrc": "8466:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "8466:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8108:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8218:9:9",
														"nodeType": "YulTypedName",
														"src": "8218:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8229:6:9",
														"nodeType": "YulTypedName",
														"src": "8229:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8237:6:9",
														"nodeType": "YulTypedName",
														"src": "8237:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8245:6:9",
														"nodeType": "YulTypedName",
														"src": "8245:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8256:4:9",
														"nodeType": "YulTypedName",
														"src": "8256:4:9",
														"type": ""
													}
												],
												"src": "8108:398:9"
											},
											{
												"body": {
													"nativeSrc": "8685:170:9",
													"nodeType": "YulBlock",
													"src": "8685:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8702:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8702:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8713:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8713:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8695:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8695:6:9"
																},
																"nativeSrc": "8695:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8695:21:9"
															},
															"nativeSrc": "8695:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "8695:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8736:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8736:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8747:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8747:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8732:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8732:3:9"
																		},
																		"nativeSrc": "8732:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8732:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8752:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8752:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8725:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8725:6:9"
																},
																"nativeSrc": "8725:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8725:30:9"
															},
															"nativeSrc": "8725:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8725:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8775:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8775:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8786:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8786:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8771:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8771:3:9"
																		},
																		"nativeSrc": "8771:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8771:18:9"
																	},
																	{
																		"hexValue": "566f7465207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8791:22:9",
																		"nodeType": "YulLiteral",
																		"src": "8791:22:9",
																		"type": "",
																		"value": "Vote transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8764:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8764:6:9"
																},
																"nativeSrc": "8764:50:9",
																"nodeType": "YulFunctionCall",
																"src": "8764:50:9"
															},
															"nativeSrc": "8764:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "8764:50:9"
														},
														{
															"nativeSrc": "8823:26:9",
															"nodeType": "YulAssignment",
															"src": "8823:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8835:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8835:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8846:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8846:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8831:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8831:3:9"
																},
																"nativeSrc": "8831:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8831:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8823:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8823:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32c21da3f5704642bc8ac18cb947ed4650ac0c45489f127f4208105344fb7870__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8511:344:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8662:9:9",
														"nodeType": "YulTypedName",
														"src": "8662:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8676:4:9",
														"nodeType": "YulTypedName",
														"src": "8676:4:9",
														"type": ""
													}
												],
												"src": "8511:344:9"
											},
											{
												"body": {
													"nativeSrc": "8908:77:9",
													"nodeType": "YulBlock",
													"src": "8908:77:9",
													"statements": [
														{
															"nativeSrc": "8918:16:9",
															"nodeType": "YulAssignment",
															"src": "8918:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8929:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8929:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8932:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8932:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8925:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8925:3:9"
																},
																"nativeSrc": "8925:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8925:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8918:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8918:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8957:22:9",
																"nodeType": "YulBlock",
																"src": "8957:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8959:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8959:16:9"
																			},
																			"nativeSrc": "8959:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8959:18:9"
																		},
																		"nativeSrc": "8959:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8959:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8949:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8949:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8952:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8952:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8946:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8946:2:9"
																},
																"nativeSrc": "8946:10:9",
																"nodeType": "YulFunctionCall",
																"src": "8946:10:9"
															},
															"nativeSrc": "8943:36:9",
															"nodeType": "YulIf",
															"src": "8943:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8860:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8891:1:9",
														"nodeType": "YulTypedName",
														"src": "8891:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8894:1:9",
														"nodeType": "YulTypedName",
														"src": "8894:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8900:3:9",
														"nodeType": "YulTypedName",
														"src": "8900:3:9",
														"type": ""
													}
												],
												"src": "8860:125:9"
											},
											{
												"body": {
													"nativeSrc": "9147:211:9",
													"nodeType": "YulBlock",
													"src": "9147:211:9",
													"statements": [
														{
															"nativeSrc": "9157:26:9",
															"nodeType": "YulAssignment",
															"src": "9157:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9169:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9169:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9180:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9180:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9165:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9165:3:9"
																},
																"nativeSrc": "9165:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9165:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9157:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9157:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9199:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9199:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9210:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9210:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9192:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:9"
																},
																"nativeSrc": "9192:25:9",
																"nodeType": "YulFunctionCall",
																"src": "9192:25:9"
															},
															"nativeSrc": "9192:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "9192:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9237:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9237:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9248:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9248:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9233:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9233:3:9"
																		},
																		"nativeSrc": "9233:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9233:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9257:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9257:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9265:42:9",
																				"nodeType": "YulLiteral",
																				"src": "9265:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9253:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9253:3:9"
																		},
																		"nativeSrc": "9253:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9253:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9226:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9226:6:9"
																},
																"nativeSrc": "9226:83:9",
																"nodeType": "YulFunctionCall",
																"src": "9226:83:9"
															},
															"nativeSrc": "9226:83:9",
															"nodeType": "YulExpressionStatement",
															"src": "9226:83:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9329:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9329:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9340:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9340:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9325:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9325:3:9"
																		},
																		"nativeSrc": "9325:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9325:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9345:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9345:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9318:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9318:6:9"
																},
																"nativeSrc": "9318:34:9",
																"nodeType": "YulFunctionCall",
																"src": "9318:34:9"
															},
															"nativeSrc": "9318:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "9318:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8990:368:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9100:9:9",
														"nodeType": "YulTypedName",
														"src": "9100:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9111:6:9",
														"nodeType": "YulTypedName",
														"src": "9111:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9119:6:9",
														"nodeType": "YulTypedName",
														"src": "9119:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9127:6:9",
														"nodeType": "YulTypedName",
														"src": "9127:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9138:4:9",
														"nodeType": "YulTypedName",
														"src": "9138:4:9",
														"type": ""
													}
												],
												"src": "8990:368:9"
											},
											{
												"body": {
													"nativeSrc": "9410:148:9",
													"nodeType": "YulBlock",
													"src": "9410:148:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9501:22:9",
																"nodeType": "YulBlock",
																"src": "9501:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9503:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9503:16:9"
																			},
																			"nativeSrc": "9503:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9503:18:9"
																		},
																		"nativeSrc": "9503:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9503:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9426:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9426:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9433:66:9",
																		"nodeType": "YulLiteral",
																		"src": "9433:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9423:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9423:2:9"
																},
																"nativeSrc": "9423:77:9",
																"nodeType": "YulFunctionCall",
																"src": "9423:77:9"
															},
															"nativeSrc": "9420:103:9",
															"nodeType": "YulIf",
															"src": "9420:103:9"
														},
														{
															"nativeSrc": "9532:20:9",
															"nodeType": "YulAssignment",
															"src": "9532:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9543:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9543:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9550:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9550:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9539:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9539:3:9"
																},
																"nativeSrc": "9539:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9539:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9532:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "9363:195:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9392:5:9",
														"nodeType": "YulTypedName",
														"src": "9392:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9402:3:9",
														"nodeType": "YulTypedName",
														"src": "9402:3:9",
														"type": ""
													}
												],
												"src": "9363:195:9"
											},
											{
												"body": {
													"nativeSrc": "9728:211:9",
													"nodeType": "YulBlock",
													"src": "9728:211:9",
													"statements": [
														{
															"nativeSrc": "9738:26:9",
															"nodeType": "YulAssignment",
															"src": "9738:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9750:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9750:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9761:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9761:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9746:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9746:3:9"
																},
																"nativeSrc": "9746:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9746:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9738:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9738:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9780:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9780:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9791:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9791:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9773:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9773:6:9"
																},
																"nativeSrc": "9773:25:9",
																"nodeType": "YulFunctionCall",
																"src": "9773:25:9"
															},
															"nativeSrc": "9773:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "9773:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9818:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9818:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9829:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9829:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9814:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9814:3:9"
																		},
																		"nativeSrc": "9814:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9814:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9838:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9838:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9846:42:9",
																				"nodeType": "YulLiteral",
																				"src": "9846:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9834:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9834:3:9"
																		},
																		"nativeSrc": "9834:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9834:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9807:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9807:6:9"
																},
																"nativeSrc": "9807:83:9",
																"nodeType": "YulFunctionCall",
																"src": "9807:83:9"
															},
															"nativeSrc": "9807:83:9",
															"nodeType": "YulExpressionStatement",
															"src": "9807:83:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9910:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9910:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9921:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9921:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9906:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9906:3:9"
																		},
																		"nativeSrc": "9906:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9926:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9926:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9899:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9899:6:9"
																},
																"nativeSrc": "9899:34:9",
																"nodeType": "YulFunctionCall",
																"src": "9899:34:9"
															},
															"nativeSrc": "9899:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "9899:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9563:376:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9681:9:9",
														"nodeType": "YulTypedName",
														"src": "9681:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9692:6:9",
														"nodeType": "YulTypedName",
														"src": "9692:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9700:6:9",
														"nodeType": "YulTypedName",
														"src": "9700:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9708:6:9",
														"nodeType": "YulTypedName",
														"src": "9708:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9719:4:9",
														"nodeType": "YulTypedName",
														"src": "9719:4:9",
														"type": ""
													}
												],
												"src": "9563:376:9"
											},
											{
												"body": {
													"nativeSrc": "10118:181:9",
													"nodeType": "YulBlock",
													"src": "10118:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10135:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10135:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10146:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10146:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10128:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:9"
																},
																"nativeSrc": "10128:21:9",
																"nodeType": "YulFunctionCall",
																"src": "10128:21:9"
															},
															"nativeSrc": "10128:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "10128:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10169:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10169:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10180:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10180:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10165:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10165:3:9"
																		},
																		"nativeSrc": "10165:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10165:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10185:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10185:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10158:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10158:6:9"
																},
																"nativeSrc": "10158:30:9",
																"nodeType": "YulFunctionCall",
																"src": "10158:30:9"
															},
															"nativeSrc": "10158:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "10158:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10208:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10208:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10219:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10219:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10204:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10204:3:9"
																		},
																		"nativeSrc": "10204:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10204:18:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "10224:33:9",
																		"nodeType": "YulLiteral",
																		"src": "10224:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10197:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10197:6:9"
																},
																"nativeSrc": "10197:61:9",
																"nodeType": "YulFunctionCall",
																"src": "10197:61:9"
															},
															"nativeSrc": "10197:61:9",
															"nodeType": "YulExpressionStatement",
															"src": "10197:61:9"
														},
														{
															"nativeSrc": "10267:26:9",
															"nodeType": "YulAssignment",
															"src": "10267:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10279:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10279:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10290:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10290:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10275:3:9"
																},
																"nativeSrc": "10275:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10275:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10267:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10267:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9944:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10095:9:9",
														"nodeType": "YulTypedName",
														"src": "10095:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10109:4:9",
														"nodeType": "YulTypedName",
														"src": "10109:4:9",
														"type": ""
													}
												],
												"src": "9944:355:9"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_bool__to_t_address_payable_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_TitleRegistry_$1338__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$864__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_8f6a1b1b232280f721ab0d78e4e4d43c85892dee29c08a16552f27589b9e843f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Not the project beneficiary\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d6243dc821c4e3d26290bd4d4cfa321aeec064a307e7fc91798644b2f5fe0b37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Project already executed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_0bb0e6f45926aca0086625ca0d11313ef171decd13b805b4e787b05ceb90acae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Votes not enough\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5856af36c9982fc05af30dbd00aa231b175fd64ca45b42d898f413a7edfeab13__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not a registered voter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_466e70baf4171da174c5429b22a8fd588d8e8e91f0f15c4b83a7b251a146e2d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Voter not from this city\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5a348020b2dbd9c6a0d91fbabb3185a053a77efdd67d389dd2e534b5c8492671__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"No votes for this project\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_32c21da3f5704642bc8ac18cb947ed4650ac0c45489f127f4208105344fb7870__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Vote transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100c4575f3560e01c80639f054ba11161007d578063c73b302e11610058578063c73b302e1461021d578063e82d657214610234578063f2fde38b14610247575f80fd5b80639f054ba1146101ca578063b2ce514b146101ea578063b384abef1461020a575f80fd5b806367f14276116100ad57806367f142761461016f578063715018a6146101845780638da5cb5b1461018c575f80fd5b80630379915d146100c8578063107046bd146100e6575b5f80fd5b6100d061025a565b6040516100dd919061106f565b60405180910390f35b6101366100f43660046110bf565b600260208190525f9182526040909120805460018201549282015460039092015473ffffffffffffffffffffffffffffffffffffffff90911692919060ff1684565b6040805173ffffffffffffffffffffffffffffffffffffffff9095168552602085019390935291830152151560608201526080016100dd565b61018261017d3660046110bf565b610315565b005b610182610606565b5f5473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100dd565b6004546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b6005546101a59073ffffffffffffffffffffffffffffffffffffffff1681565b6101826102183660046110d6565b610619565b61022660035481565b6040519081526020016100dd565b610182610242366004611117565b610b12565b610182610255366004611141565b610eb1565b600480546040517f2146671f000000000000000000000000000000000000000000000000000000008152339281019290925260609173ffffffffffffffffffffffffffffffffffffffff90911690632146671f906024015f60405180830381865afa1580156102cb573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103109190810190611190565b905090565b5f81815260026020526040902054819073ffffffffffffffffffffffffffffffffffffffff1633146103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4e6f74207468652070726f6a6563742062656e6566696369617279000000000060448201526064015b60405180910390fd5b6103b0610f14565b5f8281526002602052604090206003015460ff161561042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f50726f6a65637420616c72656164792065786563757465640000000000000000604482015260640161039f565b600554604080517f18160ddd000000000000000000000000000000000000000000000000000000008152905160049273ffffffffffffffffffffffffffffffffffffffff16916318160ddd918185019160209190819003860181865afa158015610497573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104bb9190611256565b6104c5919061129a565b5f83815260026020819052604090912001541161053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f566f746573206e6f7420656e6f75676800000000000000000000000000000000604482015260640161039f565b5f828152600260205260408082206003810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558154910154915173ffffffffffffffffffffffffffffffffffffffff9091169282156108fc02929190818181858888f193505050501580156105c0573d5f803e3d5ffd5b50604080518381523360208201527f79f124991cfe2130be13599c74373fd040b0ead93c41b26aedbe1a6e6f2844c3910160405180910390a161060260018055565b5050565b61060e610f87565b6106175f610fd9565b565b600480546040517fc3c5a547000000000000000000000000000000000000000000000000000000008152339281019290925273ffffffffffffffffffffffffffffffffffffffff169063c3c5a54790602401602060405180830381865afa158015610686573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106aa91906112d2565b610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f742061207265676973746572656420766f74657200000000000000000000604482015260640161039f565b61071861025a565b60405160200161072891906112f1565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152908290528051602090910120600480547f2146671f0000000000000000000000000000000000000000000000000000000084523391840191909152909173ffffffffffffffffffffffffffffffffffffffff90911690632146671f906024015f60405180830381865afa1580156107cc573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108119190810190611190565b60405160200161082191906112f1565b604051602081830303815290604052805190602001201461089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f566f746572206e6f742066726f6d207468697320636974790000000000000000604482015260640161039f565b5f82815260026020819052604090912001548290610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f20766f74657320666f7220746869732070726f6a65637400000000000000604482015260640161039f565b5f8181526002602052604090206003015460ff1615610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f50726f6a65637420616c72656164792065786563757465640000000000000000604482015260640161039f565b61099b610f14565b6005546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303815f875af1158015610a15573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3991906112d2565b610a9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f566f7465207472616e73666572206661696c6564000000000000000000000000604482015260640161039f565b5f8381526002602081905260408220018054849290610abf90849061130c565b9091555050604080518481523360208201529081018390527f1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e9060600160405180910390a1610b0d60018055565b505050565b600480546040517fc3c5a547000000000000000000000000000000000000000000000000000000008152339281019290925273ffffffffffffffffffffffffffffffffffffffff169063c3c5a54790602401602060405180830381865afa158015610b7f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba391906112d2565b610c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f742061207265676973746572656420766f74657200000000000000000000604482015260640161039f565b610c1161025a565b604051602001610c2191906112f1565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152908290528051602090910120600480547f2146671f0000000000000000000000000000000000000000000000000000000084523391840191909152909173ffffffffffffffffffffffffffffffffffffffff90911690632146671f906024015f60405180830381865afa158015610cc5573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d0a9190810190611190565b604051602001610d1a91906112f1565b6040516020818303038152906040528051906020012014610d97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f566f746572206e6f742066726f6d207468697320636974790000000000000000604482015260640161039f565b610d9f610f14565b600380545f9182610daf83611325565b909155506040805160808101825273ffffffffffffffffffffffffffffffffffffffff86811680835260208084018881525f85870181815260608088018381528a84526002808752938a9020985189547fffffffffffffffffffffffff00000000000000000000000000000000000000001698169790971788559251600188015551908601559251600390940180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016941515949094179093558351858152928301529181018590529192507f1b9d0946c0a6f3b3a57782ad25a4553bd5bcf1f1a252068eafc757670aad573a910160405180910390a15061060260018055565b610eb9610f87565b73ffffffffffffffffffffffffffffffffffffffff8116610f08576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161039f565b610f1181610fd9565b50565b600260015403610f80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161039f565b6002600155565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610617576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161039f565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5b8381101561106757818101518382015260200161104f565b50505f910152565b602081525f825180602084015261108d81604085016020870161104d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b5f602082840312156110cf575f80fd5b5035919050565b5f80604083850312156110e7575f80fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff81168114610f11575f80fd5b5f8060408385031215611128575f80fd5b8235611133816110f6565b946020939093013593505050565b5f60208284031215611151575f80fd5b813561115c816110f6565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f602082840312156111a0575f80fd5b815167ffffffffffffffff808211156111b7575f80fd5b818401915084601f8301126111ca575f80fd5b8151818111156111dc576111dc611163565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561122257611222611163565b8160405282815287602084870101111561123a575f80fd5b61124b83602083016020880161104d565b979650505050505050565b5f60208284031215611266575f80fd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f826112cd577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b5f602082840312156112e2575f80fd5b8151801515811461115c575f80fd5b5f825161130281846020870161104d565b9190910192915050565b8082018082111561131f5761131f61126d565b92915050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113555761135561126d565b506001019056fea26469706673582212200c3fbda213562b3a885eddfdb42338815056b36b549a71ad9bb7d8ead32157ea64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F054BA1 GT PUSH2 0x7D JUMPI DUP1 PUSH4 0xC73B302E GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xC73B302E EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xE82D6572 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x247 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9F054BA1 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xB2CE514B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xB384ABEF EQ PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67F14276 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x67F14276 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x379915D EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x107046BD EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xDD JUMP JUMPDEST PUSH2 0x182 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x10BF JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH2 0x606 JUMP JUMPDEST PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1A5 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1A5 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0x226 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST PUSH2 0x182 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2146671F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x2146671F SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x310 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1190 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207468652070726F6A6563742062656E65666963696172790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B0 PUSH2 0xF14 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0x18160DDD SWAP2 DUP2 DUP6 ADD SWAP2 PUSH1 0x20 SWAP2 SWAP1 DUP2 SWAP1 SUB DUP7 ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x497 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD GT PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746573206E6F7420656E6F75676800000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP3 DUP3 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x79F124991CFE2130BE13599C74373FD040B0EAD93C41B26AEDBE1A6E6F2844C3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x602 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x60E PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x617 PUSH0 PUSH2 0xFD9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xC3C5A54700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xC3C5A547 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061207265676973746572656420766F74657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0x718 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x4 DUP1 SLOAD PUSH32 0x2146671F00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x2146671F SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x811 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572206E6F742066726F6D207468697320636974790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20766F74657320666F7220746869732070726F6A65637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0x99B PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA15 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA39 SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xABF SWAP1 DUP5 SWAP1 PUSH2 0x130C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xB0D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xC3C5A54700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xC3C5A547 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061207265676973746572656420766F74657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0xC11 PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x4 DUP1 SLOAD PUSH32 0x2146671F00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x2146671F SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCC5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD0A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572206E6F742066726F6D207468697320636974790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0xD9F PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0xDAF DUP4 PUSH2 0x1325 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE PUSH0 DUP6 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP1 DUP9 ADD DUP4 DUP2 MSTORE DUP11 DUP5 MSTORE PUSH1 0x2 DUP1 DUP8 MSTORE SWAP4 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP9 AND SWAP8 SWAP1 SWAP8 OR DUP9 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP9 ADD SSTORE MLOAD SWAP1 DUP7 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP3 DUP4 ADD MSTORE SWAP2 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x1B9D0946C0A6F3B3A57782AD25A4553BD5BCF1F1A252068EAFC757670AAD573A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x602 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xEB9 PUSH2 0xF87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xF08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xFD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1067 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x104F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x108D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x104D JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1128 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1133 DUP2 PUSH2 0x10F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1151 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x115C DUP2 PUSH2 0x10F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11DC PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1222 JUMPI PUSH2 0x1222 PUSH2 0x1163 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x123A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x124B DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x104D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x12CD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x115C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1302 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x104D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x126D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1355 JUMPI PUSH2 0x1355 PUSH2 0x126D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC EXTCODEHASH 0xBD LOG2 SGT JUMP 0x2B GASPRICE DUP9 0x5E 0xDD REVERT 0xB4 0x23 CODESIZE DUP2 POP JUMP 0xB3 PUSH12 0x549A71AD9BB7D8EAD32157EA PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "263:2844:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2986:118;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;462:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1185:42:9;1173:55;;;1155:74;;1260:2;1245:18;;1238:34;;;;1288:18;;;1281:34;1358:14;1351:22;1346:2;1331:18;;1324:50;1142:3;1127:19;462:43:7;914:466:9;2493:485:7;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;;;1638:85;;;1561:42:9;1549:55;;;1531:74;;1519:2;1504:18;1638:85:0;1385:226:9;549:34:7;;;;;;;;;590:26;;;;;;;;;2147:338;;;;;;:::i;:::-;;:::i;512:28::-;;;;;;;;;2512:25:9;;;2500:2;2485:18;512:28:7;2366:177:9;1807:332:7;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2986:118:7:-;3059:13;;;:37;;;;;3085:10;3059:37;;;1531:74:9;;;;3026:13:7;;3059;;;;;:25;;1504:18:9;;3059:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3052:44;;2986:118;:::o;2493:485::-;1503:20;;;;:8;:20;;;;;:32;:20;;:32;;1489:10;:46;1481:86;;;;;;;4663:2:9;1481:86:7;;;4645:21:9;4702:2;4682:18;;;4675:30;4741:29;4721:18;;;4714:57;4788:18;;1481:86:7;;;;;;;;;2261:21:2::1;:19;:21::i;:::-;2614:20:7::2;::::0;;;:8:::2;:20;::::0;;;;:29:::2;;::::0;::::2;;2613:30;2605:67;;;::::0;::::2;::::0;;5019:2:9;2605:67:7::2;::::0;::::2;5001:21:9::0;5058:2;5038:18;;;5031:30;5097:26;5077:18;;;5070:54;5141:18;;2605:67:7::2;4817:348:9::0;2605:67:7::2;2721:13;::::0;:27:::2;::::0;;;;;;;2751:1:::2;::::0;2721:13:::2;;::::0;:25:::2;::::0;:27;;::::2;::::0;::::2;::::0;;;;;;;;:13;:27:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;;;:::i;:::-;2691:20;::::0;;;:8:::2;:20;::::0;;;;;;;:26:::2;::::0;:62:::2;2683:91;;;::::0;::::2;::::0;;6029:2:9;2683:91:7::2;::::0;::::2;6011:21:9::0;6068:2;6048:18;;;6041:30;6107:18;6087;;;6080:46;6143:18;;2683:91:7::2;5827:340:9::0;2683:91:7::2;2787:20;::::0;;;:8:::2;:20;::::0;;;;;:29:::2;::::0;::::2;:36:::0;;;::::2;2819:4;2787:36:::0;;::::2;::::0;;;2834:32;;2876:36;::::2;::::0;2834:79;;:32:::2;::::0;;::::2;::::0;:79;::::2;;;::::0;2876:36;2834:79;;2787:20;2834:79;2876:36;2834:32;:79;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;2931:39:7::2;::::0;;6346:25:9;;;2959:10:7::2;6402:2:9::0;6387:18;;6380:83;2931:39:7::2;::::0;6319:18:9;2931:39:7::2;;;;;;;2303:20:2::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;2493:485:7::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2147:338:7:-;901:13;;;:38;;;;;928:10;901:38;;;1531:74:9;;;;901:13:7;;;:26;;1504:18:9;;901:38:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;893:73;;;;;;;6958:2:9;893:73:7;;;6940:21:9;6997:2;6977:18;;;6970:30;7036:24;7016:18;;;7009:52;7078:18;;893:73:7;6756:346:9;893:73:7;1096:9;:7;:9::i;:::-;1079:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1069:38;;1079:27;1069:38;;;;1026:13;;;:37;;;1052:10;1026:37;;;1531:74:9;;;;1069:38:7;;1026:13;;;;;:25;;1504:18:9;;1026:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1009:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;999:66;;;;;;:108;977:182;;;;;;;7603:2:9;977:182:7;;;7585:21:9;7642:2;7622:18;;;7615:30;7681:26;7661:18;;;7654:54;7725:18;;977:182:7;7401:348:9;977:182:7;1281:1:::1;1252:20:::0;;;:8:::1;:20;::::0;;;;;;;:26:::1;::::0;2243:10;;1244:68:::1;;;::::0;::::1;::::0;;7956:2:9;1244:68:7::1;::::0;::::1;7938:21:9::0;7995:2;7975:18;;;7968:30;8034:27;8014:18;;;8007:55;8079:18;;1244:68:7::1;7754:349:9::0;1244:68:7::1;1332:20;::::0;;;:8:::1;:20;::::0;;;;:29:::1;;::::0;::::1;;1331:30;1323:67;;;::::0;::::1;::::0;;5019:2:9;1323:67:7::1;::::0;::::1;5001:21:9::0;5058:2;5038:18;;;5031:30;5097:26;5077:18;;;5070:54;5141:18;;1323:67:7::1;4817:348:9::0;1323:67:7::1;2261:21:2::2;:19;:21::i;:::-;2287:13:7::3;::::0;:61:::3;::::0;;;;2314:10:::3;2287:61;::::0;::::3;8371:34:9::0;2334:4:7::3;8421:18:9::0;;;8414:43;8473:18;;;8466:34;;;2287:13:7::3;::::0;;::::3;::::0;:26:::3;::::0;8283:18:9;;2287:61:7::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2279:94;;;::::0;::::3;::::0;;8713:2:9;2279:94:7::3;::::0;::::3;8695:21:9::0;8752:2;8732:18;;;8725:30;8791:22;8771:18;;;8764:50;8831:18;;2279:94:7::3;8511:344:9::0;2279:94:7::3;2386:20;::::0;;;:8:::3;:20;::::0;;;;;;:26:::3;:36:::0;;2416:6;;2386:20;:36:::3;::::0;2416:6;;2386:36:::3;:::i;:::-;::::0;;;-1:-1:-1;;2440:37:7::3;::::0;;9192:25:9;;;2458:10:7::3;9248:2:9::0;9233:18;;9226:83;9325:18;;;9318:34;;;2440:37:7::3;::::0;9180:2:9;9165:18;2440:37:7::3;;;;;;;2303:20:2::2;1716:1:::0;2809:22;;2629:209;2303:20:::2;1170:1:7::1;2147:338:::0;;:::o;1807:332::-;901:13;;;:38;;;;;928:10;901:38;;;1531:74:9;;;;901:13:7;;;:26;;1504:18:9;;901:38:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;893:73;;;;;;;6958:2:9;893:73:7;;;6940:21:9;6997:2;6977:18;;;6970:30;7036:24;7016:18;;;7009:52;7078:18;;893:73:7;6756:346:9;893:73:7;1096:9;:7;:9::i;:::-;1079:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1069:38;;1079:27;1069:38;;;;1026:13;;;:37;;;1052:10;1026:37;;;1531:74:9;;;;1069:38:7;;1026:13;;;;;:25;;1504:18:9;;1026:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1009:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;999:66;;;;;;:108;977:182;;;;;;;7603:2:9;977:182:7;;;7585:21:9;7642:2;7622:18;;;7615:30;7681:26;7661:18;;;7654:54;7725:18;;977:182:7;7401:348:9;977:182:7;2261:21:2::1;:19;:21::i;:::-;1959:13:7::2;:15:::0;;1939:17:::2;::::0;;1959:15:::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;2007:49:7::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;-1:-1:-1;2007:49:7;;;;;;;;;;;;;1985:19;;;:8:::2;:19:::0;;;;;;;:71;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;-1:-1:-1;1985:71:7;::::2;::::0;;;;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;;::::0;;;::::2;::::0;;;2074:57;;9192:25:9;;;9233:18;;;9226:83;9325:18;;;9318:34;;;1985:19:7;;-1:-1:-1;2074:57:7::2;::::0;9165:18:9;2074:57:7::2;;;;;;;1928:211;2303:20:2::1;1716:1:::0;2809:22;;2629:209;2543:215:0;1531:13;:11;:13::i;:::-;2627:22:::1;::::0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;1531:74:9::0;1504:18;;2672:31:0::1;1385:226:9::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;10146:2:9;2460:63:2;;;10128:21:9;10185:2;10165:18;;;10158:30;10224:33;10204:18;;;10197:61;10275:18;;2460:63:2;9944:355:9;2460:63:2;1759:1;2598:7;:18;2336:287::o;1796:162:0:-;1684:7;1710:6;1855:23;1710:6;735:10:6;1855:23:0;1851:101;;1901:40;;;;;735:10:6;1901:40:0;;;1531:74:9;1504:18;;1901:40:0;1385:226:9;2912:187:0;2985:16;3004:6;;;3020:17;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:250:9:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:9;238:16;;231:27;14:250::o;269:455::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;640:2;628:15;645:66;624:88;609:104;;;;715:2;605:113;;269:455;-1:-1:-1;;269:455:9:o;729:180::-;788:6;841:2;829:9;820:7;816:23;812:32;809:52;;;857:1;854;847:12;809:52;-1:-1:-1;880:23:9;;729:180;-1:-1:-1;729:180:9:o;2113:248::-;2181:6;2189;2242:2;2230:9;2221:7;2217:23;2213:32;2210:52;;;2258:1;2255;2248:12;2210:52;-1:-1:-1;;2281:23:9;;;2351:2;2336:18;;;2323:32;;-1:-1:-1;2113:248:9:o;2548:162::-;2642:42;2635:5;2631:54;2624:5;2621:65;2611:93;;2700:1;2697;2690:12;2715:331;2791:6;2799;2852:2;2840:9;2831:7;2827:23;2823:32;2820:52;;;2868:1;2865;2858:12;2820:52;2907:9;2894:23;2926:39;2959:5;2926:39;:::i;:::-;2984:5;3036:2;3021:18;;;;3008:32;;-1:-1:-1;;;2715:331:9:o;3051:255::-;3110:6;3163:2;3151:9;3142:7;3138:23;3134:32;3131:52;;;3179:1;3176;3169:12;3131:52;3218:9;3205:23;3237:39;3270:5;3237:39;:::i;:::-;3295:5;3051:255;-1:-1:-1;;;3051:255:9:o;3311:184::-;3363:77;3360:1;3353:88;3460:4;3457:1;3450:15;3484:4;3481:1;3474:15;3500:956;3580:6;3633:2;3621:9;3612:7;3608:23;3604:32;3601:52;;;3649:1;3646;3639:12;3601:52;3682:9;3676:16;3711:18;3752:2;3744:6;3741:14;3738:34;;;3768:1;3765;3758:12;3738:34;3806:6;3795:9;3791:22;3781:32;;3851:7;3844:4;3840:2;3836:13;3832:27;3822:55;;3873:1;3870;3863:12;3822:55;3902:2;3896:9;3924:2;3920;3917:10;3914:36;;;3930:18;;:::i;:::-;4064:2;4058:9;4126:4;4118:13;;3969:66;4114:22;;;4138:2;4110:31;4106:40;4094:53;;;4162:18;;;4182:22;;;4159:46;4156:72;;;4208:18;;:::i;:::-;4248:10;4244:2;4237:22;4283:2;4275:6;4268:18;4323:7;4318:2;4313;4309;4305:11;4301:20;4298:33;4295:53;;;4344:1;4341;4334:12;4295:53;4357:68;4422:2;4417;4409:6;4405:15;4400:2;4396;4392:11;4357:68;:::i;:::-;4444:6;3500:956;-1:-1:-1;;;;;;;3500:956:9:o;5170:184::-;5240:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:52;;;5309:1;5306;5299:12;5261:52;-1:-1:-1;5332:16:9;;5170:184;-1:-1:-1;5170:184:9:o;5359:::-;5411:77;5408:1;5401:88;5508:4;5505:1;5498:15;5532:4;5529:1;5522:15;5548:274;5588:1;5614;5604:189;;5649:77;5646:1;5639:88;5750:4;5747:1;5740:15;5778:4;5775:1;5768:15;5604:189;-1:-1:-1;5807:9:9;;5548:274::o;6474:277::-;6541:6;6594:2;6582:9;6573:7;6569:23;6565:32;6562:52;;;6610:1;6607;6600:12;6562:52;6642:9;6636:16;6695:5;6688:13;6681:21;6674:5;6671:32;6661:60;;6717:1;6714;6707:12;7107:289;7238:3;7276:6;7270:13;7292:66;7351:6;7346:3;7339:4;7331:6;7327:17;7292:66;:::i;:::-;7374:16;;;;;7107:289;-1:-1:-1;;7107:289:9:o;8860:125::-;8925:9;;;8946:10;;;8943:36;;;8959:18;;:::i;:::-;8860:125;;;;:::o;9363:195::-;9402:3;9433:66;9426:5;9423:77;9420:103;;9503:18;;:::i;:::-;-1:-1:-1;9550:1:9;9539:13;;9363:195::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1002000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createProject(address,uint256)": "infinite",
								"executeProject(uint256)": "infinite",
								"getCity()": "infinite",
								"owner()": "2361",
								"projects(uint256)": "8922",
								"projectsCount()": "2316",
								"renounceOwnership()": "infinite",
								"titleRegistry()": "2335",
								"transferOwnership(address)": "infinite",
								"treasuryToken()": "2357",
								"vote(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 263,
									"end": 3107,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1595,
									"end": 1799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1595,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1707,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 915,
									"end": 966,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 888,
									"end": 906,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 888,
									"end": 906,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 1733,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1720,
									"end": 1750,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1774,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1761,
									"end": 1791,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1791,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 160,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 160,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 104,
									"end": 135,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 104,
									"end": 135,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 94,
									"end": 136,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 94,
									"end": 136,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 84,
									"end": 154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 84,
									"end": 154,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 140,
									"end": 152,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 84,
									"end": 154,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 84,
									"end": 154,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14,
									"end": 160,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 160,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 165,
									"end": 764,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 165,
									"end": 764,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 288,
									"end": 294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 302,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 304,
									"end": 310,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 359,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 345,
									"end": 354,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 336,
									"end": 343,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 332,
									"end": 355,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 328,
									"end": 360,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 325,
									"end": 377,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 325,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 325,
									"end": 377,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 373,
									"end": 374,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 363,
									"end": 375,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 325,
									"end": 377,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 325,
									"end": 377,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 399,
									"end": 415,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 424,
									"end": 470,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 464,
									"end": 469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 470,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 424,
									"end": 470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 424,
									"end": 470,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 424,
									"end": 470,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 539,
									"end": 541,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 524,
									"end": 542,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 524,
									"end": 542,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 518,
									"end": 543,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 489,
									"end": 494,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 489,
									"end": 494,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 552,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 518,
									"end": 543,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 552,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 552,
									"end": 600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 552,
									"end": 600,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 552,
									"end": 600,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 671,
									"end": 673,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 656,
									"end": 674,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 656,
									"end": 674,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 650,
									"end": 675,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 619,
									"end": 626,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 619,
									"end": 626,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 684,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 650,
									"end": 675,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 684,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 684,
									"end": 732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 684,
									"end": 732,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 684,
									"end": 732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 751,
									"end": 758,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 741,
									"end": 758,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 741,
									"end": 758,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 741,
									"end": 758,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 165,
									"end": 764,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 165,
									"end": 764,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 165,
									"end": 764,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 165,
									"end": 764,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 165,
									"end": 764,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 165,
									"end": 764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 769,
									"end": 972,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 769,
									"end": 972,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 3107,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c3fbda213562b3a885eddfdb42338815056b36b549a71ad9bb7d8ead32157ea64736f6c63430008160033",
									".code": [
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "9F054BA1"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "C73B302E"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "C73B302E"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "E82D6572"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "9F054BA1"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "B2CE514B"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "B384ABEF"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "67F14276"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "67F14276"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "379915D"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "107046BD"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 263,
											"end": 3107,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2986,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2986,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 505,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 505,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1185,
											"end": 1227,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1173,
											"end": 1228,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1173,
											"end": 1228,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1155,
											"end": 1229,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1155,
											"end": 1229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1238,
											"end": 1272,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1238,
											"end": 1272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1238,
											"end": 1272,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1238,
											"end": 1272,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1372,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1351,
											"end": 1373,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1348,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1324,
											"end": 1374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1127,
											"end": 1146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 462,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 914,
											"end": 1380,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2493,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2493,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1549,
											"end": 1604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1549,
											"end": 1604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1521,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1385,
											"end": 1611,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 549,
											"end": 583,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 549,
											"end": 583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 549,
											"end": 583,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 549,
											"end": 583,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 549,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 549,
											"end": 583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 549,
											"end": 583,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 549,
											"end": 583,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 549,
											"end": 583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 549,
											"end": 583,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2147,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2147,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 512,
											"end": 540,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 512,
											"end": 540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 512,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 512,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 512,
											"end": 540,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 512,
											"end": 540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 512,
											"end": 540,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 512,
											"end": 540,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 512,
											"end": 540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 512,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 512,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2366,
											"end": 2543,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1807,
											"end": 2139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1807,
											"end": 2139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "2146671F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3095,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3084,
											"name": "PUSH",
											"source": 7,
											"value": "2146671F"
										},
										{
											"begin": 3059,
											"end": 3084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3059,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3059,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1535,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1535,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1535,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1535,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4665,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4645,
											"end": 4666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4702,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4705,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4770,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F74207468652070726F6A6563742062656E65666963696172790000000000"
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4771,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1481,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2634,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2614,
											"end": 2634,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2643,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2614,
											"end": 2643,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2643,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2614,
											"end": 2643,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2643,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "PUSH",
											"source": 9,
											"value": "50726F6A65637420616C72656164792065786563757465640000000000000000"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5070,
											"end": 5124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5159,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5141,
											"end": 5159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4817,
											"end": 5165,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2605,
											"end": 2672,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2721,
											"end": 2734,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2752,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2721,
											"end": 2734,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2734,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2748,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2721,
											"end": 2748,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2721,
											"end": 2748,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2752,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2721,
											"end": 2752,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2752,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2752,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2721,
											"end": 2752,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2752,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2721,
											"end": 2752,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2711,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2691,
											"end": 2711,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2711,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2717,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2717,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2753,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2683,
											"end": 2774,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2683,
											"end": 2774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6029,
											"end": 6031,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2683,
											"end": 2774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6070,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "PUSH",
											"source": 9,
											"value": "566F746573206E6F7420656E6F75676800000000000000000000000000000000"
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6126,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5827,
											"end": 6167,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2683,
											"end": 2774,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2807,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2787,
											"end": 2807,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2816,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2787,
											"end": 2816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2816,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2823,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2823,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2823,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 2787,
											"end": 2823,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2823,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2787,
											"end": 2823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2823,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2823,
											"modifierDepth": 2,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2823,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2823,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2866,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2912,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2912,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2866,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2866,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2866,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2866,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2912,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2866,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2834,
											"end": 2913,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 2970,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2970,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 2969,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6402,
											"end": 6404,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6463,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "79F124991CFE2130BE13599C74373FD040B0EAD93C41B26AEDBE1A6E6F2844C3"
										},
										{
											"begin": 2931,
											"end": 2970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2970,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 901,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 901,
											"end": 914,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 914,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "C3C5A54700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 901,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 901,
											"end": 914,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 901,
											"end": 914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "C3C5A547"
										},
										{
											"begin": 901,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 901,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 6960,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 6999,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6970,
											"end": 7000,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7060,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F742061207265676973746572656420766F74657200000000000000000000"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6756,
											"end": 7102,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 893,
											"end": 966,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1096,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1096,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1079,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "2146671F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1062,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "2146671F"
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1026,
											"end": 1063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1009,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7642,
											"end": 7644,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "PUSH",
											"source": 9,
											"value": "566F746572206E6F742066726F6D207468697320636974790000000000000000"
										},
										{
											"begin": 7661,
											"end": 7679,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7661,
											"end": 7679,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7708,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 7401,
											"end": 7749,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1252,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1278,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1278,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1312,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1244,
											"end": 1312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 1312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 7959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 7997,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8034,
											"end": 8061,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20766F74657320666F7220746869732070726F6A65637400000000000000"
										},
										{
											"begin": 8014,
											"end": 8032,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8014,
											"end": 8032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 7754,
											"end": 8103,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1244,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1332,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1332,
											"end": 1361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1332,
											"end": 1361,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1361,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1390,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1323,
											"end": 1390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1323,
											"end": 1390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "PUSH",
											"source": 9,
											"value": "50726F6A65637420616C72656164792065786563757465640000000000000000"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5070,
											"end": 5124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5159,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5141,
											"end": 5159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4817,
											"end": 5165,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1323,
											"end": 1390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2300,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2348,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2287,
											"end": 2348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2324,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8405,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2338,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8414,
											"end": 8457,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8500,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8500,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8500,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2300,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2300,
											"modifierDepth": 3,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2313,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2287,
											"end": 2313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2287,
											"end": 2348,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2287,
											"end": 2348,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2373,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2279,
											"end": 2373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2373,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8713,
											"end": 8715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2279,
											"end": 2373,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 8754,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8732,
											"end": 8750,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8732,
											"end": 8750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8725,
											"end": 8755,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8791,
											"end": 8813,
											"name": "PUSH",
											"source": 9,
											"value": "566F7465207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8764,
											"end": 8814,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 8849,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8831,
											"end": 8849,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 8511,
											"end": 8855,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2279,
											"end": 2373,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2394,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2386,
											"end": 2406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2412,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2422,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2422,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2386,
											"end": 2422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2422,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2386,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2422,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2386,
											"end": 2422,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2422,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2477,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9192,
											"end": 9217,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2468,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9248,
											"end": 9250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9226,
											"end": 9309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E"
										},
										{
											"begin": 2440,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2477,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1807,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 901,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 901,
											"end": 914,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 914,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "C3C5A54700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 901,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 901,
											"end": 914,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 901,
											"end": 914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 927,
											"name": "PUSH",
											"source": 7,
											"value": "C3C5A547"
										},
										{
											"begin": 901,
											"end": 927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 901,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 901,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 6960,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 893,
											"end": 966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6961,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 6999,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6970,
											"end": 7000,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7060,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F742061207265676973746572656420766F74657200000000000000000000"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 893,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6756,
											"end": 7102,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 893,
											"end": 966,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 893,
											"end": 966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1096,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1096,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1079,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "2146671F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1062,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "2146671F"
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1026,
											"end": 1063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1026,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1009,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1065,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7642,
											"end": 7644,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "PUSH",
											"source": 9,
											"value": "566F746572206E6F742066726F6D207468697320636974790000000000000000"
										},
										{
											"begin": 7661,
											"end": 7679,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7661,
											"end": 7679,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7708,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 7401,
											"end": 7749,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 977,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1959,
											"end": 1974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1974,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 1956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 1956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1974,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1959,
											"end": 1974,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1974,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1959,
											"end": 1974,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1974,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1959,
											"end": 1974,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1974,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2007,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 1993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"modifierDepth": 2,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2056,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2131,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2131,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9192,
											"end": 9217,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9226,
											"end": 9309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9352,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1B9D0946C0A6F3B3A57782AD25A4553BD5BCF1F1A252068EAFC757670AAD573A"
										},
										{
											"begin": 2074,
											"end": 2131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2131,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2131,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2131,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2131,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2131,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2131,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1928,
											"end": 2139,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1385,
											"end": 1611,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10128,
											"end": 10149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10187,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10158,
											"end": 10188,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10224,
											"end": 10257,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10293,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10275,
											"end": 10293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 9944,
											"end": 10299,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1385,
											"end": 1611,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 269,
											"end": 724,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 269,
											"end": 724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 400,
											"end": 421,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 444,
											"end": 457,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 473,
											"end": 491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 544,
											"end": 559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 509,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 509,
											"end": 588,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 509,
											"end": 588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 642,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 645,
											"end": 711,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 624,
											"end": 712,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 609,
											"end": 713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 609,
											"end": 713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 609,
											"end": 713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 609,
											"end": 713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 605,
											"end": 718,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 269,
											"end": 724,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 729,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 729,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 838,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 820,
											"end": 827,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 816,
											"end": 839,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 812,
											"end": 844,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 809,
											"end": 861,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 809,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 809,
											"end": 861,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 857,
											"end": 858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 847,
											"end": 859,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 809,
											"end": 861,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 809,
											"end": 861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 880,
											"end": 903,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 880,
											"end": 903,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 729,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 729,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2361,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2113,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2228,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2245,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2210,
											"end": 2262,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2262,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2210,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2281,
											"end": 2304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2304,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2304,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2351,
											"end": 2353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2113,
											"end": 2361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2548,
											"end": 2710,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 2548,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2685,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2686,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2611,
											"end": 2704,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2698,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2702,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 3046,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2715,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2791,
											"end": 2797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2838,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2850,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2855,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 2916,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2959,
											"end": 2964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 2926,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2965,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2926,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2984,
											"end": 2989,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3040,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3040,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2715,
											"end": 3046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3306,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3051,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3149,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3138,
											"end": 3161,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3166,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 3131,
											"end": 3183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3183,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 3131,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3228,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3270,
											"end": 3275,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3237,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3300,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3306,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3495,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3311,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3363,
											"end": 3440,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3360,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3460,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3457,
											"end": 3458,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3450,
											"end": 3465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3488,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3481,
											"end": 3482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3489,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 4456,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3500,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3631,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3647,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3651,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3729,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3755,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3770,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3791,
											"end": 3813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3781,
											"end": 3813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3781,
											"end": 3813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3840,
											"end": 3842,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3849,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3832,
											"end": 3859,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3822,
											"end": 3877,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3875,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3877,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3822,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3904,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3927,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3914,
											"end": 3950,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3914,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3914,
											"end": 3950,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3930,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4126,
											"end": 4130,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4118,
											"end": 4131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3969,
											"end": 4035,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4140,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 4110,
											"end": 4141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4146,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4205,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4228,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4156,
											"end": 4228,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4208,
											"end": 4226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4246,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4237,
											"end": 4259,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4283,
											"end": 4285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4330,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4311,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4301,
											"end": 4321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4331,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4348,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4295,
											"end": 4348,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4348,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4295,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4422,
											"end": 4424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4357,
											"end": 4425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4425,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4357,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 4456,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 4456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5170,
											"end": 5354,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5170,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5279,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5296,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5313,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5261,
											"end": 5313,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5261,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5348,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5170,
											"end": 5354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5170,
											"end": 5354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5359,
											"end": 5543,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5359,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5411,
											"end": 5488,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5408,
											"end": 5409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5489,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5512,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 5505,
											"end": 5506,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5822,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 5548,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5615,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5604,
											"end": 5793,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5726,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5646,
											"end": 5647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5727,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5747,
											"end": 5748,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5740,
											"end": 5755,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5775,
											"end": 5776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5783,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5793,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5604,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5807,
											"end": 5816,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5807,
											"end": 5816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6474,
											"end": 6751,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6474,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6541,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6582,
											"end": 6591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6580,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6592,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6597,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6614,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6562,
											"end": 6614,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6612,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6614,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6562,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6636,
											"end": 6652,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6695,
											"end": 6700,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6688,
											"end": 6701,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6681,
											"end": 6702,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6703,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6661,
											"end": 6721,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6707,
											"end": 6719,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7396,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7107,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7283,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7351,
											"end": 7357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7349,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7331,
											"end": 7337,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7292,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7358,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7292,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7390,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7390,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7390,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7396,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7107,
											"end": 7396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8985,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 8860,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8934,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8956,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8943,
											"end": 8979,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8943,
											"end": 8979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8943,
											"end": 8979,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 8959,
											"end": 8977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8985,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9363,
											"end": 9558,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 9363,
											"end": 9558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9499,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9500,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9420,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 9420,
											"end": 9523,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 9503,
											"end": 9521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9550,
											"end": 9551,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9539,
											"end": 9552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9363,
											"end": 9558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DAO.sol",
								"contracts/Title.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createProject(address,uint256)": "e82d6572",
							"executeProject(uint256)": "67f14276",
							"getCity()": "0379915d",
							"owner()": "8da5cb5b",
							"projects(uint256)": "107046bd",
							"projectsCount()": "c73b302e",
							"renounceOwnership()": "715018a6",
							"titleRegistry()": "9f054ba1",
							"transferOwnership(address)": "f2fde38b",
							"treasuryToken()": "b2ce514b",
							"vote(uint256,uint256)": "b384abef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract TitleRegistry\",\"name\":\"_titleRegistry\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_treasuryToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"ProjectExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountRequested\",\"type\":\"uint256\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"executeProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCity\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"titleRegistry\",\"outputs\":[{\"internalType\":\"contract TitleRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votes\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAO.sol\":\"DAO\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/DAO.sol\":{\"keccak256\":\"0x489ad37d0b576b1ce563e0a03e92072c4d11222c1ec5f30d8d857cf96dd95620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6a27b0f9c47918cf2c7a92b3d2d468f6ca37c05985f9e7b83a20b126b94404f\",\"dweb:/ipfs/QmaALd76pEPQee8EokAA1LStwbgLgQipnFcaKaPS7niX93\"]},\"contracts/Title.sol\":{\"keccak256\":\"0xc2c75a857b4aaa1b028d4c2534630864e8ab55016b68f772358b82744cd24ecd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://912f82099eee0b5920b9c0ebd428d9c170224b3770b04f2e7300fa4a5531ff7d\",\"dweb:/ipfs/QmWpT4KRKJ7ewKLHdnFx6wciJHRJ9Uhom8EK9zSsxMEXwS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/DAO.sol:DAO",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/DAO.sol:DAO",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1014,
								"contract": "contracts/DAO.sol:DAO",
								"label": "projects",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(Project)1009_storage)"
							},
							{
								"astId": 1016,
								"contract": "contracts/DAO.sol:DAO",
								"label": "projectsCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1019,
								"contract": "contracts/DAO.sol:DAO",
								"label": "titleRegistry",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(TitleRegistry)1338"
							},
							{
								"astId": 1022,
								"contract": "contracts/DAO.sol:DAO",
								"label": "treasuryToken",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(ERC20)864"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)864": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(TitleRegistry)1338": {
								"encoding": "inplace",
								"label": "contract TitleRegistry",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Project)1009_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct DAO.Project)",
								"numberOfBytes": "32",
								"value": "t_struct(Project)1009_storage"
							},
							"t_struct(Project)1009_storage": {
								"encoding": "inplace",
								"label": "struct DAO.Project",
								"members": [
									{
										"astId": 1002,
										"contract": "contracts/DAO.sol:DAO",
										"label": "beneficiary",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 1004,
										"contract": "contracts/DAO.sol:DAO",
										"label": "amountRequested",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1006,
										"contract": "contracts/DAO.sol:DAO",
										"label": "votes",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1008,
										"contract": "contracts/DAO.sol:DAO",
										"label": "executed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Title.sol": {
				"TitleRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_city",
									"type": "string"
								}
							],
							"name": "registerVoter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voterToCity",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Title.sol\":117:501  contract TitleRegistry is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Title.sol\":263:327  constructor(address initialOwner) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Title.sol\":311:323  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Title.sol\":263:327  constructor(address initialOwner) ... */\n  pop\n    /* \"contracts/Title.sol\":117:501  contract TitleRegistry is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_15:\n    /* \"contracts/Title.sol\":117:501  contract TitleRegistry is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Title.sol\":117:501  contract TitleRegistry is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc3c5a547\n      gt\n      tag_9\n      jumpi\n      dup1\n      0xc3c5a547\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xebbb4f84\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup1\n      0x2146671f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Title.sol\":209:254  mapping(address => string) public voterToCity */\n    tag_3:\n      tag_10\n      tag_11\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1164:1238   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1152:1154   */\n      0x20\n        /* \"#utility.yul\":1137:1155   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_14\n        /* \"#utility.yul\":1018:1244   */\n      jump\n        /* \"contracts/Title.sol\":158:202  mapping(address => bool) public isRegistered */\n    tag_6:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_23:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1414:1428   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1407:1429   */\n      iszero\n        /* \"#utility.yul\":1389:1430   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1377:1379   */\n      0x20\n        /* \"#utility.yul\":1362:1380   */\n      add\n        /* \"contracts/Title.sol\":158:202  mapping(address => bool) public isRegistered */\n      tag_14\n        /* \"#utility.yul\":1249:1436   */\n      jump\n        /* \"contracts/Title.sol\":335:498  function registerVoter(address _voter, string memory _city) external onlyOwner {... */\n    tag_7:\n      tag_16\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_16\n      tag_32\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n        /* \"contracts/Title.sol\":209:254  mapping(address => string) public voterToCity */\n    tag_13:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_36\n      swap1\n      tag_35\n      jump\t// in\n    tag_36:\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_38\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_37)\n    tag_38:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_39:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_39\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Title.sol\":335:498  function registerVoter(address _voter, string memory _city) external onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/Title.sol\":425:445  isRegistered[_voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Title.sol\":448:452  true */\n      0x01\n        /* \"contracts/Title.sol\":425:445  isRegistered[_voter] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Title.sol\":425:452  isRegistered[_voter] = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Title.sol\":463:474  voterToCity */\n      0x02\n        /* \"contracts/Title.sol\":463:482  voterToCity[_voter] */\n      swap1\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Title.sol\":463:490  voterToCity[_voter] = _city */\n      tag_50\n        /* \"contracts/Title.sol\":485:490  _city */\n      dup3\n        /* \"contracts/Title.sol\":463:482  voterToCity[_voter] */\n      dup3\n        /* \"contracts/Title.sol\":463:490  voterToCity[_voter] = _city */\n      tag_51\n      jump\t// in\n    tag_50:\n      pop\n        /* \"contracts/Title.sol\":335:498  function registerVoter(address _voter, string memory _city) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_55\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1164:1238   */\n      mstore\n        /* \"#utility.yul\":1137:1155   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_44\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1164:1238   */\n      mstore\n        /* \"#utility.yul\":1137:1155   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_56\n        /* \"#utility.yul\":1018:1244   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_67:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_74:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_12:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_76:\n        /* \"#utility.yul\":366:395   */\n      tag_77\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_67\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":215:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:1013   */\n    tag_15:\n        /* \"#utility.yul\":518:522   */\n      0x00\n        /* \"#utility.yul\":547:549   */\n      0x20\n        /* \"#utility.yul\":576:578   */\n      dup1\n        /* \"#utility.yul\":565:574   */\n      dup4\n        /* \"#utility.yul\":558:579   */\n      mstore\n        /* \"#utility.yul\":608:614   */\n      dup4\n        /* \"#utility.yul\":602:615   */\n      mload\n        /* \"#utility.yul\":651:657   */\n      dup1\n        /* \"#utility.yul\":646:648   */\n      0x20\n        /* \"#utility.yul\":635:644   */\n      dup6\n        /* \"#utility.yul\":631:649   */\n      add\n        /* \"#utility.yul\":624:658   */\n      mstore\n        /* \"#utility.yul\":676:677   */\n      0x00\n        /* \"#utility.yul\":686:826   */\n    tag_79:\n        /* \"#utility.yul\":700:706   */\n      dup2\n        /* \"#utility.yul\":697:698   */\n      dup2\n        /* \"#utility.yul\":694:707   */\n      lt\n        /* \"#utility.yul\":686:826   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":795:809   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":791:814   */\n      dup4\n      add\n        /* \"#utility.yul\":785:815   */\n      mload\n        /* \"#utility.yul\":761:778   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":780:782   */\n      0x40\n        /* \"#utility.yul\":757:783   */\n      add\n        /* \"#utility.yul\":750:816   */\n      mstore\n        /* \"#utility.yul\":715:725   */\n      dup3\n      add\n        /* \"#utility.yul\":686:826   */\n      jump(tag_79)\n    tag_81:\n        /* \"#utility.yul\":690:693   */\n      pop\n        /* \"#utility.yul\":875:876   */\n      0x00\n        /* \"#utility.yul\":870:872   */\n      0x40\n        /* \"#utility.yul\":861:867   */\n      dup3\n        /* \"#utility.yul\":850:859   */\n      dup7\n        /* \"#utility.yul\":846:868   */\n      add\n        /* \"#utility.yul\":842:873   */\n      add\n        /* \"#utility.yul\":835:877   */\n      mstore\n        /* \"#utility.yul\":1004:1006   */\n      0x40\n        /* \"#utility.yul\":934:1000   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":929:931   */\n      0x1f\n        /* \"#utility.yul\":921:927   */\n      dup4\n        /* \"#utility.yul\":917:932   */\n      add\n        /* \"#utility.yul\":913:1001   */\n      and\n        /* \"#utility.yul\":902:911   */\n      dup6\n        /* \"#utility.yul\":898:1002   */\n      add\n        /* \"#utility.yul\":894:1007   */\n      add\n        /* \"#utility.yul\":886:1007   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":406:1013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1441:1625   */\n    tag_68:\n        /* \"#utility.yul\":1493:1570   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1490:1491   */\n      0x00\n        /* \"#utility.yul\":1483:1571   */\n      mstore\n        /* \"#utility.yul\":1590:1594   */\n      0x41\n        /* \"#utility.yul\":1587:1588   */\n      0x04\n        /* \"#utility.yul\":1580:1595   */\n      mstore\n        /* \"#utility.yul\":1614:1618   */\n      0x24\n        /* \"#utility.yul\":1611:1612   */\n      0x00\n        /* \"#utility.yul\":1604:1619   */\n      revert\n        /* \"#utility.yul\":1630:2685   */\n    tag_29:\n        /* \"#utility.yul\":1708:1714   */\n      0x00\n        /* \"#utility.yul\":1716:1722   */\n      dup1\n        /* \"#utility.yul\":1769:1771   */\n      0x40\n        /* \"#utility.yul\":1757:1766   */\n      dup4\n        /* \"#utility.yul\":1748:1755   */\n      dup6\n        /* \"#utility.yul\":1744:1767   */\n      sub\n        /* \"#utility.yul\":1740:1772   */\n      slt\n        /* \"#utility.yul\":1737:1789   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1785:1786   */\n      0x00\n        /* \"#utility.yul\":1782:1783   */\n      dup1\n        /* \"#utility.yul\":1775:1787   */\n      revert\n        /* \"#utility.yul\":1737:1789   */\n    tag_86:\n        /* \"#utility.yul\":1808:1837   */\n      tag_87\n        /* \"#utility.yul\":1827:1836   */\n      dup4\n        /* \"#utility.yul\":1808:1837   */\n      tag_67\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1798:1837   */\n      swap2\n      pop\n        /* \"#utility.yul\":1888:1890   */\n      0x20\n        /* \"#utility.yul\":1877:1886   */\n      dup4\n        /* \"#utility.yul\":1873:1891   */\n      add\n        /* \"#utility.yul\":1860:1892   */\n      calldataload\n        /* \"#utility.yul\":1911:1929   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1952:1954   */\n      dup1\n        /* \"#utility.yul\":1944:1950   */\n      dup3\n        /* \"#utility.yul\":1941:1955   */\n      gt\n        /* \"#utility.yul\":1938:1972   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":1968:1969   */\n      0x00\n        /* \"#utility.yul\":1965:1966   */\n      dup1\n        /* \"#utility.yul\":1958:1970   */\n      revert\n        /* \"#utility.yul\":1938:1972   */\n    tag_88:\n        /* \"#utility.yul\":2006:2012   */\n      dup2\n        /* \"#utility.yul\":1995:2004   */\n      dup6\n        /* \"#utility.yul\":1991:2013   */\n      add\n        /* \"#utility.yul\":1981:2013   */\n      swap2\n      pop\n        /* \"#utility.yul\":2051:2058   */\n      dup6\n        /* \"#utility.yul\":2044:2048   */\n      0x1f\n        /* \"#utility.yul\":2040:2042   */\n      dup4\n        /* \"#utility.yul\":2036:2049   */\n      add\n        /* \"#utility.yul\":2032:2059   */\n      slt\n        /* \"#utility.yul\":2022:2077   */\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2073:2074   */\n      0x00\n        /* \"#utility.yul\":2070:2071   */\n      dup1\n        /* \"#utility.yul\":2063:2075   */\n      revert\n        /* \"#utility.yul\":2022:2077   */\n    tag_89:\n        /* \"#utility.yul\":2109:2111   */\n      dup2\n        /* \"#utility.yul\":2096:2112   */\n      calldataload\n        /* \"#utility.yul\":2131:2133   */\n      dup2\n        /* \"#utility.yul\":2127:2129   */\n      dup2\n        /* \"#utility.yul\":2124:2134   */\n      gt\n        /* \"#utility.yul\":2121:2157   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2137:2155   */\n      tag_91\n      tag_68\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2271:2273   */\n      0x40\n        /* \"#utility.yul\":2265:2274   */\n      mload\n        /* \"#utility.yul\":2333:2337   */\n      0x1f\n        /* \"#utility.yul\":2325:2338   */\n      dup3\n      add\n        /* \"#utility.yul\":2176:2242   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":2321:2343   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2345:2347   */\n      0x3f\n        /* \"#utility.yul\":2317:2348   */\n      add\n        /* \"#utility.yul\":2313:2353   */\n      and\n        /* \"#utility.yul\":2301:2354   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2369:2387   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2389:2411   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2366:2412   */\n      or\n        /* \"#utility.yul\":2363:2435   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":2415:2433   */\n      tag_93\n      tag_68\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2455:2465   */\n      dup2\n        /* \"#utility.yul\":2451:2453   */\n      0x40\n        /* \"#utility.yul\":2444:2466   */\n      mstore\n        /* \"#utility.yul\":2490:2492   */\n      dup3\n        /* \"#utility.yul\":2482:2488   */\n      dup2\n        /* \"#utility.yul\":2475:2493   */\n      mstore\n        /* \"#utility.yul\":2530:2537   */\n      dup9\n        /* \"#utility.yul\":2525:2527   */\n      0x20\n        /* \"#utility.yul\":2520:2522   */\n      dup5\n        /* \"#utility.yul\":2516:2518   */\n      dup8\n        /* \"#utility.yul\":2512:2523   */\n      add\n        /* \"#utility.yul\":2508:2528   */\n      add\n        /* \"#utility.yul\":2505:2538   */\n      gt\n        /* \"#utility.yul\":2502:2555   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2551:2552   */\n      0x00\n        /* \"#utility.yul\":2548:2549   */\n      dup1\n        /* \"#utility.yul\":2541:2553   */\n      revert\n        /* \"#utility.yul\":2502:2555   */\n    tag_94:\n        /* \"#utility.yul\":2607:2609   */\n      dup3\n        /* \"#utility.yul\":2602:2604   */\n      0x20\n        /* \"#utility.yul\":2598:2600   */\n      dup7\n        /* \"#utility.yul\":2594:2605   */\n      add\n        /* \"#utility.yul\":2589:2591   */\n      0x20\n        /* \"#utility.yul\":2581:2587   */\n      dup4\n        /* \"#utility.yul\":2577:2592   */\n      add\n        /* \"#utility.yul\":2564:2610   */\n      calldatacopy\n        /* \"#utility.yul\":2652:2653   */\n      0x00\n        /* \"#utility.yul\":2647:2649   */\n      0x20\n        /* \"#utility.yul\":2642:2644   */\n      dup5\n        /* \"#utility.yul\":2634:2640   */\n      dup4\n        /* \"#utility.yul\":2630:2645   */\n      add\n        /* \"#utility.yul\":2626:2650   */\n      add\n        /* \"#utility.yul\":2619:2654   */\n      mstore\n        /* \"#utility.yul\":2673:2679   */\n      dup1\n        /* \"#utility.yul\":2663:2679   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1630:2685   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2690:3127   */\n    tag_35:\n        /* \"#utility.yul\":2769:2770   */\n      0x01\n        /* \"#utility.yul\":2765:2777   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2812:2824   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2833:2894   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2887:2891   */\n      0x7f\n        /* \"#utility.yul\":2879:2885   */\n      dup3\n        /* \"#utility.yul\":2875:2892   */\n      and\n        /* \"#utility.yul\":2865:2892   */\n      swap2\n      pop\n        /* \"#utility.yul\":2833:2894   */\n    tag_96:\n        /* \"#utility.yul\":2940:2942   */\n      0x20\n        /* \"#utility.yul\":2932:2938   */\n      dup3\n        /* \"#utility.yul\":2929:2943   */\n      lt\n        /* \"#utility.yul\":2909:2927   */\n      dup2\n        /* \"#utility.yul\":2906:2944   */\n      sub\n        /* \"#utility.yul\":2903:3121   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":2977:3054   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2974:2975   */\n      0x00\n        /* \"#utility.yul\":2967:3055   */\n      mstore\n        /* \"#utility.yul\":3078:3082   */\n      0x22\n        /* \"#utility.yul\":3075:3076   */\n      0x04\n        /* \"#utility.yul\":3068:3083   */\n      mstore\n        /* \"#utility.yul\":3106:3110   */\n      0x24\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3096:3111   */\n      revert\n        /* \"#utility.yul\":2903:3121   */\n    tag_97:\n      pop\n        /* \"#utility.yul\":2690:3127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3258:3776   */\n    tag_70:\n        /* \"#utility.yul\":3360:3362   */\n      0x1f\n        /* \"#utility.yul\":3355:3358   */\n      dup3\n        /* \"#utility.yul\":3352:3363   */\n      gt\n        /* \"#utility.yul\":3349:3770   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":3396:3401   */\n      dup1\n        /* \"#utility.yul\":3393:3394   */\n      0x00\n        /* \"#utility.yul\":3386:3402   */\n      mstore\n        /* \"#utility.yul\":3440:3444   */\n      0x20\n        /* \"#utility.yul\":3437:3438   */\n      0x00\n        /* \"#utility.yul\":3427:3445   */\n      keccak256\n        /* \"#utility.yul\":3510:3512   */\n      0x1f\n        /* \"#utility.yul\":3498:3508   */\n      dup5\n        /* \"#utility.yul\":3494:3513   */\n      add\n        /* \"#utility.yul\":3491:3492   */\n      0x05\n        /* \"#utility.yul\":3487:3514   */\n      shr\n        /* \"#utility.yul\":3481:3485   */\n      dup2\n        /* \"#utility.yul\":3477:3515   */\n      add\n        /* \"#utility.yul\":3546:3550   */\n      0x20\n        /* \"#utility.yul\":3534:3544   */\n      dup6\n        /* \"#utility.yul\":3531:3551   */\n      lt\n        /* \"#utility.yul\":3528:3575   */\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"#utility.yul\":3569:3573   */\n      dup1\n        /* \"#utility.yul\":3528:3575   */\n    tag_101:\n        /* \"#utility.yul\":3624:3626   */\n      0x1f\n        /* \"#utility.yul\":3619:3622   */\n      dup5\n        /* \"#utility.yul\":3615:3627   */\n      add\n        /* \"#utility.yul\":3612:3613   */\n      0x05\n        /* \"#utility.yul\":3608:3628   */\n      shr\n        /* \"#utility.yul\":3602:3606   */\n      dup3\n        /* \"#utility.yul\":3598:3629   */\n      add\n        /* \"#utility.yul\":3588:3629   */\n      swap2\n      pop\n        /* \"#utility.yul\":3679:3760   */\n    tag_102:\n        /* \"#utility.yul\":3697:3699   */\n      dup2\n        /* \"#utility.yul\":3690:3695   */\n      dup2\n        /* \"#utility.yul\":3687:3700   */\n      lt\n        /* \"#utility.yul\":3679:3760   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3756:3757   */\n      0x00\n        /* \"#utility.yul\":3742:3758   */\n      dup2\n      sstore\n        /* \"#utility.yul\":3723:3724   */\n      0x01\n        /* \"#utility.yul\":3712:3725   */\n      add\n        /* \"#utility.yul\":3679:3760   */\n      jump(tag_102)\n    tag_104:\n        /* \"#utility.yul\":3683:3686   */\n      pop\n      pop\n        /* \"#utility.yul\":3258:3776   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4012:5476   */\n    tag_51:\n        /* \"#utility.yul\":4138:4141   */\n      dup2\n        /* \"#utility.yul\":4132:4142   */\n      mload\n        /* \"#utility.yul\":4165:4183   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4157:4163   */\n      dup2\n        /* \"#utility.yul\":4154:4184   */\n      gt\n        /* \"#utility.yul\":4151:4207   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":4187:4205   */\n      tag_108\n      tag_68\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4216:4313   */\n      tag_109\n        /* \"#utility.yul\":4306:4312   */\n      dup2\n        /* \"#utility.yul\":4266:4304   */\n      tag_110\n        /* \"#utility.yul\":4298:4302   */\n      dup5\n        /* \"#utility.yul\":4292:4303   */\n      sload\n        /* \"#utility.yul\":4266:4304   */\n      tag_35\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4260:4264   */\n      dup5\n        /* \"#utility.yul\":4216:4313   */\n      tag_70\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4368:4372   */\n      0x20\n      dup1\n        /* \"#utility.yul\":4425:4427   */\n      0x1f\n        /* \"#utility.yul\":4414:4428   */\n      dup4\n      gt\n        /* \"#utility.yul\":4442:4443   */\n      0x01\n        /* \"#utility.yul\":4437:5219   */\n      dup2\n      eq\n      tag_112\n      jumpi\n        /* \"#utility.yul\":5263:5264   */\n      0x00\n        /* \"#utility.yul\":5280:5286   */\n      dup5\n        /* \"#utility.yul\":5277:5366   */\n      iszero\n      tag_113\n      jumpi\n      pop\n        /* \"#utility.yul\":5332:5351   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":5326:5352   */\n      mload\n        /* \"#utility.yul\":5277:5366   */\n    tag_113:\n        /* \"#utility.yul\":3918:3984   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3909:3910   */\n      0x03\n        /* \"#utility.yul\":3905:3916   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":3901:3985   */\n      shr\n        /* \"#utility.yul\":3897:3986   */\n      not\n        /* \"#utility.yul\":3887:3987   */\n      and\n        /* \"#utility.yul\":3993:3994   */\n      0x01\n        /* \"#utility.yul\":3989:4000   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":3884:4001   */\n      or\n        /* \"#utility.yul\":5379:5460   */\n      dup6\n      sstore\n        /* \"#utility.yul\":4407:5470   */\n      jump(tag_111)\n        /* \"#utility.yul\":4437:5219   */\n    tag_112:\n        /* \"#utility.yul\":3205:3206   */\n      0x00\n        /* \"#utility.yul\":3198:3212   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":3242:3246   */\n      0x20\n        /* \"#utility.yul\":3229:3247   */\n      dup2\n      keccak256\n        /* \"#utility.yul\":4485:4551   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4473:4552   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":4650:4886   */\n    tag_116:\n        /* \"#utility.yul\":4664:4671   */\n      dup3\n        /* \"#utility.yul\":4661:4662   */\n      dup2\n        /* \"#utility.yul\":4658:4672   */\n      lt\n        /* \"#utility.yul\":4650:4886   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":4753:4772   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":4747:4773   */\n      mload\n        /* \"#utility.yul\":4732:4774   */\n      dup3\n      sstore\n        /* \"#utility.yul\":4845:4872   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":4813:4814   */\n      0x01\n        /* \"#utility.yul\":4801:4815   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":4680:4699   */\n      dup5\n      add\n        /* \"#utility.yul\":4650:4886   */\n      jump(tag_116)\n    tag_118:\n        /* \"#utility.yul\":4654:4657   */\n      pop\n        /* \"#utility.yul\":4914:4920   */\n      dup6\n        /* \"#utility.yul\":4905:4912   */\n      dup3\n        /* \"#utility.yul\":4902:4921   */\n      lt\n        /* \"#utility.yul\":4899:5160   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":4975:4994   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":4969:4995   */\n      mload\n        /* \"#utility.yul\":5076:5142   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5058:5059   */\n      0x03\n        /* \"#utility.yul\":5054:5068   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":5070:5073   */\n      0xf8\n        /* \"#utility.yul\":5050:5074   */\n      and\n        /* \"#utility.yul\":5046:5143   */\n      shr\n        /* \"#utility.yul\":5042:5144   */\n      not\n        /* \"#utility.yul\":5027:5145   */\n      and\n        /* \"#utility.yul\":5012:5146   */\n      dup2\n      sstore\n        /* \"#utility.yul\":4899:5160   */\n    tag_119:\n      pop\n      pop\n        /* \"#utility.yul\":5206:5207   */\n      0x01\n        /* \"#utility.yul\":5197:5203   */\n      dup5\n        /* \"#utility.yul\":5194:5195   */\n      0x01\n        /* \"#utility.yul\":5190:5204   */\n      shl\n        /* \"#utility.yul\":5186:5208   */\n      add\n        /* \"#utility.yul\":5180:5184   */\n      dup6\n        /* \"#utility.yul\":5173:5209   */\n      sstore\n        /* \"#utility.yul\":4407:5470   */\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4012:5476   */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122092c0eceb49aab9c6b8865c8ca8d20c2592de94e479caf29f97ed0e3d427de09764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1315": {
									"entryPoint": null,
									"id": 1315,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 108,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:9",
										"nodeType": "YulBlock",
										"src": "0:514:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:9",
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:9",
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:9",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:9",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nativeSrc": "143:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nativeSrc": "143:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nativeSrc": "112:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nativeSrc": "108:32:9",
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nativeSrc": "105:52:9",
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nativeSrc": "166:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nativeSrc": "179:16:9",
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:9",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:9",
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:9",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:9",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nativeSrc": "260:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nativeSrc": "260:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:9",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:9",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nativeSrc": "239:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:9",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nativeSrc": "235:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nativeSrc": "224:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nativeSrc": "214:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nativeSrc": "207:50:9",
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nativeSrc": "204:70:9",
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nativeSrc": "283:15:9",
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:9",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:9",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:9",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:9",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											},
											{
												"body": {
													"nativeSrc": "410:102:9",
													"nodeType": "YulBlock",
													"src": "410:102:9",
													"statements": [
														{
															"nativeSrc": "420:26:9",
															"nodeType": "YulAssignment",
															"src": "420:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:9",
																		"nodeType": "YulLiteral",
																		"src": "443:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:9"
																},
																"nativeSrc": "428:18:9",
																"nodeType": "YulFunctionCall",
																"src": "428:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:9",
																								"nodeType": "YulLiteral",
																								"src": "493:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:9",
																								"nodeType": "YulLiteral",
																								"src": "498:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:9"
																						},
																						"nativeSrc": "489:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:9",
																						"nodeType": "YulLiteral",
																						"src": "502:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:9"
																				},
																				"nativeSrc": "485:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:9"
																		},
																		"nativeSrc": "473:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:9"
																},
																"nativeSrc": "455:51:9",
																"nodeType": "YulFunctionCall",
																"src": "455:51:9"
															},
															"nativeSrc": "455:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:9",
														"nodeType": "YulTypedName",
														"src": "379:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:9",
														"nodeType": "YulTypedName",
														"src": "390:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:9",
														"nodeType": "YulTypedName",
														"src": "401:4:9",
														"type": ""
													}
												],
												"src": "309:203:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161080738038061080783398101604081905261002e916100bb565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161006c565b50506100e8565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100cb575f80fd5b81516001600160a01b03811681146100e1575f80fd5b9392505050565b610712806100f55f395ff3fe608060405234801561000f575f80fd5b506004361061006f575f3560e01c8063c3c5a5471161004d578063c3c5a547146100cd578063ebbb4f84146100ff578063f2fde38b14610112575f80fd5b80632146671f14610073578063715018a61461009c5780638da5cb5b146100a6575b5f80fd5b610086610081366004610393565b610125565b60405161009391906103b3565b60405180910390f35b6100a46101bc565b005b5f5460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610093565b6100ef6100db366004610393565b60016020525f908152604090205460ff1681565b6040519015158152602001610093565b6100a461010d36600461044a565b6101cf565b6100a4610120366004610393565b61023d565b60026020525f90815260409020805461013d90610524565b80601f016020809104026020016040519081016040528092919081815260200182805461016990610524565b80156101b45780601f1061018b576101008083540402835291602001916101b4565b820191905f5260205f20905b81548152906001019060200180831161019757829003601f168201915b505050505081565b6101c46102a5565b6101cd5f6102f7565b565b6101d76102a5565b73ffffffffffffffffffffffffffffffffffffffff82165f90815260016020818152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690931790925560029052902061023882826105c0565b505050565b6102456102a5565b73ffffffffffffffffffffffffffffffffffffffff8116610299576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6102a2816102f7565b50565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146101cd576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610290565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461038e575f80fd5b919050565b5f602082840312156103a3575f80fd5b6103ac8261036b565b9392505050565b5f602080835283518060208501525f5b818110156103df578581018301518582016040015282016103c3565b505f6040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f806040838503121561045b575f80fd5b6104648361036b565b9150602083013567ffffffffffffffff80821115610480575f80fd5b818501915085601f830112610493575f80fd5b8135818111156104a5576104a561041d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156104eb576104eb61041d565b81604052828152886020848701011115610503575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b600181811c9082168061053857607f821691505b60208210810361056f577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b601f82111561023857805f5260205f20601f840160051c8101602085101561059a5750805b601f840160051c820191505b818110156105b9575f81556001016105a6565b5050505050565b815167ffffffffffffffff8111156105da576105da61041d565b6105ee816105e88454610524565b84610575565b602080601f831160018114610640575f841561060a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556106d4565b5f858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561068c5788860151825594840194600190910190840161066d565b50858210156106c857878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b505060018460011b0185555b50505050505056fea264697066735822122092c0eceb49aab9c6b8865c8ca8d20c2592de94e479caf29f97ed0e3d427de09764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x807 CODESIZE SUB DUP1 PUSH2 0x807 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xBB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x6C JUMP JUMPDEST POP POP PUSH2 0xE8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x712 DUP1 PUSH2 0xF5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C5A547 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xEBBB4F84 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2146671F EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x86 PUSH2 0x81 CALLDATASIZE PUSH1 0x4 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x1BC JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93 JUMP JUMPDEST PUSH2 0xEF PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93 JUMP JUMPDEST PUSH2 0xA4 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH2 0xA4 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x23D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x13D SWAP1 PUSH2 0x524 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x169 SWAP1 PUSH2 0x524 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x197 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x1CD PUSH0 PUSH2 0x2F7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x2A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SWAP1 MSTORE SWAP1 KECCAK256 PUSH2 0x238 DUP3 DUP3 PUSH2 0x5C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x245 PUSH2 0x2A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A2 DUP2 PUSH2 0x2F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x290 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3AC DUP3 PUSH2 0x36B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3C3 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x464 DUP4 PUSH2 0x36B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x480 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x493 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A5 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4EB JUMPI PUSH2 0x4EB PUSH2 0x41D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x503 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x538 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x56F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x238 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x59A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5A6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5DA PUSH2 0x41D JUMP JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x5E8 DUP5 SLOAD PUSH2 0x524 JUMP JUMPDEST DUP5 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x640 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x60A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x6D4 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x68C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x66D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x6C8 JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xC0 0xEC 0xEB 0x49 0xAA 0xB9 0xC6 0xB8 DUP7 0x5C DUP13 0xA8 0xD2 0xC 0x25 SWAP3 0xDE SWAP5 0xE4 PUSH26 0xCAF29F97ED0E3D427DE09764736F6C6343000816003300000000 ",
							"sourceMap": "117:384:8:-:0;;;263:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;311:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:9;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;263:64:8;117:384;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;309:203::-;117:384:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 677,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 759,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isRegistered_1302": {
									"entryPoint": null,
									"id": 1302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerVoter_1337": {
									"entryPoint": 463,
									"id": 1337,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 444,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 573,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voterToCity_1306": {
									"entryPoint": 293,
									"id": 1306,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5478:9",
										"nodeType": "YulBlock",
										"src": "0:5478:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:147:9",
													"nodeType": "YulBlock",
													"src": "63:147:9",
													"statements": [
														{
															"nativeSrc": "73:29:9",
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nativeSrc": "82:20:9",
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "188:16:9",
																"nodeType": "YulBlock",
																"src": "188:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "197:1:9",
																					"nodeType": "YulLiteral",
																					"src": "197:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "200:1:9",
																					"nodeType": "YulLiteral",
																					"src": "200:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "190:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:9"
																			},
																			"nativeSrc": "190:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:9"
																		},
																		"nativeSrc": "190:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "142:42:9",
																						"nodeType": "YulLiteral",
																						"src": "142:42:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nativeSrc": "131:54:9",
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nativeSrc": "121:65:9",
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nativeSrc": "114:73:9",
																"nodeType": "YulFunctionCall",
																"src": "114:73:9"
															},
															"nativeSrc": "111:93:9",
															"nodeType": "YulIf",
															"src": "111:93:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:196:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:9",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:9",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:196:9"
											},
											{
												"body": {
													"nativeSrc": "285:116:9",
													"nodeType": "YulBlock",
													"src": "285:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "331:16:9",
																"nodeType": "YulBlock",
																"src": "331:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "340:1:9",
																					"nodeType": "YulLiteral",
																					"src": "340:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:1:9",
																					"nodeType": "YulLiteral",
																					"src": "343:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "333:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:9"
																			},
																			"nativeSrc": "333:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:9"
																		},
																		"nativeSrc": "333:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "306:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "315:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:9"
																		},
																		"nativeSrc": "302:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "327:2:9",
																		"nodeType": "YulLiteral",
																		"src": "327:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "298:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:9"
																},
																"nativeSrc": "298:32:9",
																"nodeType": "YulFunctionCall",
																"src": "298:32:9"
															},
															"nativeSrc": "295:52:9",
															"nodeType": "YulIf",
															"src": "295:52:9"
														},
														{
															"nativeSrc": "356:39:9",
															"nodeType": "YulAssignment",
															"src": "356:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "385:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "366:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:9"
																},
																"nativeSrc": "366:29:9",
																"nodeType": "YulFunctionCall",
																"src": "366:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "356:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "215:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "251:9:9",
														"nodeType": "YulTypedName",
														"src": "251:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "262:7:9",
														"nodeType": "YulTypedName",
														"src": "262:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "274:6:9",
														"nodeType": "YulTypedName",
														"src": "274:6:9",
														"type": ""
													}
												],
												"src": "215:186:9"
											},
											{
												"body": {
													"nativeSrc": "527:486:9",
													"nodeType": "YulBlock",
													"src": "527:486:9",
													"statements": [
														{
															"nativeSrc": "537:12:9",
															"nodeType": "YulVariableDeclaration",
															"src": "537:12:9",
															"value": {
																"kind": "number",
																"nativeSrc": "547:2:9",
																"nodeType": "YulLiteral",
																"src": "547:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "541:2:9",
																	"nodeType": "YulTypedName",
																	"src": "541:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "565:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "565:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "576:2:9",
																		"nodeType": "YulLiteral",
																		"src": "576:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "558:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "558:6:9"
																},
																"nativeSrc": "558:21:9",
																"nodeType": "YulFunctionCall",
																"src": "558:21:9"
															},
															"nativeSrc": "558:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "558:21:9"
														},
														{
															"nativeSrc": "588:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "588:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "608:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "608:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "602:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "602:5:9"
																},
																"nativeSrc": "602:13:9",
																"nodeType": "YulFunctionCall",
																"src": "602:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "592:6:9",
																	"nodeType": "YulTypedName",
																	"src": "592:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "635:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "635:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "646:2:9",
																				"nodeType": "YulLiteral",
																				"src": "646:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "631:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:3:9"
																		},
																		"nativeSrc": "631:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:34:9",
																"nodeType": "YulFunctionCall",
																"src": "624:34:9"
															},
															"nativeSrc": "624:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "624:34:9"
														},
														{
															"nativeSrc": "667:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "667:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "676:1:9",
																"nodeType": "YulLiteral",
																"src": "676:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "671:1:9",
																	"nodeType": "YulTypedName",
																	"src": "671:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "736:90:9",
																"nodeType": "YulBlock",
																"src": "736:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "765:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "765:9:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "776:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "776:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "761:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "761:3:9"
																							},
																							"nativeSrc": "761:17:9",
																							"nodeType": "YulFunctionCall",
																							"src": "761:17:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "780:2:9",
																							"nodeType": "YulLiteral",
																							"src": "780:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "757:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "757:3:9"
																					},
																					"nativeSrc": "757:26:9",
																					"nodeType": "YulFunctionCall",
																					"src": "757:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "799:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "799:6:9"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "807:1:9",
																											"nodeType": "YulIdentifier",
																											"src": "807:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "795:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "795:3:9"
																									},
																									"nativeSrc": "795:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "795:14:9"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "811:2:9",
																									"nodeType": "YulIdentifier",
																									"src": "811:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "791:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "791:3:9"
																							},
																							"nativeSrc": "791:23:9",
																							"nodeType": "YulFunctionCall",
																							"src": "791:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "785:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "785:5:9"
																					},
																					"nativeSrc": "785:30:9",
																					"nodeType": "YulFunctionCall",
																					"src": "785:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "750:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:9"
																			},
																			"nativeSrc": "750:66:9",
																			"nodeType": "YulFunctionCall",
																			"src": "750:66:9"
																		},
																		"nativeSrc": "750:66:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "697:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "697:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "700:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "700:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "694:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "694:2:9"
																},
																"nativeSrc": "694:13:9",
																"nodeType": "YulFunctionCall",
																"src": "694:13:9"
															},
															"nativeSrc": "686:140:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "708:19:9",
																"nodeType": "YulBlock",
																"src": "708:19:9",
																"statements": [
																	{
																		"nativeSrc": "710:15:9",
																		"nodeType": "YulAssignment",
																		"src": "710:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "719:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "719:1:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "722:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "722:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "715:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "715:3:9"
																			},
																			"nativeSrc": "715:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "715:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "710:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "710:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "690:3:9",
																"nodeType": "YulBlock",
																"src": "690:3:9",
																"statements": []
															},
															"src": "686:140:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "850:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "850:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "861:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "861:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "846:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "846:3:9"
																				},
																				"nativeSrc": "846:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "846:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "870:2:9",
																				"nodeType": "YulLiteral",
																				"src": "870:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "842:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "842:3:9"
																		},
																		"nativeSrc": "842:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "842:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "875:1:9",
																		"nodeType": "YulLiteral",
																		"src": "875:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "835:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "835:6:9"
																},
																"nativeSrc": "835:42:9",
																"nodeType": "YulFunctionCall",
																"src": "835:42:9"
															},
															"nativeSrc": "835:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "835:42:9"
														},
														{
															"nativeSrc": "886:121:9",
															"nodeType": "YulAssignment",
															"src": "886:121:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "902:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "902:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "921:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "921:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "929:2:9",
																								"nodeType": "YulLiteral",
																								"src": "929:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "917:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "917:3:9"
																						},
																						"nativeSrc": "917:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "917:15:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "934:66:9",
																						"nodeType": "YulLiteral",
																						"src": "934:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "913:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:9"
																				},
																				"nativeSrc": "913:88:9",
																				"nodeType": "YulFunctionCall",
																				"src": "913:88:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "898:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:9"
																		},
																		"nativeSrc": "898:104:9",
																		"nodeType": "YulFunctionCall",
																		"src": "898:104:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1004:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1004:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "894:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:9"
																},
																"nativeSrc": "894:113:9",
																"nodeType": "YulFunctionCall",
																"src": "894:113:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "886:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "886:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "406:607:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "496:9:9",
														"nodeType": "YulTypedName",
														"src": "496:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "507:6:9",
														"nodeType": "YulTypedName",
														"src": "507:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "518:4:9",
														"nodeType": "YulTypedName",
														"src": "518:4:9",
														"type": ""
													}
												],
												"src": "406:607:9"
											},
											{
												"body": {
													"nativeSrc": "1119:125:9",
													"nodeType": "YulBlock",
													"src": "1119:125:9",
													"statements": [
														{
															"nativeSrc": "1129:26:9",
															"nodeType": "YulAssignment",
															"src": "1129:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1141:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1141:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1152:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1137:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1137:3:9"
																},
																"nativeSrc": "1137:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1137:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1129:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1129:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1171:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1171:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1186:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1186:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1194:42:9",
																				"nodeType": "YulLiteral",
																				"src": "1194:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1182:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1182:3:9"
																		},
																		"nativeSrc": "1182:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1182:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1164:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:9"
																},
																"nativeSrc": "1164:74:9",
																"nodeType": "YulFunctionCall",
																"src": "1164:74:9"
															},
															"nativeSrc": "1164:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "1164:74:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1018:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1088:9:9",
														"nodeType": "YulTypedName",
														"src": "1088:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1099:6:9",
														"nodeType": "YulTypedName",
														"src": "1099:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1110:4:9",
														"nodeType": "YulTypedName",
														"src": "1110:4:9",
														"type": ""
													}
												],
												"src": "1018:226:9"
											},
											{
												"body": {
													"nativeSrc": "1344:92:9",
													"nodeType": "YulBlock",
													"src": "1344:92:9",
													"statements": [
														{
															"nativeSrc": "1354:26:9",
															"nodeType": "YulAssignment",
															"src": "1354:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1366:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1377:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1362:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1362:3:9"
																},
																"nativeSrc": "1362:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1362:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1354:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1354:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1396:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1396:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1421:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1421:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1414:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1414:6:9"
																				},
																				"nativeSrc": "1414:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1414:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1407:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1407:6:9"
																		},
																		"nativeSrc": "1407:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1407:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1389:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1389:6:9"
																},
																"nativeSrc": "1389:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1389:41:9"
															},
															"nativeSrc": "1389:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1389:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1249:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1313:9:9",
														"nodeType": "YulTypedName",
														"src": "1313:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1324:6:9",
														"nodeType": "YulTypedName",
														"src": "1324:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1335:4:9",
														"nodeType": "YulTypedName",
														"src": "1335:4:9",
														"type": ""
													}
												],
												"src": "1249:187:9"
											},
											{
												"body": {
													"nativeSrc": "1473:152:9",
													"nodeType": "YulBlock",
													"src": "1473:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1490:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1490:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1493:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1493:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1483:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:9"
																},
																"nativeSrc": "1483:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1483:88:9"
															},
															"nativeSrc": "1483:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1483:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1587:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1590:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1590:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1580:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:9"
																},
																"nativeSrc": "1580:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1580:15:9"
															},
															"nativeSrc": "1580:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1580:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1611:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1611:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1614:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1614:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1604:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1604:6:9"
																},
																"nativeSrc": "1604:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1604:15:9"
															},
															"nativeSrc": "1604:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1604:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1441:184:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1441:184:9"
											},
											{
												"body": {
													"nativeSrc": "1727:958:9",
													"nodeType": "YulBlock",
													"src": "1727:958:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1773:16:9",
																"nodeType": "YulBlock",
																"src": "1773:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1782:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1782:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1785:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1785:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1775:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1775:6:9"
																			},
																			"nativeSrc": "1775:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1775:12:9"
																		},
																		"nativeSrc": "1775:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1775:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1748:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1748:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1757:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1757:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1744:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1744:3:9"
																		},
																		"nativeSrc": "1744:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1744:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1740:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:9"
																},
																"nativeSrc": "1740:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1740:32:9"
															},
															"nativeSrc": "1737:52:9",
															"nodeType": "YulIf",
															"src": "1737:52:9"
														},
														{
															"nativeSrc": "1798:39:9",
															"nodeType": "YulAssignment",
															"src": "1798:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1827:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1827:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1808:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1808:18:9"
																},
																"nativeSrc": "1808:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1808:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1798:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:9"
																}
															]
														},
														{
															"nativeSrc": "1846:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1846:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1877:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1877:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1888:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1888:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1873:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1873:3:9"
																		},
																		"nativeSrc": "1873:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1873:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1860:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1860:12:9"
																},
																"nativeSrc": "1860:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1860:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1850:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1850:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1901:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1901:28:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1911:18:9",
																"nodeType": "YulLiteral",
																"src": "1911:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1905:2:9",
																	"nodeType": "YulTypedName",
																	"src": "1905:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1956:16:9",
																"nodeType": "YulBlock",
																"src": "1956:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1965:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1965:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1968:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1968:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1958:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1958:6:9"
																			},
																			"nativeSrc": "1958:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1958:12:9"
																		},
																		"nativeSrc": "1958:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1958:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1944:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1944:6:9"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1952:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "1952:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1941:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1941:2:9"
																},
																"nativeSrc": "1941:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1941:14:9"
															},
															"nativeSrc": "1938:34:9",
															"nodeType": "YulIf",
															"src": "1938:34:9"
														},
														{
															"nativeSrc": "1981:32:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1981:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1995:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1995:9:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2006:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2006:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1991:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1991:3:9"
																},
																"nativeSrc": "1991:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1991:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1985:2:9",
																	"nodeType": "YulTypedName",
																	"src": "1985:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2061:16:9",
																"nodeType": "YulBlock",
																"src": "2061:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2070:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2073:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2063:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2063:6:9"
																			},
																			"nativeSrc": "2063:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2063:12:9"
																		},
																		"nativeSrc": "2063:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "2040:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2040:2:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2044:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2044:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2036:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2036:3:9"
																				},
																				"nativeSrc": "2036:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2051:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2051:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2032:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:9"
																		},
																		"nativeSrc": "2032:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2032:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2025:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:9"
																},
																"nativeSrc": "2025:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2025:35:9"
															},
															"nativeSrc": "2022:55:9",
															"nodeType": "YulIf",
															"src": "2022:55:9"
														},
														{
															"nativeSrc": "2086:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2086:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "2109:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "2109:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2096:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2096:12:9"
																},
																"nativeSrc": "2096:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2096:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "2090:2:9",
																	"nodeType": "YulTypedName",
																	"src": "2090:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2135:22:9",
																"nodeType": "YulBlock",
																"src": "2135:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2137:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2137:16:9"
																			},
																			"nativeSrc": "2137:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2137:18:9"
																		},
																		"nativeSrc": "2137:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2137:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "2127:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "2127:2:9"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2131:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "2131:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2124:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2124:2:9"
																},
																"nativeSrc": "2124:10:9",
																"nodeType": "YulFunctionCall",
																"src": "2124:10:9"
															},
															"nativeSrc": "2121:36:9",
															"nodeType": "YulIf",
															"src": "2121:36:9"
														},
														{
															"nativeSrc": "2166:76:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2166:76:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2176:66:9",
																"nodeType": "YulLiteral",
																"src": "2176:66:9",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "2170:2:9",
																	"nodeType": "YulTypedName",
																	"src": "2170:2:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2251:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2251:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2271:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2271:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2265:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2265:5:9"
																},
																"nativeSrc": "2265:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2265:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2255:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2255:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2283:71:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2283:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2305:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2305:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "2329:2:9",
																										"nodeType": "YulIdentifier",
																										"src": "2329:2:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2333:4:9",
																										"nodeType": "YulLiteral",
																										"src": "2333:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2325:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2325:3:9"
																								},
																								"nativeSrc": "2325:13:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2325:13:9"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "2340:2:9",
																								"nodeType": "YulIdentifier",
																								"src": "2340:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2321:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2321:3:9"
																						},
																						"nativeSrc": "2321:22:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2321:22:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2345:2:9",
																						"nodeType": "YulLiteral",
																						"src": "2345:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2317:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2317:3:9"
																				},
																				"nativeSrc": "2317:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2317:31:9"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "2350:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2350:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2313:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2313:3:9"
																		},
																		"nativeSrc": "2313:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2313:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2301:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:9"
																},
																"nativeSrc": "2301:53:9",
																"nodeType": "YulFunctionCall",
																"src": "2301:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2287:10:9",
																	"nodeType": "YulTypedName",
																	"src": "2287:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2413:22:9",
																"nodeType": "YulBlock",
																"src": "2413:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2415:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2415:16:9"
																			},
																			"nativeSrc": "2415:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2415:18:9"
																		},
																		"nativeSrc": "2415:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2415:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2372:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "2372:10:9"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2384:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2384:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2369:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2369:2:9"
																		},
																		"nativeSrc": "2369:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2369:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2392:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "2392:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2404:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2404:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2389:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2389:2:9"
																		},
																		"nativeSrc": "2389:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2389:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2366:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2366:2:9"
																},
																"nativeSrc": "2366:46:9",
																"nodeType": "YulFunctionCall",
																"src": "2366:46:9"
															},
															"nativeSrc": "2363:72:9",
															"nodeType": "YulIf",
															"src": "2363:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2451:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2451:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2455:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "2455:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2444:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2444:6:9"
																},
																"nativeSrc": "2444:22:9",
																"nodeType": "YulFunctionCall",
																"src": "2444:22:9"
															},
															"nativeSrc": "2444:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "2444:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2482:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2482:6:9"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "2490:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "2490:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2475:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:9"
																},
																"nativeSrc": "2475:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2475:18:9"
															},
															"nativeSrc": "2475:18:9",
															"nodeType": "YulExpressionStatement",
															"src": "2475:18:9"
														},
														{
															"body": {
																"nativeSrc": "2539:16:9",
																"nodeType": "YulBlock",
																"src": "2539:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2548:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2548:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2551:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2551:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2541:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2541:6:9"
																			},
																			"nativeSrc": "2541:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:12:9"
																		},
																		"nativeSrc": "2541:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2541:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "2516:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2516:2:9"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "2520:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2520:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2512:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2512:3:9"
																				},
																				"nativeSrc": "2512:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2512:11:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2525:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2525:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2508:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2508:3:9"
																		},
																		"nativeSrc": "2508:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2508:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2530:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2530:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2505:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2505:2:9"
																},
																"nativeSrc": "2505:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2505:33:9"
															},
															"nativeSrc": "2502:53:9",
															"nodeType": "YulIf",
															"src": "2502:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2581:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2581:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2589:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2589:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2577:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2577:3:9"
																		},
																		"nativeSrc": "2577:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2577:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "2598:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2598:2:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2602:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2602:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2594:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2594:3:9"
																		},
																		"nativeSrc": "2594:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2594:11:9"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "2607:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "2607:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2564:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2564:12:9"
																},
																"nativeSrc": "2564:46:9",
																"nodeType": "YulFunctionCall",
																"src": "2564:46:9"
															},
															"nativeSrc": "2564:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "2564:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2634:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2634:6:9"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "2642:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2642:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2630:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2630:3:9"
																				},
																				"nativeSrc": "2630:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2630:15:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2647:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2647:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2626:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:9"
																		},
																		"nativeSrc": "2626:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2626:24:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2652:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2652:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2619:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2619:6:9"
																},
																"nativeSrc": "2619:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2619:35:9"
															},
															"nativeSrc": "2619:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "2619:35:9"
														},
														{
															"nativeSrc": "2663:16:9",
															"nodeType": "YulAssignment",
															"src": "2663:16:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2673:6:9",
																"nodeType": "YulIdentifier",
																"src": "2673:6:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2663:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2663:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "1630:1055:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1685:9:9",
														"nodeType": "YulTypedName",
														"src": "1685:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1696:7:9",
														"nodeType": "YulTypedName",
														"src": "1696:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1708:6:9",
														"nodeType": "YulTypedName",
														"src": "1708:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1716:6:9",
														"nodeType": "YulTypedName",
														"src": "1716:6:9",
														"type": ""
													}
												],
												"src": "1630:1055:9"
											},
											{
												"body": {
													"nativeSrc": "2745:382:9",
													"nodeType": "YulBlock",
													"src": "2745:382:9",
													"statements": [
														{
															"nativeSrc": "2755:22:9",
															"nodeType": "YulAssignment",
															"src": "2755:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2769:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2769:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2772:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2772:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2765:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2765:3:9"
																},
																"nativeSrc": "2765:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2765:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2755:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2755:6:9"
																}
															]
														},
														{
															"nativeSrc": "2786:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2786:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2816:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2816:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2822:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2822:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2812:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:9"
																},
																"nativeSrc": "2812:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2812:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2790:18:9",
																	"nodeType": "YulTypedName",
																	"src": "2790:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2863:31:9",
																"nodeType": "YulBlock",
																"src": "2863:31:9",
																"statements": [
																	{
																		"nativeSrc": "2865:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2865:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2879:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2879:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2887:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2887:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2875:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2875:3:9"
																			},
																			"nativeSrc": "2875:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2865:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2865:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2843:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2843:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2836:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:9"
																},
																"nativeSrc": "2836:26:9",
																"nodeType": "YulFunctionCall",
																"src": "2836:26:9"
															},
															"nativeSrc": "2833:61:9",
															"nodeType": "YulIf",
															"src": "2833:61:9"
														},
														{
															"body": {
																"nativeSrc": "2953:168:9",
																"nodeType": "YulBlock",
																"src": "2953:168:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2974:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2974:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2977:77:9",
																					"nodeType": "YulLiteral",
																					"src": "2977:77:9",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2967:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2967:6:9"
																			},
																			"nativeSrc": "2967:88:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2967:88:9"
																		},
																		"nativeSrc": "2967:88:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2967:88:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3075:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3075:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3078:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3078:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3068:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3068:6:9"
																			},
																			"nativeSrc": "3068:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3068:15:9"
																		},
																		"nativeSrc": "3068:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3068:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3103:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3106:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3106:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3096:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3096:6:9"
																			},
																			"nativeSrc": "3096:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3096:15:9"
																		},
																		"nativeSrc": "3096:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3096:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2909:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2909:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2932:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2940:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2940:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2929:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2929:2:9"
																		},
																		"nativeSrc": "2929:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2929:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2906:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2906:2:9"
																},
																"nativeSrc": "2906:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2906:38:9"
															},
															"nativeSrc": "2903:218:9",
															"nodeType": "YulIf",
															"src": "2903:218:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2690:437:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2725:4:9",
														"nodeType": "YulTypedName",
														"src": "2725:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2734:6:9",
														"nodeType": "YulTypedName",
														"src": "2734:6:9",
														"type": ""
													}
												],
												"src": "2690:437:9"
											},
											{
												"body": {
													"nativeSrc": "3188:65:9",
													"nodeType": "YulBlock",
													"src": "3188:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3205:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3205:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3208:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3198:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:9"
																},
																"nativeSrc": "3198:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3198:14:9"
															},
															"nativeSrc": "3198:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "3198:14:9"
														},
														{
															"nativeSrc": "3221:26:9",
															"nodeType": "YulAssignment",
															"src": "3221:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3239:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3239:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3242:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3242:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3229:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3229:9:9"
																},
																"nativeSrc": "3229:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3229:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3221:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3221:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "3132:121:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3171:3:9",
														"nodeType": "YulTypedName",
														"src": "3171:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3179:4:9",
														"nodeType": "YulTypedName",
														"src": "3179:4:9",
														"type": ""
													}
												],
												"src": "3132:121:9"
											},
											{
												"body": {
													"nativeSrc": "3339:437:9",
													"nodeType": "YulBlock",
													"src": "3339:437:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3372:398:9",
																"nodeType": "YulBlock",
																"src": "3372:398:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3393:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3393:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "3396:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3396:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3386:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3386:6:9"
																			},
																			"nativeSrc": "3386:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3386:16:9"
																		},
																		"nativeSrc": "3386:16:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3386:16:9"
																	},
																	{
																		"nativeSrc": "3415:30:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3415:30:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3437:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3437:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3440:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3440:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "3427:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3427:9:9"
																			},
																			"nativeSrc": "3427:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3427:18:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "3419:4:9",
																				"nodeType": "YulTypedName",
																				"src": "3419:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3458:57:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3458:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "3481:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "3481:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3491:1:9",
																							"nodeType": "YulLiteral",
																							"src": "3491:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "3498:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "3498:10:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3510:2:9",
																									"nodeType": "YulLiteral",
																									"src": "3510:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3494:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "3494:3:9"
																							},
																							"nativeSrc": "3494:19:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3494:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3487:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3487:3:9"
																					},
																					"nativeSrc": "3487:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3487:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3477:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3477:3:9"
																			},
																			"nativeSrc": "3477:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3477:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3462:11:9",
																				"nodeType": "YulTypedName",
																				"src": "3462:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3552:23:9",
																			"nodeType": "YulBlock",
																			"src": "3552:23:9",
																			"statements": [
																				{
																					"nativeSrc": "3554:19:9",
																					"nodeType": "YulAssignment",
																					"src": "3554:19:9",
																					"value": {
																						"name": "data",
																						"nativeSrc": "3569:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3569:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3554:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "3554:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3534:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "3534:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3546:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3546:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3531:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "3531:2:9"
																			},
																			"nativeSrc": "3531:20:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3531:20:9"
																		},
																		"nativeSrc": "3528:47:9",
																		"nodeType": "YulIf",
																		"src": "3528:47:9"
																	},
																	{
																		"nativeSrc": "3588:41:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3588:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "3602:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "3602:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3612:1:9",
																							"nodeType": "YulLiteral",
																							"src": "3612:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3619:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3619:3:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3624:2:9",
																									"nodeType": "YulLiteral",
																									"src": "3624:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3615:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "3615:3:9"
																							},
																							"nativeSrc": "3615:12:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3615:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3608:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3608:3:9"
																					},
																					"nativeSrc": "3608:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3608:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3598:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3598:3:9"
																			},
																			"nativeSrc": "3598:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3598:31:9"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "3592:2:9",
																				"nodeType": "YulTypedName",
																				"src": "3592:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3642:24:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3642:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "3655:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "3655:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "3646:5:9",
																				"nodeType": "YulTypedName",
																				"src": "3646:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3740:20:9",
																			"nodeType": "YulBlock",
																			"src": "3740:20:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3749:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "3749:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3756:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3756:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "3742:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "3742:6:9"
																						},
																						"nativeSrc": "3742:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3742:16:9"
																					},
																					"nativeSrc": "3742:16:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "3742:16:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3690:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3690:5:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3697:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3697:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3687:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "3687:2:9"
																			},
																			"nativeSrc": "3687:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3687:13:9"
																		},
																		"nativeSrc": "3679:81:9",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "3701:26:9",
																			"nodeType": "YulBlock",
																			"src": "3701:26:9",
																			"statements": [
																				{
																					"nativeSrc": "3703:22:9",
																					"nodeType": "YulAssignment",
																					"src": "3703:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3716:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "3716:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3723:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3723:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3712:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3712:3:9"
																						},
																						"nativeSrc": "3712:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3712:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "3703:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "3703:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "3683:3:9",
																			"nodeType": "YulBlock",
																			"src": "3683:3:9",
																			"statements": []
																		},
																		"src": "3679:81:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3355:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3355:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3360:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3360:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3352:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3352:2:9"
																},
																"nativeSrc": "3352:11:9",
																"nodeType": "YulFunctionCall",
																"src": "3352:11:9"
															},
															"nativeSrc": "3349:421:9",
															"nodeType": "YulIf",
															"src": "3349:421:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "3258:518:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3311:5:9",
														"nodeType": "YulTypedName",
														"src": "3311:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3318:3:9",
														"nodeType": "YulTypedName",
														"src": "3318:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3323:10:9",
														"nodeType": "YulTypedName",
														"src": "3323:10:9",
														"type": ""
													}
												],
												"src": "3258:518:9"
											},
											{
												"body": {
													"nativeSrc": "3866:141:9",
													"nodeType": "YulBlock",
													"src": "3866:141:9",
													"statements": [
														{
															"nativeSrc": "3876:125:9",
															"nodeType": "YulAssignment",
															"src": "3876:125:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3891:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3891:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3909:1:9",
																										"nodeType": "YulLiteral",
																										"src": "3909:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3912:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "3912:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3905:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3905:3:9"
																								},
																								"nativeSrc": "3905:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3905:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3918:66:9",
																								"nodeType": "YulLiteral",
																								"src": "3918:66:9",
																								"type": "",
																								"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3901:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3901:3:9"
																						},
																						"nativeSrc": "3901:84:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3901:84:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3897:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3897:3:9"
																				},
																				"nativeSrc": "3897:89:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3897:89:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3887:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3887:3:9"
																		},
																		"nativeSrc": "3887:100:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3887:100:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3993:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3993:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3996:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3996:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3989:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3989:3:9"
																		},
																		"nativeSrc": "3989:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3989:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3884:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3884:2:9"
																},
																"nativeSrc": "3884:117:9",
																"nodeType": "YulFunctionCall",
																"src": "3884:117:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3876:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3876:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3781:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3843:4:9",
														"nodeType": "YulTypedName",
														"src": "3843:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3849:3:9",
														"nodeType": "YulTypedName",
														"src": "3849:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3857:4:9",
														"nodeType": "YulTypedName",
														"src": "3857:4:9",
														"type": ""
													}
												],
												"src": "3781:226:9"
											},
											{
												"body": {
													"nativeSrc": "4108:1368:9",
													"nodeType": "YulBlock",
													"src": "4108:1368:9",
													"statements": [
														{
															"nativeSrc": "4118:24:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4118:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4138:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4138:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4132:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4132:5:9"
																},
																"nativeSrc": "4132:10:9",
																"nodeType": "YulFunctionCall",
																"src": "4132:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4122:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4122:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4185:22:9",
																"nodeType": "YulBlock",
																"src": "4185:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4187:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4187:16:9"
																			},
																			"nativeSrc": "4187:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4187:18:9"
																		},
																		"nativeSrc": "4187:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4187:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4157:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4157:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4165:18:9",
																		"nodeType": "YulLiteral",
																		"src": "4165:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4154:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4154:2:9"
																},
																"nativeSrc": "4154:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4154:30:9"
															},
															"nativeSrc": "4151:56:9",
															"nodeType": "YulIf",
															"src": "4151:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4260:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4260:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4298:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "4298:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4292:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4292:5:9"
																				},
																				"nativeSrc": "4292:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4292:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "4266:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "4266:25:9"
																		},
																		"nativeSrc": "4266:38:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4266:38:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4306:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4306:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "4216:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4216:43:9"
																},
																"nativeSrc": "4216:97:9",
																"nodeType": "YulFunctionCall",
																"src": "4216:97:9"
															},
															"nativeSrc": "4216:97:9",
															"nodeType": "YulExpressionStatement",
															"src": "4216:97:9"
														},
														{
															"nativeSrc": "4322:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4322:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4339:1:9",
																"nodeType": "YulLiteral",
																"src": "4339:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4326:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4326:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4349:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4349:23:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4368:4:9",
																"nodeType": "YulLiteral",
																"src": "4368:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "4353:11:9",
																	"nodeType": "YulTypedName",
																	"src": "4353:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4381:17:9",
															"nodeType": "YulAssignment",
															"src": "4381:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4394:4:9",
																"nodeType": "YulLiteral",
																"src": "4394:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4381:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4381:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4444:775:9",
																		"nodeType": "YulBlock",
																		"src": "4444:775:9",
																		"statements": [
																			{
																				"nativeSrc": "4458:94:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4458:94:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4477:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4477:6:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4485:66:9",
																							"nodeType": "YulLiteral",
																							"src": "4485:66:9",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4473:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4473:3:9"
																					},
																					"nativeSrc": "4473:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4473:79:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4462:7:9",
																						"nodeType": "YulTypedName",
																						"src": "4462:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4565:49:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4565:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4609:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4609:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "4579:29:9",
																						"nodeType": "YulIdentifier",
																						"src": "4579:29:9"
																					},
																					"nativeSrc": "4579:35:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4579:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4569:6:9",
																						"nodeType": "YulTypedName",
																						"src": "4569:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4627:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4627:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4636:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4631:1:9",
																						"nodeType": "YulTypedName",
																						"src": "4631:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4714:172:9",
																					"nodeType": "YulBlock",
																					"src": "4714:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4739:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4739:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4757:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "4757:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4762:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "4762:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4753:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4753:3:9"
																												},
																												"nativeSrc": "4753:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4753:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4747:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "4747:5:9"
																										},
																										"nativeSrc": "4747:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4747:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4732:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4732:6:9"
																								},
																								"nativeSrc": "4732:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4732:42:9"
																							},
																							"nativeSrc": "4732:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4732:42:9"
																						},
																						{
																							"nativeSrc": "4791:24:9",
																							"nodeType": "YulAssignment",
																							"src": "4791:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4805:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4805:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4813:1:9",
																										"nodeType": "YulLiteral",
																										"src": "4813:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4801:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4801:3:9"
																								},
																								"nativeSrc": "4801:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4801:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4791:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4791:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4832:40:9",
																							"nodeType": "YulAssignment",
																							"src": "4832:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4849:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "4849:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "4860:11:9",
																										"nodeType": "YulIdentifier",
																										"src": "4860:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4845:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4845:3:9"
																								},
																								"nativeSrc": "4845:27:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4845:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4832:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "4832:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4661:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "4661:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4664:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4664:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4658:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4658:2:9"
																					},
																					"nativeSrc": "4658:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4658:14:9"
																				},
																				"nativeSrc": "4650:236:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4673:28:9",
																					"nodeType": "YulBlock",
																					"src": "4673:28:9",
																					"statements": [
																						{
																							"nativeSrc": "4675:24:9",
																							"nodeType": "YulAssignment",
																							"src": "4675:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4684:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "4684:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "4687:11:9",
																										"nodeType": "YulIdentifier",
																										"src": "4687:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4680:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4680:3:9"
																								},
																								"nativeSrc": "4680:19:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4680:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4675:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "4675:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4654:3:9",
																					"nodeType": "YulBlock",
																					"src": "4654:3:9",
																					"statements": []
																				},
																				"src": "4650:236:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "4934:226:9",
																					"nodeType": "YulBlock",
																					"src": "4934:226:9",
																					"statements": [
																						{
																							"nativeSrc": "4952:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4952:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4979:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4979:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4984:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4984:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4975:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4975:3:9"
																										},
																										"nativeSrc": "4975:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4975:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4969:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4969:5:9"
																								},
																								"nativeSrc": "4969:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4969:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4956:9:9",
																									"nodeType": "YulTypedName",
																									"src": "4956:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5019:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5019:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5031:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5031:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "5058:1:9",
																																				"nodeType": "YulLiteral",
																																				"src": "5058:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "5061:6:9",
																																				"nodeType": "YulIdentifier",
																																				"src": "5061:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "5054:3:9",
																																			"nodeType": "YulIdentifier",
																																			"src": "5054:3:9"
																																		},
																																		"nativeSrc": "5054:14:9",
																																		"nodeType": "YulFunctionCall",
																																		"src": "5054:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "5070:3:9",
																																		"nodeType": "YulLiteral",
																																		"src": "5070:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "5050:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "5050:3:9"
																																},
																																"nativeSrc": "5050:24:9",
																																"nodeType": "YulFunctionCall",
																																"src": "5050:24:9"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "5076:66:9",
																																"nodeType": "YulLiteral",
																																"src": "5076:66:9",
																																"type": "",
																																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "5046:3:9",
																															"nodeType": "YulIdentifier",
																															"src": "5046:3:9"
																														},
																														"nativeSrc": "5046:97:9",
																														"nodeType": "YulFunctionCall",
																														"src": "5046:97:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "5042:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "5042:3:9"
																												},
																												"nativeSrc": "5042:102:9",
																												"nodeType": "YulFunctionCall",
																												"src": "5042:102:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "5027:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "5027:3:9"
																										},
																										"nativeSrc": "5027:118:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5027:118:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5012:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5012:6:9"
																								},
																								"nativeSrc": "5012:134:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5012:134:9"
																							},
																							"nativeSrc": "5012:134:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "5012:134:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4905:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4905:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4914:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4914:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4902:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4902:2:9"
																					},
																					"nativeSrc": "4902:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4902:19:9"
																				},
																				"nativeSrc": "4899:261:9",
																				"nodeType": "YulIf",
																				"src": "4899:261:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5180:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5180:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "5194:1:9",
																											"nodeType": "YulLiteral",
																											"src": "5194:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "5197:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "5197:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "5190:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "5190:3:9"
																									},
																									"nativeSrc": "5190:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "5190:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5206:1:9",
																									"nodeType": "YulLiteral",
																									"src": "5206:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5186:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "5186:3:9"
																							},
																							"nativeSrc": "5186:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5186:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5173:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5173:6:9"
																					},
																					"nativeSrc": "5173:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5173:36:9"
																				},
																				"nativeSrc": "5173:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5173:36:9"
																			}
																		]
																	},
																	"nativeSrc": "4437:782:9",
																	"nodeType": "YulCase",
																	"src": "4437:782:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4442:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4442:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5236:234:9",
																		"nodeType": "YulBlock",
																		"src": "5236:234:9",
																		"statements": [
																			{
																				"nativeSrc": "5250:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5250:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5263:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5263:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5254:5:9",
																						"nodeType": "YulTypedName",
																						"src": "5254:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5299:67:9",
																					"nodeType": "YulBlock",
																					"src": "5299:67:9",
																					"statements": [
																						{
																							"nativeSrc": "5317:35:9",
																							"nodeType": "YulAssignment",
																							"src": "5317:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5336:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "5336:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5341:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5341:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5332:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "5332:3:9"
																										},
																										"nativeSrc": "5332:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5332:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5326:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5326:5:9"
																								},
																								"nativeSrc": "5326:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5326:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5317:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5317:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5280:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5280:6:9"
																				},
																				"nativeSrc": "5277:89:9",
																				"nodeType": "YulIf",
																				"src": "5277:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5386:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5386:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5445:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5445:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5452:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5452:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5392:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "5392:52:9"
																							},
																							"nativeSrc": "5392:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5392:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5379:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5379:6:9"
																					},
																					"nativeSrc": "5379:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5379:81:9"
																				},
																				"nativeSrc": "5379:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5379:81:9"
																			}
																		]
																	},
																	"nativeSrc": "5228:242:9",
																	"nodeType": "YulCase",
																	"src": "5228:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4417:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4417:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4425:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4425:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4414:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4414:2:9"
																},
																"nativeSrc": "4414:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4414:14:9"
															},
															"nativeSrc": "4407:1063:9",
															"nodeType": "YulSwitch",
															"src": "4407:1063:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4012:1464:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4093:4:9",
														"nodeType": "YulTypedName",
														"src": "4093:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4099:3:9",
														"nodeType": "YulTypedName",
														"src": "4099:3:9",
														"type": ""
													}
												],
												"src": "4012:1464:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061006f575f3560e01c8063c3c5a5471161004d578063c3c5a547146100cd578063ebbb4f84146100ff578063f2fde38b14610112575f80fd5b80632146671f14610073578063715018a61461009c5780638da5cb5b146100a6575b5f80fd5b610086610081366004610393565b610125565b60405161009391906103b3565b60405180910390f35b6100a46101bc565b005b5f5460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610093565b6100ef6100db366004610393565b60016020525f908152604090205460ff1681565b6040519015158152602001610093565b6100a461010d36600461044a565b6101cf565b6100a4610120366004610393565b61023d565b60026020525f90815260409020805461013d90610524565b80601f016020809104026020016040519081016040528092919081815260200182805461016990610524565b80156101b45780601f1061018b576101008083540402835291602001916101b4565b820191905f5260205f20905b81548152906001019060200180831161019757829003601f168201915b505050505081565b6101c46102a5565b6101cd5f6102f7565b565b6101d76102a5565b73ffffffffffffffffffffffffffffffffffffffff82165f90815260016020818152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690931790925560029052902061023882826105c0565b505050565b6102456102a5565b73ffffffffffffffffffffffffffffffffffffffff8116610299576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6102a2816102f7565b50565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146101cd576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610290565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461038e575f80fd5b919050565b5f602082840312156103a3575f80fd5b6103ac8261036b565b9392505050565b5f602080835283518060208501525f5b818110156103df578581018301518582016040015282016103c3565b505f6040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f806040838503121561045b575f80fd5b6104648361036b565b9150602083013567ffffffffffffffff80821115610480575f80fd5b818501915085601f830112610493575f80fd5b8135818111156104a5576104a561041d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156104eb576104eb61041d565b81604052828152886020848701011115610503575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b600181811c9082168061053857607f821691505b60208210810361056f577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b601f82111561023857805f5260205f20601f840160051c8101602085101561059a5750805b601f840160051c820191505b818110156105b9575f81556001016105a6565b5050505050565b815167ffffffffffffffff8111156105da576105da61041d565b6105ee816105e88454610524565b84610575565b602080601f831160018114610640575f841561060a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556106d4565b5f858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561068c5788860151825594840194600190910190840161066d565b50858210156106c857878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b505060018460011b0185555b50505050505056fea264697066735822122092c0eceb49aab9c6b8865c8ca8d20c2592de94e479caf29f97ed0e3d427de09764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C5A547 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xEBBB4F84 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2146671F EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x86 PUSH2 0x81 CALLDATASIZE PUSH1 0x4 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x1BC JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93 JUMP JUMPDEST PUSH2 0xEF PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93 JUMP JUMPDEST PUSH2 0xA4 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH2 0xA4 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x23D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x13D SWAP1 PUSH2 0x524 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x169 SWAP1 PUSH2 0x524 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x197 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x1CD PUSH0 PUSH2 0x2F7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x2A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SWAP1 MSTORE SWAP1 KECCAK256 PUSH2 0x238 DUP3 DUP3 PUSH2 0x5C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x245 PUSH2 0x2A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A2 DUP2 PUSH2 0x2F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x290 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3AC DUP3 PUSH2 0x36B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3C3 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x464 DUP4 PUSH2 0x36B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x480 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x493 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A5 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4EB JUMPI PUSH2 0x4EB PUSH2 0x41D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x503 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x538 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x56F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x238 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x59A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5A6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5DA PUSH2 0x41D JUMP JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x5E8 DUP5 SLOAD PUSH2 0x524 JUMP JUMPDEST DUP5 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x640 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x60A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x6D4 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x68C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x66D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x6C8 JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xC0 0xEC 0xEB 0x49 0xAA 0xB9 0xC6 0xB8 DUP7 0x5C DUP13 0xA8 0xD2 0xC 0x25 SWAP3 0xDE SWAP5 0xE4 PUSH26 0xCAF29F97ED0E3D427DE09764736F6C6343000816003300000000 ",
							"sourceMap": "117:384:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;209:45;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;1684:7;1710:6;1638:85;;1710:6;;;;1164:74:9;;1152:2;1137:18;1638:85:0;1018:226:9;158:44:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1414:14:9;;1407:22;1389:41;;1377:2;1362:18;158:44:8;1249:187:9;335:163:8;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;209:45:8:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;335:163:8:-;1531:13:0;:11;:13::i;:::-;425:20:8::1;::::0;::::1;;::::0;;;448:4:::1;425:20;::::0;;;;;;;:27;;;::::1;::::0;;::::1;::::0;;;463:11:::1;:19:::0;;;;:27:::1;485:5:::0;463:19;:27:::1;:::i;:::-;;335:163:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2627:22:::1;::::0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;1164:74:9::0;1137:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;1855:23;1710:6;735:10:6;1855:23:0;1851:101;;1901:40;;;;;735:10:6;1901:40:0;;;1164:74:9;1137:18;;1901:40:0;1018:226:9;2912:187:0;2985:16;3004:6;;;3020:17;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:196:9:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:9:o;406:607::-;518:4;547:2;576;565:9;558:21;608:6;602:13;651:6;646:2;635:9;631:18;624:34;676:1;686:140;700:6;697:1;694:13;686:140;;;795:14;;;791:23;;785:30;761:17;;;780:2;757:26;750:66;715:10;;686:140;;;690:3;875:1;870:2;861:6;850:9;846:22;842:31;835:42;1004:2;934:66;929:2;921:6;917:15;913:88;902:9;898:104;894:113;886:121;;;;406:607;;;;:::o;1441:184::-;1493:77;1490:1;1483:88;1590:4;1587:1;1580:15;1614:4;1611:1;1604:15;1630:1055;1708:6;1716;1769:2;1757:9;1748:7;1744:23;1740:32;1737:52;;;1785:1;1782;1775:12;1737:52;1808:29;1827:9;1808:29;:::i;:::-;1798:39;;1888:2;1877:9;1873:18;1860:32;1911:18;1952:2;1944:6;1941:14;1938:34;;;1968:1;1965;1958:12;1938:34;2006:6;1995:9;1991:22;1981:32;;2051:7;2044:4;2040:2;2036:13;2032:27;2022:55;;2073:1;2070;2063:12;2022:55;2109:2;2096:16;2131:2;2127;2124:10;2121:36;;;2137:18;;:::i;:::-;2271:2;2265:9;2333:4;2325:13;;2176:66;2321:22;;;2345:2;2317:31;2313:40;2301:53;;;2369:18;;;2389:22;;;2366:46;2363:72;;;2415:18;;:::i;:::-;2455:10;2451:2;2444:22;2490:2;2482:6;2475:18;2530:7;2525:2;2520;2516;2512:11;2508:20;2505:33;2502:53;;;2551:1;2548;2541:12;2502:53;2607:2;2602;2598;2594:11;2589:2;2581:6;2577:15;2564:46;2652:1;2647:2;2642;2634:6;2630:15;2626:24;2619:35;2673:6;2663:16;;;;;;;1630:1055;;;;;:::o;2690:437::-;2769:1;2765:12;;;;2812;;;2833:61;;2887:4;2879:6;2875:17;2865:27;;2833:61;2940:2;2932:6;2929:14;2909:18;2906:38;2903:218;;2977:77;2974:1;2967:88;3078:4;3075:1;3068:15;3106:4;3103:1;3096:15;2903:218;;2690:437;;;:::o;3258:518::-;3360:2;3355:3;3352:11;3349:421;;;3396:5;3393:1;3386:16;3440:4;3437:1;3427:18;3510:2;3498:10;3494:19;3491:1;3487:27;3481:4;3477:38;3546:4;3534:10;3531:20;3528:47;;;-1:-1:-1;3569:4:9;3528:47;3624:2;3619:3;3615:12;3612:1;3608:20;3602:4;3598:31;3588:41;;3679:81;3697:2;3690:5;3687:13;3679:81;;;3756:1;3742:16;;3723:1;3712:13;3679:81;;;3683:3;;3258:518;;;:::o;4012:1464::-;4138:3;4132:10;4165:18;4157:6;4154:30;4151:56;;;4187:18;;:::i;:::-;4216:97;4306:6;4266:38;4298:4;4292:11;4266:38;:::i;:::-;4260:4;4216:97;:::i;:::-;4368:4;;4425:2;4414:14;;4442:1;4437:782;;;;5263:1;5280:6;5277:89;;;-1:-1:-1;5332:19:9;;;5326:26;5277:89;3918:66;3909:1;3905:11;;;3901:84;3897:89;3887:100;3993:1;3989:11;;;3884:117;5379:81;;4407:1063;;4437:782;3205:1;3198:14;;;3242:4;3229:18;;4485:66;4473:79;;;4650:236;4664:7;4661:1;4658:14;4650:236;;;4753:19;;;4747:26;4732:42;;4845:27;;;;4813:1;4801:14;;;;4680:19;;4650:236;;;4654:3;4914:6;4905:7;4902:19;4899:261;;;4975:19;;;4969:26;5076:66;5058:1;5054:14;;;5070:3;5050:24;5046:97;5042:102;5027:118;5012:134;;4899:261;;;5206:1;5197:6;5194:1;5190:14;5186:22;5180:4;5173:36;4407:1063;;;;;4012:1464;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "362000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isRegistered(address)": "2516",
								"owner()": "2332",
								"registerVoter(address,string)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28310",
								"voterToCity(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 501,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 501,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 501,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 327,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 327,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 327,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 327,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 327,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 263,
									"end": 327,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 263,
									"end": 327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 263,
									"end": 327,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 263,
									"end": 327,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 263,
									"end": 327,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 117,
									"end": 501,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 117,
									"end": 501,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 117,
									"end": 501,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 501,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 117,
									"end": 501,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 501,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 501,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 117,
									"end": 501,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 501,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092c0eceb49aab9c6b8865c8ca8d20c2592de94e479caf29f97ed0e3d427de09764736f6c63430008160033",
									".code": [
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "C3C5A547"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "C3C5A547"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "EBBB4F84"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "2146671F"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 117,
											"end": 501,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 209,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 209,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 209,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1238,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 158,
											"end": 202,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 158,
											"end": 202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1428,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1429,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1430,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1430,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 158,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1249,
											"end": 1436,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 498,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 335,
											"end": 498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 335,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 335,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 335,
											"end": 498,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 335,
											"end": 498,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 335,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 335,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 335,
											"end": 498,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 335,
											"end": 498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 335,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 335,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 209,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 209,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 209,
											"end": 254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 209,
											"end": 254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 498,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 335,
											"end": 498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 448,
											"end": 452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 425,
											"end": 445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 425,
											"end": 445,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 425,
											"end": 452,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 425,
											"end": 452,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 463,
											"end": 474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 463,
											"end": 482,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 463,
											"end": 482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 463,
											"end": 482,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 463,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 485,
											"end": 490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 463,
											"end": 482,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 463,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 463,
											"end": 490,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 463,
											"end": 490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 463,
											"end": 490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 463,
											"end": 490,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 335,
											"end": 498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 335,
											"end": 498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 335,
											"end": 498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1238,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1238,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1018,
											"end": 1244,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 366,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 215,
											"end": 401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 406,
											"end": 1013,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 406,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 518,
											"end": 522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 549,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 558,
											"end": 579,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 608,
											"end": 614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 602,
											"end": 615,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 644,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 631,
											"end": 649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 624,
											"end": 658,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 676,
											"end": 677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 686,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 697,
											"end": 698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 694,
											"end": 707,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 686,
											"end": 826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 686,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 686,
											"end": 826,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 795,
											"end": 809,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 795,
											"end": 809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 791,
											"end": 814,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 785,
											"end": 815,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 761,
											"end": 778,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 761,
											"end": 778,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 761,
											"end": 778,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 780,
											"end": 782,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 750,
											"end": 816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 715,
											"end": 725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 715,
											"end": 725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 686,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 686,
											"end": 826,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 686,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 686,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 690,
											"end": 693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 875,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 872,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 867,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 850,
											"end": 859,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 846,
											"end": 868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 842,
											"end": 873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 835,
											"end": 877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1006,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 1000,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 921,
											"end": 927,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 917,
											"end": 932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 913,
											"end": 1001,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 902,
											"end": 911,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 898,
											"end": 1002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 894,
											"end": 1007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1007,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 406,
											"end": 1013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 406,
											"end": 1013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 406,
											"end": 1013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 406,
											"end": 1013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 406,
											"end": 1013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1625,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1441,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1493,
											"end": 1570,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1571,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1594,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1580,
											"end": 1595,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1619,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 2685,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1630,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1722,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1755,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1767,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 1772,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1789,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1737,
											"end": 1789,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1786,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1775,
											"end": 1787,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 1789,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1737,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1827,
											"end": 1836,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1808,
											"end": 1837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1837,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1808,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1837,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1888,
											"end": 1890,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1954,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 1955,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1972,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1938,
											"end": 1972,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 1969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1965,
											"end": 1966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1972,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1938,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2004,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2048,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2059,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2022,
											"end": 2077,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2077,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2022,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2127,
											"end": 2129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2134,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2157,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2121,
											"end": 2157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2137,
											"end": 2155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2337,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2325,
											"end": 2338,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2325,
											"end": 2338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2242,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 2321,
											"end": 2343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 2317,
											"end": 2348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2353,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2412,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2435,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2363,
											"end": 2435,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2415,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2453,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2466,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2527,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2522,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2516,
											"end": 2518,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2512,
											"end": 2523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2538,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2555,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2502,
											"end": 2555,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2553,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2555,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2502,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2594,
											"end": 2605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2591,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2581,
											"end": 2587,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2610,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2649,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2644,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2640,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2650,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2619,
											"end": 2654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 2685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 2685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 2685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 2685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 2685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 3127,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2690,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2765,
											"end": 2777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2777,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2812,
											"end": 2824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2812,
											"end": 2824,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2812,
											"end": 2824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2833,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2833,
											"end": 2894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2892,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2833,
											"end": 2894,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2833,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2942,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 2938,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2943,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 2927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2903,
											"end": 3121,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 3054,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 3055,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3082,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3083,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3110,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3111,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 3121,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2903,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 3121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 3127,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 3127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 3127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 3127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3776,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3258,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3362,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3355,
											"end": 3358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3349,
											"end": 3770,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3349,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3349,
											"end": 3770,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3401,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3498,
											"end": 3508,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3485,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3544,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3551,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3575,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3528,
											"end": 3575,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3575,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3528,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3626,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3619,
											"end": 3622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3598,
											"end": 3629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3588,
											"end": 3629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3588,
											"end": 3629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3699,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3700,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 3757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3758,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3742,
											"end": 3758,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 3679,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 5476,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4012,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4141,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4142,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4184,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4151,
											"end": 4207,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4151,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4151,
											"end": 4207,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4187,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4306,
											"end": 4312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4266,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4303,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4266,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 4266,
											"end": 4304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4266,
											"end": 4304,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4266,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4264,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4216,
											"end": 4313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4313,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4216,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4427,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4414,
											"end": 4428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4428,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4443,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4437,
											"end": 5219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 5219,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4437,
											"end": 5219,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5286,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5366,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5277,
											"end": 5366,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5332,
											"end": 5351,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5351,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5326,
											"end": 5352,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5366,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5277,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3984,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3905,
											"end": 3916,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3916,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3985,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3986,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3987,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3989,
											"end": 4000,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4000,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 4001,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5379,
											"end": 5460,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5379,
											"end": 5460,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4407,
											"end": 5470,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 5219,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4437,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4551,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4473,
											"end": 4552,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4552,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4672,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 4772,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 4772,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 4772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4774,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4845,
											"end": 4872,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4845,
											"end": 4872,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4845,
											"end": 4872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4845,
											"end": 4872,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4801,
											"end": 4815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4801,
											"end": 4815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4801,
											"end": 4815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4801,
											"end": 4815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4680,
											"end": 4699,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4680,
											"end": 4699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4650,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4654,
											"end": 4657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4902,
											"end": 4921,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 5160,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4899,
											"end": 5160,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4994,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4994,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 4995,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5142,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5054,
											"end": 5068,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5054,
											"end": 5068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5054,
											"end": 5068,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5070,
											"end": 5073,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5046,
											"end": 5143,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5144,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5027,
											"end": 5145,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5012,
											"end": 5146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5012,
											"end": 5146,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 5160,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4899,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 5160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 5160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5197,
											"end": 5203,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5190,
											"end": 5204,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5184,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5209,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 5470,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4407,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 5470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 5470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 5470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 5470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 5476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 5476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DAO.sol",
								"contracts/Title.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isRegistered(address)": "c3c5a547",
							"owner()": "8da5cb5b",
							"registerVoter(address,string)": "ebbb4f84",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"voterToCity(address)": "2146671f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_city\",\"type\":\"string\"}],\"name\":\"registerVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voterToCity\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Title.sol\":\"TitleRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/Title.sol\":{\"keccak256\":\"0xc2c75a857b4aaa1b028d4c2534630864e8ab55016b68f772358b82744cd24ecd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://912f82099eee0b5920b9c0ebd428d9c170224b3770b04f2e7300fa4a5531ff7d\",\"dweb:/ipfs/QmWpT4KRKJ7ewKLHdnFx6wciJHRJ9Uhom8EK9zSsxMEXwS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Title.sol:TitleRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1302,
								"contract": "contracts/Title.sol:TitleRegistry",
								"label": "isRegistered",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1306,
								"contract": "contracts/Title.sol:TitleRegistry",
								"label": "voterToCity",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							990
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 991,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 990,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 990,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								990
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							990
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 991,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 990,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 990,
										"src": "1428:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1437:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1445:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								990
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 864,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 864,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 864,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 864,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 864,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 864,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 864,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 864,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 864,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 864,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 864,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 864,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 864,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 864,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 864,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 864,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 864,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1401:9741:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 942,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 942,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 942,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 942,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 942,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 942,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "305:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 968,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 968,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 968,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							990
						]
					},
					"id": 991,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 990,
							"linearizedBaseContracts": [
								990
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 990,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 990,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 991,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"contracts/DAO.sol": {
				"ast": {
					"absolutePath": "contracts/DAO.sol",
					"exportedSymbols": {
						"Context": [
							990
						],
						"DAO": [
							1293
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"TitleRegistry": [
							1338
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 992,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 993,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 865,
							"src": "61:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 994,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 148,
							"src": "118:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 995,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 350,
							"src": "172:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Title.sol",
							"file": "./Title.sol",
							"id": 996,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1339,
							"src": "238:21:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 997,
										"name": "Ownable",
										"nameLocations": [
											"279:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "279:7:7"
									},
									"id": 998,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:7"
								},
								{
									"baseName": {
										"id": 999,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"288:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "288:15:7"
									},
									"id": 1000,
									"nodeType": "InheritanceSpecifier",
									"src": "288:15:7"
								}
							],
							"canonicalName": "DAO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								349,
								147,
								990
							],
							"name": "DAO",
							"nameLocation": "272:3:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DAO.Project",
									"id": 1009,
									"members": [
										{
											"constant": false,
											"id": 1002,
											"mutability": "mutable",
											"name": "beneficiary",
											"nameLocation": "353:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 1009,
											"src": "337:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1001,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "337:15:7",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1004,
											"mutability": "mutable",
											"name": "amountRequested",
											"nameLocation": "383:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1009,
											"src": "375:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1003,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "375:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1006,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "417:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1009,
											"src": "409:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1005,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "409:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1008,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "438:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1009,
											"src": "433:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1007,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "433:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Project",
									"nameLocation": "318:7:7",
									"nodeType": "StructDefinition",
									"scope": 1293,
									"src": "311:143:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "107046bd",
									"id": 1014,
									"mutability": "mutable",
									"name": "projects",
									"nameLocation": "497:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "462:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
										"typeString": "mapping(uint256 => struct DAO.Project)"
									},
									"typeName": {
										"id": 1013,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1010,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "470:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "462:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
											"typeString": "mapping(uint256 => struct DAO.Project)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1012,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1011,
												"name": "Project",
												"nameLocations": [
													"481:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1009,
												"src": "481:7:7"
											},
											"referencedDeclaration": 1009,
											"src": "481:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Project_$1009_storage_ptr",
												"typeString": "struct DAO.Project"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c73b302e",
									"id": 1016,
									"mutability": "mutable",
									"name": "projectsCount",
									"nameLocation": "527:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "512:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "512:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9f054ba1",
									"id": 1019,
									"mutability": "mutable",
									"name": "titleRegistry",
									"nameLocation": "570:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "549:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TitleRegistry_$1338",
										"typeString": "contract TitleRegistry"
									},
									"typeName": {
										"id": 1018,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1017,
											"name": "TitleRegistry",
											"nameLocations": [
												"549:13:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1338,
											"src": "549:13:7"
										},
										"referencedDeclaration": 1338,
										"src": "549:13:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TitleRegistry_$1338",
											"typeString": "contract TitleRegistry"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2ce514b",
									"id": 1022,
									"mutability": "mutable",
									"name": "treasuryToken",
									"nameLocation": "603:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "590:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$864",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1021,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1020,
											"name": "ERC20",
											"nameLocations": [
												"590:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 864,
											"src": "590:5:7"
										},
										"referencedDeclaration": 864,
										"src": "590:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$864",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1b9d0946c0a6f3b3a57782ad25a4553bd5bcf1f1a252068eafc757670aad573a",
									"id": 1030,
									"name": "ProjectCreated",
									"nameLocation": "631:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "projectId",
												"nameLocation": "654:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "646:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "673:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "665:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountRequested",
												"nameLocation": "694:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "686:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:65:7"
									},
									"src": "625:86:7"
								},
								{
									"anonymous": false,
									"eventSelector": "1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e",
									"id": 1038,
									"name": "Voted",
									"nameLocation": "723:5:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "projectId",
												"nameLocation": "737:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "729:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "756:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "748:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "votes",
												"nameLocation": "771:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "763:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:49:7"
									},
									"src": "717:61:7"
								},
								{
									"anonymous": false,
									"eventSelector": "79f124991cfe2130be13599c74373fd040b0ead93c41b26aedbe1a6e6f2844c3",
									"id": 1044,
									"name": "ProjectExecuted",
									"nameLocation": "790:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "projectId",
												"nameLocation": "814:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "806:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": false,
												"mutability": "mutable",
												"name": "executor",
												"nameLocation": "833:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "825:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:37:7"
									},
									"src": "784:59:7"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "882:297:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1049,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "928:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "932:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "928:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1047,
																	"name": "titleRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "901:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TitleRegistry_$1338",
																		"typeString": "contract TitleRegistry"
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "915:12:7",
																"memberName": "isRegistered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1302,
																"src": "901:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "901:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061207265676973746572656420766f746572",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "941:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5856af36c9982fc05af30dbd00aa231b175fd64ca45b42d898f413a7edfeab13",
																"typeString": "literal_string \"Not a registered voter\""
															},
															"value": "Not a registered voter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5856af36c9982fc05af30dbd00aa231b175fd64ca45b42d898f413a7edfeab13",
																"typeString": "literal_string \"Not a registered voter\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "893:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "893:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "893:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 1061,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "1052:3:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1062,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1056:6:7",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "1052:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 1059,
																						"name": "titleRegistry",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1019,
																						"src": "1026:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_TitleRegistry_$1338",
																							"typeString": "contract TitleRegistry"
																						}
																					},
																					"id": 1060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1040:11:7",
																					"memberName": "voterToCity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1306,
																					"src": "1026:25:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
																						"typeString": "function (address) view external returns (string memory)"
																					}
																				},
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1026:37:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1057,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1009:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1013:12:7",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1009:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1009:55:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1056,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "999:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "999:66:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1069,
																					"name": "getCity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "1096:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																						"typeString": "function () view returns (string memory)"
																					}
																				},
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1096:9:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1067,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1079:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1083:12:7",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1079:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1079:27:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1066,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1069:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1069:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "999:108:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f746572206e6f742066726f6d20746869732063697479",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1122:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_466e70baf4171da174c5429b22a8fd588d8e8e91f0f15c4b83a7b251a146e2d0",
																"typeString": "literal_string \"Voter not from this city\""
															},
															"value": "Voter not from this city"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_466e70baf4171da174c5429b22a8fd588d8e8e91f0f15c4b83a7b251a146e2d0",
																"typeString": "literal_string \"Voter not from this city\""
															}
														],
														"id": 1055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "977:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "977:182:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "977:182:7"
											},
											{
												"id": 1077,
												"nodeType": "PlaceholderStatement",
												"src": "1170:1:7"
											}
										]
									},
									"id": 1079,
									"name": "onlyRegisteredVoter",
									"nameLocation": "860:19:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:2:7"
									},
									"src": "851:328:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "1233:177:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1084,
																		"name": "projects",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "1252:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																			"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																		}
																	},
																	"id": 1086,
																	"indexExpression": {
																		"id": 1085,
																		"name": "_projectId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "1261:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1252:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Project_$1009_storage",
																		"typeString": "struct DAO.Project storage ref"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1273:5:7",
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1006,
																"src": "1252:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1281:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1252:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20766f74657320666f7220746869732070726f6a656374",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1284:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a348020b2dbd9c6a0d91fbabb3185a053a77efdd67d389dd2e534b5c8492671",
																"typeString": "literal_string \"No votes for this project\""
															},
															"value": "No votes for this project"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a348020b2dbd9c6a0d91fbabb3185a053a77efdd67d389dd2e534b5c8492671",
																"typeString": "literal_string \"No votes for this project\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1244:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1244:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1244:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1331:30:7",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1094,
																		"name": "projects",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "1332:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																			"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																		}
																	},
																	"id": 1096,
																	"indexExpression": {
																		"id": 1095,
																		"name": "_projectId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "1341:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1332:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Project_$1009_storage",
																		"typeString": "struct DAO.Project storage ref"
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1353:8:7",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1008,
																"src": "1332:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f6a65637420616c7265616479206578656375746564",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1363:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6243dc821c4e3d26290bd4d4cfa321aeec064a307e7fc91798644b2f5fe0b37",
																"typeString": "literal_string \"Project already executed\""
															},
															"value": "Project already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6243dc821c4e3d26290bd4d4cfa321aeec064a307e7fc91798644b2f5fe0b37",
																"typeString": "literal_string \"Project already executed\""
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1323:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1323:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "1323:67:7"
											},
											{
												"id": 1102,
												"nodeType": "PlaceholderStatement",
												"src": "1401:1:7"
											}
										]
									},
									"id": 1104,
									"name": "onlyProjectVoter",
									"nameLocation": "1196:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "1221:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1213:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:20:7"
									},
									"src": "1187:223:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "1470:117:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1109,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1489:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1493:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1489:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1111,
																		"name": "projects",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "1503:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																			"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																		}
																	},
																	"id": 1113,
																	"indexExpression": {
																		"id": 1112,
																		"name": "_projectId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "1512:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1503:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Project_$1009_storage",
																		"typeString": "struct DAO.Project storage ref"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1524:11:7",
																"memberName": "beneficiary",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1002,
																"src": "1503:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1489:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207468652070726f6a6563742062656e6566696369617279",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1537:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f6a1b1b232280f721ab0d78e4e4d43c85892dee29c08a16552f27589b9e843f",
																"typeString": "literal_string \"Not the project beneficiary\""
															},
															"value": "Not the project beneficiary"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f6a1b1b232280f721ab0d78e4e4d43c85892dee29c08a16552f27589b9e843f",
																"typeString": "literal_string \"Not the project beneficiary\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1481:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1481:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "1481:86:7"
											},
											{
												"id": 1119,
												"nodeType": "PlaceholderStatement",
												"src": "1578:1:7"
											}
										]
									},
									"id": 1121,
									"name": "onlyProjectBeneficiary",
									"nameLocation": "1427:22:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "1458:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1450:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:20:7"
									},
									"src": "1418:169:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "1709:90:7",
										"statements": [
											{
												"expression": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1135,
														"name": "titleRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "1720:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TitleRegistry_$1338",
															"typeString": "contract TitleRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1136,
														"name": "_titleRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "1736:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TitleRegistry_$1338",
															"typeString": "contract TitleRegistry"
														}
													},
													"src": "1720:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TitleRegistry_$1338",
														"typeString": "contract TitleRegistry"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "1720:30:7"
											},
											{
												"expression": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1139,
														"name": "treasuryToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1761:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$864",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1140,
														"name": "_treasuryToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "1777:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$864",
															"typeString": "contract ERC20"
														}
													},
													"src": "1761:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$864",
														"typeString": "contract ERC20"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "1761:30:7"
											}
										]
									},
									"id": 1144,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1132,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1129,
													"src": "1695:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1133,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1131,
												"name": "Ownable",
												"nameLocations": [
													"1687:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1687:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1687:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "_titleRegistry",
												"nameLocation": "1621:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "1607:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_TitleRegistry_$1338",
													"typeString": "contract TitleRegistry"
												},
												"typeName": {
													"id": 1123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1122,
														"name": "TitleRegistry",
														"nameLocations": [
															"1607:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1338,
														"src": "1607:13:7"
													},
													"referencedDeclaration": 1338,
													"src": "1607:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TitleRegistry_$1338",
														"typeString": "contract TitleRegistry"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "_treasuryToken",
												"nameLocation": "1643:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "1637:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$864",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 1126,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1125,
														"name": "ERC20",
														"nameLocations": [
															"1637:5:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 864,
														"src": "1637:5:7"
													},
													"referencedDeclaration": 864,
													"src": "1637:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$864",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1667:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "1659:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:74:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:0:7"
									},
									"scope": 1293,
									"src": "1595:204:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "1928:211:7",
										"statements": [
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "projectId",
														"nameLocation": "1947:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "1939:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1939:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1959:15:7",
													"subExpression": {
														"id": 1157,
														"name": "projectsCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "1959:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1939:35:7"
											},
											{
												"expression": {
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1160,
															"name": "projects",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1985:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
															}
														},
														"id": 1162,
														"indexExpression": {
															"id": 1161,
															"name": "projectId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1994:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1985:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Project_$1009_storage",
															"typeString": "struct DAO.Project storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1164,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "2015:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 1165,
																"name": "_amountRequested",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "2029:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2047:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "66616c7365",
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2050:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1163,
															"name": "Project",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "2007:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Project_$1009_storage_ptr_$",
																"typeString": "type(struct DAO.Project storage pointer)"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2007:49:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Project_$1009_memory_ptr",
															"typeString": "struct DAO.Project memory"
														}
													},
													"src": "1985:71:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Project_$1009_storage",
														"typeString": "struct DAO.Project storage ref"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "1985:71:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1172,
															"name": "projectId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "2089:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1173,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "2100:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1174,
															"name": "_amountRequested",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2114:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1171,
														"name": "ProjectCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "2074:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "EmitStatement",
												"src": "2069:62:7"
											}
										]
									},
									"functionSelector": "e82d6572",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1150,
												"name": "onlyRegisteredVoter",
												"nameLocations": [
													"1895:19:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1079,
												"src": "1895:19:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1895:19:7"
										},
										{
											"id": 1153,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1152,
												"name": "nonReentrant",
												"nameLocations": [
													"1915:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "1915:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1915:12:7"
										}
									],
									"name": "createProject",
									"nameLocation": "1816:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1846:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1830:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1830:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "_amountRequested",
												"nameLocation": "1868:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1860:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:56:7"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1928:0:7"
									},
									"scope": 1293,
									"src": "1807:332:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "2268:217:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1195,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2314:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2318:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2314:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1199,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2334:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DAO_$1293",
																				"typeString": "contract DAO"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DAO_$1293",
																				"typeString": "contract DAO"
																			}
																		],
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2326:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1197,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2326:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2326:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1201,
																	"name": "_votes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "2341:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1193,
																	"name": "treasuryToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "2287:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$864",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2301:12:7",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 547,
																"src": "2287:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2287:61:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f7465207472616e73666572206661696c6564",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2350:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32c21da3f5704642bc8ac18cb947ed4650ac0c45489f127f4208105344fb7870",
																"typeString": "literal_string \"Vote transfer failed\""
															},
															"value": "Vote transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32c21da3f5704642bc8ac18cb947ed4650ac0c45489f127f4208105344fb7870",
																"typeString": "literal_string \"Vote transfer failed\""
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2279:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2279:94:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "2279:94:7"
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1206,
																"name": "projects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "2386:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																	"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																}
															},
															"id": 1208,
															"indexExpression": {
																"id": 1207,
																"name": "_projectId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2395:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2386:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Project_$1009_storage",
																"typeString": "struct DAO.Project storage ref"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2407:5:7",
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1006,
														"src": "2386:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1210,
														"name": "_votes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "2416:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2386:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "2386:36:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1214,
															"name": "_projectId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "2446:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1215,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2458:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2462:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2458:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "_votes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "2470:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1213,
														"name": "Voted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "2440:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "EmitStatement",
												"src": "2435:42:7"
											}
										]
									},
									"functionSelector": "b384abef",
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1184,
												"name": "onlyRegisteredVoter",
												"nameLocations": [
													"2206:19:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1079,
												"src": "2206:19:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2206:19:7"
										},
										{
											"arguments": [
												{
													"id": 1187,
													"name": "_projectId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1180,
													"src": "2243:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1186,
												"name": "onlyProjectVoter",
												"nameLocations": [
													"2226:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1104,
												"src": "2226:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2226:28:7"
										},
										{
											"id": 1190,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1189,
												"name": "nonReentrant",
												"nameLocations": [
													"2255:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2255:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2255:12:7"
										}
									],
									"name": "vote",
									"nameLocation": "2156:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "2169:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2161:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "_votes",
												"nameLocation": "2189:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2181:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:36:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:0:7"
									},
									"scope": 1293,
									"src": "2147:338:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "2594:384:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2613:30:7",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1232,
																		"name": "projects",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "2614:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																			"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																		}
																	},
																	"id": 1234,
																	"indexExpression": {
																		"id": 1233,
																		"name": "_projectId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "2623:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2614:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Project_$1009_storage",
																		"typeString": "struct DAO.Project storage ref"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2635:8:7",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1008,
																"src": "2614:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f6a65637420616c7265616479206578656375746564",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2645:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6243dc821c4e3d26290bd4d4cfa321aeec064a307e7fc91798644b2f5fe0b37",
																"typeString": "literal_string \"Project already executed\""
															},
															"value": "Project already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6243dc821c4e3d26290bd4d4cfa321aeec064a307e7fc91798644b2f5fe0b37",
																"typeString": "literal_string \"Project already executed\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2605:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2605:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "2605:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1241,
																		"name": "projects",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "2691:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																			"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																		}
																	},
																	"id": 1243,
																	"indexExpression": {
																		"id": 1242,
																		"name": "_projectId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "2700:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2691:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Project_$1009_storage",
																		"typeString": "struct DAO.Project storage ref"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2712:5:7",
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1006,
																"src": "2691:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1245,
																					"name": "treasuryToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1022,
																					"src": "2721:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC20_$864",
																						"typeString": "contract ERC20"
																					}
																				},
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2735:11:7",
																				"memberName": "totalSupply",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 437,
																				"src": "2721:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2721:27:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2751:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "2721:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1250,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2720:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2691:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f746573206e6f7420656e6f756768",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2755:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0bb0e6f45926aca0086625ca0d11313ef171decd13b805b4e787b05ceb90acae",
																"typeString": "literal_string \"Votes not enough\""
															},
															"value": "Votes not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0bb0e6f45926aca0086625ca0d11313ef171decd13b805b4e787b05ceb90acae",
																"typeString": "literal_string \"Votes not enough\""
															}
														],
														"id": 1240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2683:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2683:91:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "2683:91:7"
											},
											{
												"expression": {
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1255,
																"name": "projects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "2787:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																	"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																}
															},
															"id": 1257,
															"indexExpression": {
																"id": 1256,
																"name": "_projectId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "2796:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2787:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Project_$1009_storage",
																"typeString": "struct DAO.Project storage ref"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2808:8:7",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1008,
														"src": "2787:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2819:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2787:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "2787:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1267,
																	"name": "projects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2876:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																		"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																	}
																},
																"id": 1269,
																"indexExpression": {
																	"id": 1268,
																	"name": "_projectId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "2885:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2876:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Project_$1009_storage",
																	"typeString": "struct DAO.Project storage ref"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2897:15:7",
															"memberName": "amountRequested",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1004,
															"src": "2876:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1262,
																	"name": "projects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2834:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Project_$1009_storage_$",
																		"typeString": "mapping(uint256 => struct DAO.Project storage ref)"
																	}
																},
																"id": 1264,
																"indexExpression": {
																	"id": 1263,
																	"name": "_projectId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "2843:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2834:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Project_$1009_storage",
																	"typeString": "struct DAO.Project storage ref"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2855:11:7",
															"memberName": "beneficiary",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1002,
															"src": "2834:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2867:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2834:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "2834:79:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1274,
															"name": "_projectId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "2947:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2959:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2963:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2959:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1273,
														"name": "ProjectExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2931:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2931:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "EmitStatement",
												"src": "2926:44:7"
											}
										]
									},
									"functionSelector": "67f14276",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1226,
													"name": "_projectId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1223,
													"src": "2569:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1227,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1225,
												"name": "onlyProjectBeneficiary",
												"nameLocations": [
													"2546:22:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1121,
												"src": "2546:22:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2546:34:7"
										},
										{
											"id": 1229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1228,
												"name": "nonReentrant",
												"nameLocations": [
													"2581:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2581:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2581:12:7"
										}
									],
									"name": "executeProject",
									"nameLocation": "2502:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "2525:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2517:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2516:20:7"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2594:0:7"
									},
									"scope": 1293,
									"src": "2493:485:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "3041:63:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3085:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3089:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3085:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1285,
															"name": "titleRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "3059:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TitleRegistry_$1338",
																"typeString": "contract TitleRegistry"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3073:11:7",
														"memberName": "voterToCity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1306,
														"src": "3059:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
															"typeString": "function (address) view external returns (string memory)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3059:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1290,
												"nodeType": "Return",
												"src": "3052:44:7"
											}
										]
									},
									"functionSelector": "0379915d",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCity",
									"nameLocation": "2995:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3002:2:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3026:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3026:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3025:15:7"
									},
									"scope": 1293,
									"src": "2986:118:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1294,
							"src": "263:2844:7",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								1030,
								1038,
								1044
							]
						}
					],
					"src": "33:3076:7"
				},
				"id": 7
			},
			"contracts/Title.sol": {
				"ast": {
					"absolutePath": "contracts/Title.sol",
					"exportedSymbols": {
						"Context": [
							990
						],
						"Ownable": [
							147
						],
						"TitleRegistry": [
							1338
						]
					},
					"id": 1339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1339,
							"sourceUnit": 148,
							"src": "61:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1297,
										"name": "Ownable",
										"nameLocations": [
											"143:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "143:7:8"
									},
									"id": 1298,
									"nodeType": "InheritanceSpecifier",
									"src": "143:7:8"
								}
							],
							"canonicalName": "TitleRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1338,
							"linearizedBaseContracts": [
								1338,
								147,
								990
							],
							"name": "TitleRegistry",
							"nameLocation": "126:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c3c5a547",
									"id": 1302,
									"mutability": "mutable",
									"name": "isRegistered",
									"nameLocation": "190:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "158:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1301,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1299,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "166:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "158:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1300,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "177:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2146671f",
									"id": 1306,
									"mutability": "mutable",
									"name": "voterToCity",
									"nameLocation": "243:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "209:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 1305,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1303,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "217:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "209:26:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1304,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "228:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "325:2:8",
										"statements": []
									},
									"id": 1315,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1311,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1308,
													"src": "311:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1312,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1310,
												"name": "Ownable",
												"nameLocations": [
													"303:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "303:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "303:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "283:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "275:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:22:8"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:0:8"
									},
									"scope": 1338,
									"src": "263:64:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "414:84:8",
										"statements": [
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1324,
															"name": "isRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "425:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1326,
														"indexExpression": {
															"id": 1325,
															"name": "_voter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "438:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "425:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "448:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "425:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "425:27:8"
											},
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1330,
															"name": "voterToCity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "463:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 1332,
														"indexExpression": {
															"id": 1331,
															"name": "_voter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "475:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "463:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1333,
														"name": "_city",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "485:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "463:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "463:27:8"
											}
										]
									},
									"functionSelector": "ebbb4f84",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "onlyOwner",
												"nameLocations": [
													"404:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "404:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "404:9:8"
										}
									],
									"name": "registerVoter",
									"nameLocation": "344:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "_city",
												"nameLocation": "388:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "374:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "374:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:37:8"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:8"
									},
									"scope": 1338,
									"src": "335:163:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1339,
							"src": "117:384:8",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:470:8"
				},
				"id": 8
			}
		}
	}
}